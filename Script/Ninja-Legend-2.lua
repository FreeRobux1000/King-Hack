local liiIIIIi1l11liIIiil = assert local lliiiiII1IIIiI1I11i = select local lIl1IIIIi1l1l1I1iIi1l = tonumber local lIllilIllil1lIl111lIi = unpack local IIliil1lliIIii1l11I = pcall local Il1IliiI111llIlIl11 = setfenv local lIlil1iIlIIIliIi1Iii1 = setmetatable local i1i1Iill1iIiiiliIi1 = type local iilIlilI1iIIiIIII1I = getfenv local IllIi1llI1ii1lliiiI = tostring local lIlIIll1lIliI111IliII = error local IIiiilIiill1iII11il = string.sub local lllllilI1ll11lIilll = string.byte local iIiIi1lIi1iIIlll1II = string.char local lIl1iliIl1111il1iil1l = string.rep local lIlIlliIiiiil1I1illIl = string.gsub local llIIIIIi1l1Ill11lil = string.match local i1i1IlII11IlII1lIIl = table.insert local l1lil1lI111111iiI1i = lllllilI1ll11lIilll("6", 1) local lIlIl1l1I1iiill1lllil, iIlIl1I1Iili1llI111 = #{5387}, #{ 4291, 6019, 5661, 2788, 4167, 2542, 5843, 1714, 4034, 1146, 1250, 2632, 4224, 4770, 3490, 871, 4748, 4127, 6438, 1660, 5897 } + l1lil1lI111111iiI1i + 130996 local IIiIiiIiii1liII11ll = {} local ii1ll1IlI1li1il1llI = 1 local Ill1Ii1llll1IIiII11, liiiillIiliI1lliIIl local function lIl11IlIl1IIlI1i11IlI(lIi1IIIi11ilililIlI, II1IilI1Ii1Iili1IiI) local lIlilIIliillIiIIiIi11 lIi1IIIi11ilililIlI = lIlIlliIiiiil1I1illIl(IIiiilIiill1iII11il(lIi1IIIi11ilililIlI, 5), "..", function(l1ll11IilIiIlIl1Ii1) if lllllilI1ll11lIilll(l1ll11IilIiIlIl1Ii1, 2) == 72 then lIlilIIliillIiIIiIi11 = lIl1IIIIi1l1l1I1iIi1l(IIiiilIiill1iII11il(l1ll11IilIiIlIl1Ii1, 1, 1)) return "" else local I11llI1iiIlI11iliii = iIiIi1lIi1iIIlll1II(lIl1IIIIi1l1l1I1iIi1l(l1ll11IilIiIlIl1Ii1, 16)) if lIlilIIliillIiIIiIi11 then local lIllIi1IIl1I11lIliiI1 = lIl1iliIl1111il1iil1l(I11llI1iiIlI11iliii, lIlilIIliillIiIIiIi11) lIlilIIliillIiIIiIi11 = nil return lIllIi1IIl1I11lIliiI1 else return I11llI1iiIlI11iliii end end end) local function I11iiII1IiIl1111l1i() local ii1lI1illIi1Ii1Illi = lllllilI1ll11lIilll(lIi1IIIi11ilililIlI, ii1ll1IlI1li1il1llI, ii1ll1IlI1li1il1llI) ii1ll1IlI1li1il1llI = ii1ll1IlI1li1il1llI + 1 return ii1lI1illIi1Ii1Illi end local function lIl11li1iliIiIill1iil() local ii1lI1illIi1Ii1Illi, I11llI1iiIlI11iliii, lIllIi1IIl1I11lIliiI1, lIiIiII1llllili111l = lllllilI1ll11lIilll(lIi1IIIi11ilililIlI, ii1ll1IlI1li1il1llI, ii1ll1IlI1li1il1llI + 3) ii1ll1IlI1li1il1llI = ii1ll1IlI1li1il1llI + 4 return lIiIiII1llllili111l * 16777216 + lIllIi1IIl1I11lIliiI1 * 65536 + I11llI1iiIlI11iliii * 256 + ii1lI1illIi1Ii1Illi end local function Il1ll1Iil1IiIlI111l(lIillliIIl1lIIi1iil, I1liIIili1i1i1IIIi1, l1lI1liiIlI11I1IIIl) if l1lI1liiIlI11I1IIIl then local lIIIiII1IIl1IliIIi1, llIiii11IIIlIIl1I1i = 0, 0 for i1l11I111Ill1lll1i1 = I1liIIili1i1i1IIIi1, l1lI1liiIlI11I1IIIl do lIIIiII1IIl1IliIIi1 = lIIIiII1IIl1IliIIi1 + 2 ^ llIiii11IIIlIIl1I1i * Il1ll1Iil1IiIlI111l(lIillliIIl1lIIi1iil, i1l11I111Ill1lll1i1) llIiii11IIIlIIl1I1i = llIiii11IIIlIIl1I1i + 1 end return lIIIiII1IIl1IliIIi1 else local lll1I11l1iIii1I1i11 = 2 ^ (I1liIIili1i1i1IIIi1 - 1) return lll1I11l1iIii1I1i11 <= lIillliIIl1lIIi1iil % (lll1I11l1iIii1I1i11 + lll1I11l1iIii1I1i11) and 1 or 0 end end local function ilIlIiI1liiii1iIlIl() local ii1lI1illIi1Ii1Illi, I11llI1iiIlI11iliii = lIl11li1iliIiIill1iil(), lIl11li1iliIiIill1iil() if ii1lI1illIi1Ii1Illi == 0 and I11llI1iiIlI11iliii == 0 then return 0 end return (-2 * Il1ll1Iil1IiIlI111l(I11llI1iiIlI11iliii, 32) + 1) * 2 ^ (Il1ll1Iil1IiIlI111l(I11llI1iiIlI11iliii, 21, 31) - 1023) * ((Il1ll1Iil1IiIlI111l(I11llI1iiIlI11iliii, 1, 20) * 4294967296 + ii1lI1illIi1Ii1Illi) / 4503599627370496 + 1) end local ilii1II1iiIilI1I1I1 = bit or bit32 local lIl1I1llI11llIlIlIi11 = ilii1II1iiIilI1I1I1 and ilii1II1iiIilI1I1I1.bxor or function(ii1lI1illIi1Ii1Illi, I11llI1iiIlI11iliii) local Il1IlIllil1iIil1lIl = 1 local lIllIi1IIl1I11lIliiI1 = 0 while ii1lI1illIi1Ii1Illi > 0 and I11llI1iiIlI11iliii > 0 do local lIliI1lll1l1II1lil11i = ii1lI1illIi1Ii1Illi % 2 local li1iiI1I1li1ii1Iil1 = I11llI1iiIlI11iliii % 2 if lIliI1lll1l1II1lil11i ~= li1iiI1I1li1ii1Iil1 then lIllIi1IIl1I11lIliiI1 = lIllIi1IIl1I11lIliiI1 + Il1IlIllil1iIil1lIl end ii1lI1illIi1Ii1Illi = (ii1lI1illIi1Ii1Illi - lIliI1lll1l1II1lil11i) / 2 I11llI1iiIlI11iliii = (I11llI1iiIlI11iliii - li1iiI1I1li1ii1Iil1) / 2 Il1IlIllil1iIil1lIl = Il1IlIllil1iIil1lIl * 2 end if ii1lI1illIi1Ii1Illi < I11llI1iiIlI11iliii then ii1lI1illIi1Ii1Illi = I11llI1iiIlI11iliii end while ii1lI1illIi1Ii1Illi > 0 do local lIliI1lll1l1II1lil11i = ii1lI1illIi1Ii1Illi % 2 if lIliI1lll1l1II1lil11i > 0 then lIllIi1IIl1I11lIliiI1 = lIllIi1IIl1I11lIliiI1 + Il1IlIllil1iIil1lIl end ii1lI1illIi1Ii1Illi = (ii1lI1illIi1Ii1Illi - lIliI1lll1l1II1lil11i) / 2 Il1IlIllil1iIil1lIl = Il1IlIllil1iIil1lIl * 2 end return lIllIi1IIl1I11lIliiI1 end local function i1iIIilII1ilIi1ilIi(lIlll1i1IiIliIII11IiI) local l1Ii11lII1IlIIIIllI = { lllllilI1ll11lIilll(lIi1IIIi11ilililIlI, ii1ll1IlI1li1il1llI, ii1ll1IlI1li1il1llI + 3) } ii1ll1IlI1li1il1llI = ii1ll1IlI1li1il1llI + 4 local ii1lI1illIi1Ii1Illi = lIl1I1llI11llIlIlIi11(l1Ii11lII1IlIIIIllI[1], liiiillIiliI1lliIIl) local I11llI1iiIlI11iliii = lIl1I1llI11llIlIlIi11(l1Ii11lII1IlIIIIllI[2], liiiillIiliI1lliIIl) local lIllIi1IIl1I11lIliiI1 = lIl1I1llI11llIlIlIi11(l1Ii11lII1IlIIIIllI[3], liiiillIiliI1lliIIl) local lIiIiII1llllili111l = lIl1I1llI11llIlIlIi11(l1Ii11lII1IlIIIIllI[4], liiiillIiliI1lliIIl) liiiillIiliI1lliIIl = (193 * liiiillIiliI1lliIIl + lIlll1i1IiIliIII11IiI) % 256 return lIiIiII1llllili111l * 16777216 + lIllIi1IIl1I11lIliiI1 * 65536 + I11llI1iiIlI11iliii * 256 + ii1lI1illIi1Ii1Illi end local function lIl11liIIlIiilIIlIi11(lill1lIilIIIl1IiiiI) local IIllllIiIl111Il11ll = lIl11li1iliIiIill1iil() local llI1I1IiiIIiIIiliIi = "" for i1l11I111Ill1lll1i1 = lIlIl1l1I1iiill1lllil, IIllllIiIl111Il11ll do llI1I1IiiIIiIIiliIi = llI1I1IiiIIiIIiliIi .. iIiIi1lIi1iIIlll1II(lIl1I1llI11llIlIlIi11(lllllilI1ll11lIilll(lIi1IIIi11ilililIlI, ii1ll1IlI1li1il1llI + i1l11I111Ill1lll1i1 - 1), Ill1Ii1llll1IIiII11)) Ill1Ii1llll1IIiII11 = (lill1lIilIIIl1IiiiI * Ill1Ii1llll1IIiII11 + 117) % 256 end ii1ll1IlI1li1il1llI = ii1ll1IlI1li1il1llI + IIllllIiIl111Il11ll return llI1I1IiiIIiIIiliIi end Ill1Ii1llll1IIiII11 = I11iiII1IiIl1111l1i() liiiillIiliI1lliIIl = I11iiII1IiIl1111l1i() local iiIIl1I11IllIll1IlI = {} for i1l11I111Ill1lll1i1 = lIlIl1l1I1iiill1lllil, I11iiII1IiIl1111l1i() do local Il1iIllI1iiIillilIl = I11iiII1IiIl1111l1i() local IiIii11iiIl1IlIlIll = (i1l11I111Ill1lll1i1 - 1) * 2 iiIIl1I11IllIll1IlI[IiIii11iiIl1IlIlIll] = Il1ll1Iil1IiIlI111l(Il1iIllI1iiIillilIl, 1, 4) iiIIl1I11IllIll1IlI[IiIii11iiIl1IlIlIll + 1] = Il1ll1Iil1IiIlI111l(Il1iIllI1iiIillilIl, 5, 8) end local function i11ll1ilil1IiIl1IIi() local lIlIi1Iiil1I1IIlil1il = { {}, nil, {}, {}, {}, nil, nil } lIlIi1Iiil1I1IIlil1il[6] = I11iiII1IiIl1111l1i() local iilii1IIlliilI1i1il = lIl11li1iliIiIill1iil() for i1l11I111Ill1lll1i1 = lIlIl1l1I1iiill1lllil, iilii1IIlliilI1i1il do lIlIi1Iiil1I1IIlil1il[5][i1l11I111Ill1lll1i1 - lIlIl1l1I1iiill1lllil] = i11ll1ilil1IiIl1IIi() end local iilii1IIlliilI1i1il = lIl11li1iliIiIill1iil() - (#{ 6961, 4191, 1059, 4015, 4214, 1951, 5297, 4631, 4900, 2740, 5218, 278, 5815, 737, 6469, 4976, 2637, 2702, 1981, 2058, 2337 } + l1lil1lI111111iiI1i + 133699) local Ii111IlliiliilIII1I = I11iiII1IiIl1111l1i() for i1l11I111Ill1lll1i1 = lIlIl1l1I1iiill1lllil, iilii1IIlliilI1i1il do local ill11lIililI1IIlli1 local i1i1Iill1iIiiiliIi1 = I11iiII1IiIl1111l1i() if i1i1Iill1iIiiiliIi1 == #{ 3325, 4371, 2298, 6808, 5665, 5946, 72, 4940, 1002, 1691, 5782, 4181, 6624, 4979, 1567, 629, 4675, 6120, 4889, 823, 335, 4355, 1460, 5429 } + l1lil1lI111111iiI1i + -4 then ill11lIililI1IIlli1 = #{ 2264, 4576, 6895, 5457, 417, 6590, 6653, 949, 217, 2609, 2449, 1119, 3515, 3752, 5688, 415, 2390, 1723, 100, 5183, 3708, 4624, 2398, 3467 } + l1lil1lI111111iiI1i + 91764 == #{ 1251, 1289, 1102, 1617, 659, 383, 2616, 1234, 4177, 4467, 1893, 347, 2370, 4184, 971, 926, 1851, 2513, 3802, 2257 } + l1lil1lI111111iiI1i + 24832 end if i1i1Iill1iIiiiliIi1 == #{ 6883, 5124, 3910, 559, 4520, 1528, 5768, 4209, 6184, 3636, 3533, 1425, 3066, 724, 4233, 3098, 3629, 6075, 5584, 280, 6331 } + l1lil1lI111111iiI1i + 172 then ill11lIililI1IIlli1 = IIiiilIiill1iII11il(lIl11liIIlIiilIIlIi11(insEncKey), #{ 5520, 6837, 4112, 6400 }) end if i1i1Iill1iIiiiliIi1 == #{ 5570, 3632, 3046, 3276, 2043, 5198, 4159, 5786, 6844, 3431, 6860, 3783 } then ill11lIililI1IIlli1 = IIiiilIiill1iII11il(lIl11liIIlIiilIIlIi11(insEncKey), #{ 5520, 6837, 4112, 6400 }) end if i1i1Iill1iIiiiliIi1 == #{ 2435, 2775, 6132, 4485, 6807, 2269, 6166, 5885, 210, 1948, 1255, 1966, 2074, 4024, 554, 707, 1237, 657, 2150, 342, 1155, 6160, 4781 } + l1lil1lI111111iiI1i + 114 then ill11lIililI1IIlli1 = IIiiilIiill1iII11il(lIl11liIIlIiilIIlIi11(Ii111IlliiliilIII1I), #{ 772, 2404, 2898, 722 }) end if i1i1Iill1iIiiiliIi1 == #{ 3373, 1133, 6208, 338, 3276, 2244, 2443, 1495, 6783, 6816, 1579, 3830, 4537, 87, 1841, 5515, 2777, 1772, 2454, 6632, 6045, 3086 } + l1lil1lI111111iiI1i + 165 then ill11lIililI1IIlli1 = ilIlIiI1liiii1iIlIl() end if i1i1Iill1iIiiiliIi1 == #{ 1714, 3611, 6028, 909, 5216, 4780, 2286, 282, 2285, 558, 1432, 4026, 5223, 6310, 6877, 5836, 4063, 2363, 1733, 6739, 6749, 2866, 2690 } + l1lil1lI111111iiI1i + -6 then ill11lIililI1IIlli1 = ilIlIiI1liiii1iIlIl() end if i1i1Iill1iIiiiliIi1 == #{ 1101, 2148, 976, 2484, 972, 6103, 6781, 1257, 3023, 1856, 4667, 3237, 6165, 4785, 4664, 1667, 4502, 4671, 6876, 1017, 6083, 814, 5225 } + l1lil1lI111111iiI1i + 5 then ill11lIililI1IIlli1 = IIiiilIiill1iII11il(lIl11liIIlIiilIIlIi11(insEncKey), #{ 5520, 6837, 4112, 6400 }) end if i1i1Iill1iIiiiliIi1 == #{ 4896, 2159, 6031, 6482, 2351, 4326, 1472, 6412, 4586, 6576, 5666, 3634, 2787, 167, 3445, 339, 1571, 67, 2333, 169, 5857 } + l1lil1lI111111iiI1i + 156 then ill11lIililI1IIlli1 = #{ 6206, 2085, 44, 665, 6067, 3445, 4226, 2178, 752, 1940, 6491, 1242, 1954, 5945, 2488, 1573, 2335, 2891, 98, 5526, 729 } + l1lil1lI111111iiI1i + 100094 == #{ 6206, 2085, 44, 665, 6067, 3445, 4226, 2178, 752, 1940, 6491, 1242, 1954, 5945, 2488, 1573, 2335, 2891, 98, 5526, 729 } + l1lil1lI111111iiI1i + 100094 end if i1i1Iill1iIiiiliIi1 == #{ 2401, 6613, 578, 4059, 742, 2672, 980, 5998, 1898, 3440, 3526, 3088, 6650, 1027, 5936, 3362, 1694, 520, 2019, 6060, 5659, 3909 } + l1lil1lI111111iiI1i + 120 then ill11lIililI1IIlli1 = I11iiII1IiIl1111l1i() end lIlIi1Iiil1I1IIlil1il[1][i1l11I111Ill1lll1i1 - lIlIl1l1I1iiill1lllil] = ill11lIililI1IIlli1 end lIlIi1Iiil1I1IIlil1il[7] = I11iiII1IiIl1111l1i() I11iiII1IiIl1111l1i() local I1lllIlIii1l1llIili = lIl11li1iliIiIill1iil() - (#{ 1303, 3927, 6505, 368, 4655, 6363, 1918, 728, 4423, 5361, 394, 4825, 745, 2937, 3737, 2024, 51, 5894, 4829, 2648, 2304, 2454 } + l1lil1lI111111iiI1i + 133709) local lIl1lllIIiiiIIiI11lli = I11iiII1IiIl1111l1i() for i1l11I111Ill1lll1i1 = lIlIl1l1I1iiill1lllil, I1lllIlIii1l1llIili do local iiI1IlIIlliiil1lI1l = { nil, nil, nil, nil, nil, nil, nil, nil, nil, nil } local Il1iIllI1iiIillilIl = i1iIIilII1ilIi1ilIi(lIl1lllIIiiiIIiI11lli) iiI1IlIIlliiil1lI1l[6] = Il1ll1Iil1IiIlI111l(Il1iIllI1iiIillilIl, #{ 2119, 1092, 6773, 160, 2926, 1968, 561, 1269, 5249, 4836, 6922, 4450, 4746, 3504, 4651, 2620, 1809, 6586, 4035, 1538, 4230 } + l1lil1lI111111iiI1i + -48, #{ 3213, 4313, 6215, 605, 6161, 3169, 3898, 28, 1893, 2445, 385, 3341, 265, 3878, 3815, 5489, 3250, 487, 5144, 1482, 5535, 2618, 5145, 6386 } + l1lil1lI111111iiI1i + -46) iiI1IlIIlliiil1lI1l[5] = Il1ll1Iil1IiIlI111l(Il1iIllI1iiIillilIl, #{3913}, #{ 1727, 1093, 2423, 3020, 2261, 896, 2248, 2427, 475 }) iiI1IlIIlliiil1lI1l[8] = Il1ll1Iil1IiIlI111l(Il1iIllI1iiIillilIl, #{4031}, #{ 5099, 4486, 2349, 6185, 5661, 1552, 2946, 3437, 1425, 4460, 35, 5707, 4188, 2067, 4589, 2479, 5601, 6948 }) iiI1IlIIlliiil1lI1l[9] = Il1ll1Iil1IiIlI111l(Il1iIllI1iiIillilIl, #{ 5620, 3219, 5141, 2764, 1637, 5116, 3924, 5171, 2998, 4003 }, #{ 2299, 298, 5452, 2065, 1406, 4829, 3665, 6499, 3022, 2782, 977, 1291, 5676, 1494, 1025, 6249, 2735, 254 }) iiI1IlIIlliiil1lI1l[3] = Il1ll1Iil1IiIlI111l(Il1iIllI1iiIillilIl, #{ 317, 1391, 3724, 3775, 154, 4919, 4227, 6331, 5929, 6352, 1877, 1573, 664, 2896, 2735, 5666, 3946, 5181, 1305 }, #{ 4181, 6004, 2421, 5011, 1280, 5668, 4494, 4367, 1209, 4393, 4916, 4367, 2014, 4973, 6415, 1738, 5519, 2705, 2750, 1261, 5592, 3980, 2054 } + l1lil1lI111111iiI1i + -51) iiI1IlIIlliiil1lI1l[100710] = Il1ll1Iil1IiIlI111l(Il1iIllI1iiIillilIl, #{ 1219, 6604, 5376, 2467, 5881, 6443, 5467, 5907, 1542, 1871, 3018, 6551, 3009, 6769, 2836, 3700, 1210, 6705, 4397, 533, 6634 } + l1lil1lI111111iiI1i + -48, #{ 2039, 3040, 3094, 6240, 1373, 4417, 5094, 5755, 5222, 2361, 1612, 486, 4170, 4142, 522, 3363, 5038, 6589, 331, 6959, 1613 } + l1lil1lI111111iiI1i + -43) lIlIi1Iiil1I1IIlil1il[3][i1l11I111Ill1lll1i1] = iiI1IlIIlliiil1lI1l end for i1l11I111Ill1lll1i1 = lIlIl1l1I1iiill1lllil, I1lllIlIii1l1llIili do local iiI1IlIIlliiil1lI1l = lIlIi1Iiil1I1IIlil1il[3][i1l11I111Ill1lll1i1] local IlIi1illilIii1Ill11 = iiIIl1I11IllIll1IlI[iiI1IlIIlliiil1lI1l[6]] if IlIi1illilIii1Ill11 == #{4095} and iiI1IlIIlliiil1lI1l[5] > 255 then iiI1IlIIlliiil1lI1l[1] = true iiI1IlIIlliiil1lI1l[7] = lIlIi1Iiil1I1IIlil1il[1][iiI1IlIIlliiil1lI1l[5] - 256] end if IlIi1illilIii1Ill11 == #{258, 3861} and iiI1IlIIlliiil1lI1l[9] > 255 then iiI1IlIIlliiil1lI1l[10] = true iiI1IlIIlliiil1lI1l[4] = lIlIi1Iiil1I1IIlil1il[1][iiI1IlIIlliiil1lI1l[9] - 256] end if IlIi1illilIii1Ill11 == #{ 2412, 143, 4832 } then if iiI1IlIIlliiil1lI1l[5] > 255 then iiI1IlIIlliiil1lI1l[1] = true iiI1IlIIlliiil1lI1l[7] = lIlIi1Iiil1I1IIlil1il[1][iiI1IlIIlliiil1lI1l[5] - 256] end if iiI1IlIIlliiil1lI1l[9] > 255 then iiI1IlIIlliiil1lI1l[10] = true iiI1IlIIlliiil1lI1l[4] = lIlIi1Iiil1I1IIlil1il[1][iiI1IlIIlliiil1lI1l[9] - 256] end end if IlIi1illilIii1Ill11 == #{ 1661, 6816, 2354, 4631 } then iiI1IlIIlliiil1lI1l[2] = lIlIi1Iiil1I1IIlil1il[1][iiI1IlIIlliiil1lI1l[8]] end end lIl11li1iliIiIill1iil() lIl11li1iliIiIill1iil() I11iiII1IiIl1111l1i() I11iiII1IiIl1111l1i() lIl11li1iliIiIill1iil() local iilii1IIlliilI1i1il = lIl11li1iliIiIill1iil() for i1l11I111Ill1lll1i1 = lIlIl1l1I1iiill1lllil, iilii1IIlliilI1i1il do lIlIi1Iiil1I1IIlil1il[4][i1l11I111Ill1lll1i1] = lIl11li1iliIiIill1iil() end I11iiII1IiIl1111l1i() I11iiII1IiIl1111l1i() lIl11li1iliIiIill1iil() I11iiII1IiIl1111l1i() I11iiII1IiIl1111l1i() I11iiII1IiIl1111l1i() lIl11li1iliIiIill1iil() lIl11li1iliIiIill1iil() I11iiII1IiIl1111l1i() lIlIi1Iiil1I1IIlil1il[2] = I11iiII1IiIl1111l1i() lIl11li1iliIiIill1iil() lIl11li1iliIiIill1iil() lIl11li1iliIiIill1iil() return lIlIi1Iiil1I1IIlil1il end local function Ill1IlIilI1iliIiIli(lIlIi1Iiil1I1IIlil1il, II1IilI1Ii1Iili1IiI, ll1iI11I11IIiI1il1I) local ilIlililI1ll1IilIii, IiIIIiI1iI1i1lIl1I1 = 14, 18 local lIlIi1III1lil1iIIiIll = lIlIi1Iiil1I1IIlil1il[3] local lIlil1IllllI1IiiiiIl1 = 7 local lll1IiIlill11lilIII = lIlIi1Iiil1I1IIlil1il[5] local lI1lIlIli1lil1iliIi = lIlIi1Iiil1I1IIlil1il[6] local i1I1illii1IlI1iiI1I = lIlIi1Iiil1I1IIlil1il[2] local III1i1lIi1ili11IIii = 6 local lIl11I1llI1II1lii11Ii = lIlIi1Iiil1I1IIlil1il[4] local llI1IiIiiiIiii1lIi1 = 5 local function lIlIl1iIli1lIllIi1I1i(...) local liI1l1i1iiIIIlIIlI1 = 0 local lIlII1ii1liiIiIIiIi1i = { lIllilIllil1lIl111lIi({}, 1, i1I1illii1IlI1iiI1I) } local iIllIII1ilIliIilii1 = 1 local lIl1II1il1llli1lI1iii = {} local ilIl1lIil1IIii1I111 = {} local II1IilI1Ii1Iili1IiI = iilIlilI1iIIiIIII1I() local Ill11llIliIIl1lIiIl = { ... } local lIl1iIl1IIlIllIilliIi = #Ill11llIliIIl1lIiIl - 1 for i1l11I111Ill1lll1i1 = 0, lIl1iIl1IIlIllIilliIi do if i1l11I111Ill1lll1i1 < lI1lIlIli1lil1iliIi then lIlII1ii1liiIiIIiIi1i[i1l11I111Ill1lll1i1] = Ill11llIliIIl1lIiIl[i1l11I111Ill1lll1i1 + 1] end end local function llI1iiI1IIlill1I1Il(...) local lIllIi1IIl1I11lIliiI1 = lliiiiII1IIIiI1I11i("#", ...) local i1llI1l1li1iI11iii1 = { ... } return lIllIi1IIl1I11lIliiI1, i1llI1l1li1iI11iii1 end local function lIlIIl1Iiil1I1Illii1l() while true do local li1iilllI1llllIIiii = lIlIi1III1lil1iIIiIll[iIllIII1ilIliIilii1] local iIIIIiI11lIIiIIllI1 = li1iilllI1llllIIiii[6] iIllIII1ilIliIilii1 = iIllIII1ilIliIilii1 + 1 if iIIIIiI11lIIiIIllI1 >= 11 then if iIIIIiI11lIIiIIllI1 < 16 then if iIIIIiI11lIIiIIllI1 < 13 then if iIIIIiI11lIIiIIllI1 == 12 then if not not lIlII1ii1liiIiIIiIi1i[li1iilllI1llllIIiii[3]] == (li1iilllI1llllIIiii[9] == 0) then iIllIII1ilIliIilii1 = iIllIII1ilIliIilii1 + 1 end else lIlII1ii1liiIiIIiIi1i[li1iilllI1llllIIiii[3]] = li1iilllI1llllIIiii[2] end elseif iIIIIiI11lIIiIIllI1 < 14 then local I11llI1iiIlI11iliii, lIllIi1IIl1I11lIliiI1 if li1iilllI1llllIIiii[1] then I11llI1iiIlI11iliii = li1iilllI1llllIIiii[7] else I11llI1iiIlI11iliii = lIlII1ii1liiIiIIiIi1i[li1iilllI1llllIIiii[5]] end if li1iilllI1llllIIiii[10] then lIllIi1IIl1I11lIliiI1 = li1iilllI1llllIIiii[4] else lIllIi1IIl1I11lIliiI1 = lIlII1ii1liiIiIIiIi1i[li1iilllI1llllIIiii[9]] end lIlII1ii1liiIiIIiIi1i[li1iilllI1llllIIiii[3]] = I11llI1iiIlI11iliii * lIllIi1IIl1I11lIliiI1 elseif iIIIIiI11lIIiIIllI1 ~= 15 then if li1iilllI1llllIIiii[9] == 59 then iIllIII1ilIliIilii1 = iIllIII1ilIliIilii1 - 1 lIlIi1III1lil1iIIiIll[iIllIII1ilIliIilii1] = { [6] = 12, [3] = (li1iilllI1llllIIiii[3] - 194) % 256, [9] = (li1iilllI1llllIIiii[5] - 194) % 256 } else lIlII1ii1liiIiIIiIi1i[li1iilllI1llllIIiii[3]] = lIlII1ii1liiIiIIiIi1i[li1iilllI1llllIIiii[5]] end else local lIll111IIliiI1l11Il11 = li1iilllI1llllIIiii[3] local Ill11llIliIIl1lIiIl = li1iilllI1llllIIiii[5] local lIl1IlIIl1iIi1lillIIl = li1iilllI1llllIIiii[9] local lIli11iIliIlIIl1i1lil, I1illIIil1iI1Iil1Il, lIlIIl1Iiil1I1Illii1l if Ill11llIliIIl1lIiIl ~= 1 then if Ill11llIliIIl1lIiIl ~= 0 then I1illIIil1iI1Iil1Il = lIll111IIliiI1l11Il11 + Ill11llIliIIl1lIiIl - 1 else I1illIIil1iI1Iil1Il = liI1l1i1iiIIIlIIlI1 end I1illIIil1iI1Iil1Il, lIli11iIliIlIIl1i1lil = llI1iiI1IIlill1I1Il(lIlII1ii1liiIiIIiIi1i[lIll111IIliiI1l11Il11](lIllilIllil1lIl111lIi(lIlII1ii1liiIiIIiIi1i, lIll111IIliiI1l11Il11 + 1, I1illIIil1iI1Iil1Il))) else I1illIIil1iI1Iil1Il, lIli11iIliIlIIl1i1lil = llI1iiI1IIlill1I1Il(lIlII1ii1liiIiIIiIi1i[lIll111IIliiI1l11Il11]()) end if lIl1IlIIl1iIi1lillIIl ~= 1 then if lIl1IlIIl1iIi1lillIIl ~= 0 then I1illIIil1iI1Iil1Il = lIll111IIliiI1l11Il11 + lIl1IlIIl1iIi1lillIIl - 2 liI1l1i1iiIIIlIIlI1 = I1illIIil1iI1Iil1Il + 1 else I1illIIil1iI1Iil1Il = I1illIIil1iI1Iil1Il + lIll111IIliiI1l11Il11 - 1 liI1l1i1iiIIIlIIlI1 = I1illIIil1iI1Iil1Il end lIlIIl1Iiil1I1Illii1l = 0 for i1l11I111Ill1lll1i1 = lIll111IIliiI1l11Il11, I1illIIil1iI1Iil1Il do lIlIIl1Iiil1I1Illii1l = lIlIIl1Iiil1I1Illii1l + 1 lIlII1ii1liiIiIIiIi1i[i1l11I111Ill1lll1i1] = lIli11iIliIlIIl1i1lil[lIlIIl1Iiil1I1Illii1l] end else liI1l1i1iiIIIlIIlI1 = lIll111IIliiI1l11Il11 - 1 end for i1l11I111Ill1lll1i1 = liI1l1i1iiIIIlIIlI1 + 1, i1I1illii1IlI1iiI1I do lIlII1ii1liiIiIIiIi1i[i1l11I111Ill1lll1i1] = nil end end elseif iIIIIiI11lIIiIIllI1 >= 19 then if iIIIIiI11lIIiIIllI1 >= 20 then if iIIIIiI11lIIiIIllI1 ~= 21 then iIllIII1ilIliIilii1 = iIllIII1ilIliIilii1 + (li1iilllI1llllIIiii[8] - iIlIl1I1Iili1llI111) else lIl1II1il1llli1lI1iii[lIlII1ii1liiIiIIiIi1i] = nil local lIll111IIliiI1l11Il11 = li1iilllI1llllIIiii[3] local lII1IlliIii1li11i11 = li1iilllI1llllIIiii[5] if lII1IlliIii1li11i11 == 1 then return true end local I1illIIil1iI1Iil1Il = lIll111IIliiI1l11Il11 + lII1IlliIii1li11i11 - 2 if lII1IlliIii1li11i11 == 0 then I1illIIil1iI1Iil1Il = liI1l1i1iiIIIlIIlI1 end return true, lIll111IIliiI1l11Il11, I1illIIil1iI1Iil1Il end else lIlII1ii1liiIiIIiIi1i[li1iilllI1llllIIiii[3]] = { lIllilIllil1lIl111lIi(IIiIiiIiii1liII11ll, 1, li1iilllI1llllIIiii[5] == 0 and 255 or li1iilllI1llllIIiii[5]) } end elseif iIIIIiI11lIIiIIllI1 >= 17 then if iIIIIiI11lIIiIIllI1 == 18 then lIlII1ii1liiIiIIiIi1i[li1iilllI1llllIIiii[3]] = ll1iI11I11IIiI1il1I[li1iilllI1llllIIiii[5]] else local lIIiiilIiiI1Ii11lIi = lll1IiIlill11lilIII[li1iilllI1llllIIiii[8]] local iiIil111llill1I1iIi = {} if lIIiiilIiiI1Ii11lIi[lIlil1IllllI1IiiiiIl1] > 0 then do local I1Iill1Iiii1li11lIi = {} iiIil111llill1I1iIi = lIlil1iIlIIIliIi1Iii1({}, { __index = function(i1llI1l1li1iI11iii1, lIlil1IlIilIiiI11I11i) local lIllliiI1Ii1I1ilIIiIi = I1Iill1Iiii1li11lIi[lIlil1IlIilIiiI11I11i] return lIllliiI1Ii1I1ilIIiIi[1][lIllliiI1Ii1I1ilIIiIi[2]] end, __newindex = function(i1llI1l1li1iI11iii1, lIlil1IlIilIiiI11I11i, il1iIIll1illlilI1ii) local lIllliiI1Ii1I1ilIIiIi = I1Iill1Iiii1li11lIi[lIlil1IlIilIiiI11I11i] lIllliiI1Ii1I1ilIIiIi[1][lIllliiI1Ii1I1ilIIiIi[2]] = il1iIIll1illlilI1ii end }) for i1l11I111Ill1lll1i1 = 1, lIIiiilIiiI1Ii11lIi[lIlil1IllllI1IiiiiIl1] do local iI1IIl1I11l1iillIi1 = lIlIi1III1lil1iIIiIll[iIllIII1ilIliIilii1] if iI1IIl1I11l1iillIi1[III1i1lIi1ili11IIii] == ilIlililI1ll1IilIii then I1Iill1Iiii1li11lIi[i1l11I111Ill1lll1i1 - 1] = { lIlII1ii1liiIiIIiIi1i, iI1IIl1I11l1iillIi1[llI1IiIiiiIiii1lIi1] } elseif iI1IIl1I11l1iillIi1[III1i1lIi1ili11IIii] == IiIIIiI1iI1i1lIl1I1 then I1Iill1Iiii1li11lIi[i1l11I111Ill1lll1i1 - 1] = { ll1iI11I11IIiI1il1I, iI1IIl1I11l1iillIi1[llI1IiIiiiIiii1lIi1] } end iIllIII1ilIliIilii1 = iIllIII1ilIliIilii1 + 1 end if not lIl1II1il1llli1lI1iii[lIlII1ii1liiIiIIiIi1i] then lIl1II1il1llli1lI1iii[lIlII1ii1liiIiIIiIi1i] = {I1Iill1Iiii1li11lIi} else i1i1IlII11IlII1lIIl(lIl1II1il1llli1lI1iii[lIlII1ii1liiIiIIiIi1i], I1Iill1Iiii1li11lIi) end end end local l1ilIil1l1llIIil1lI = Ill1IlIilI1iliIiIli(lIIiiilIiiI1Ii11lIi, II1IilI1Ii1Iili1IiI, iiIil111llill1I1iIi) lIlII1ii1liiIiIIiIi1i[li1iilllI1llllIIiii[3]] = l1ilIil1l1llIIil1lI end else local I11llI1iiIlI11iliii, lIllIi1IIl1I11lIliiI1 if li1iilllI1llllIIiii[1] then I11llI1iiIlI11iliii = li1iilllI1llllIIiii[7] else I11llI1iiIlI11iliii = lIlII1ii1liiIiIIiIi1i[li1iilllI1llllIIiii[5]] end if li1iilllI1llllIIiii[10] then lIllIi1IIl1I11lIliiI1 = li1iilllI1llllIIiii[4] else lIllIi1IIl1I11lIliiI1 = lIlII1ii1liiIiIIiIi1i[li1iilllI1llllIIiii[9]] end lIlII1ii1liiIiIIiIi1i[li1iilllI1llllIIiii[3]][I11llI1iiIlI11iliii] = lIllIi1IIl1I11lIliiI1 end elseif iIIIIiI11lIIiIIllI1 < 5 then if iIIIIiI11lIIiIIllI1 >= 2 then if iIIIIiI11lIIiIIllI1 < 3 then local IiIii11iiIl1IlIlIll = (li1iilllI1llllIIiii[9] - 1) * 50 local I1Ii1il11Ill11i11I1 = li1iilllI1llllIIiii[5] if I1Ii1il11Ill11i11I1 == 0 then I1Ii1il11Ill11i11I1 = liI1l1i1iiIIIlIIlI1 - li1iilllI1llllIIiii[3] end for i1l11I111Ill1lll1i1 = 1, I1Ii1il11Ill11i11I1 do lIlII1ii1liiIiIIiIi1i[li1iilllI1llllIIiii[3]][IiIii11iiIl1IlIlIll + i1l11I111Ill1lll1i1] = lIlII1ii1liiIiIIiIi1i[li1iilllI1llllIIiii[3] + i1l11I111Ill1lll1i1] end elseif iIIIIiI11lIIiIIllI1 == 4 then lIlII1ii1liiIiIIiIi1i[li1iilllI1llllIIiii[3]] = li1iilllI1llllIIiii[5] ~= 0 if li1iilllI1llllIIiii[9] ~= 0 then iIllIII1ilIliIilii1 = iIllIII1ilIliIilii1 + 1 end else local lIllIi1IIl1I11lIliiI1 if li1iilllI1llllIIiii[10] then lIllIi1IIl1I11lIliiI1 = li1iilllI1llllIIiii[4] else lIllIi1IIl1I11lIliiI1 = lIlII1ii1liiIiIIiIi1i[li1iilllI1llllIIiii[9]] end lIlII1ii1liiIiIIiIi1i[li1iilllI1llllIIiii[3]] = lIlII1ii1liiIiIIiIi1i[li1iilllI1llllIIiii[5]][lIllIi1IIl1I11lIliiI1] end elseif iIIIIiI11lIIiIIllI1 == 1 then local I11llI1iiIlI11iliii, lIllIi1IIl1I11lIliiI1 if li1iilllI1llllIIiii[1] then I11llI1iiIlI11iliii = li1iilllI1llllIIiii[7] else I11llI1iiIlI11iliii = lIlII1ii1liiIiIIiIi1i[li1iilllI1llllIIiii[5]] end if li1iilllI1llllIIiii[10] then lIllIi1IIl1I11lIliiI1 = li1iilllI1llllIIiii[4] else lIllIi1IIl1I11lIliiI1 = lIlII1ii1liiIiIIiIi1i[li1iilllI1llllIIiii[9]] end if I11llI1iiIlI11iliii == lIllIi1IIl1I11lIliiI1 ~= (li1iilllI1llllIIiii[3] ~= 0) then iIllIII1ilIliIilii1 = iIllIII1ilIliIilii1 + 1 end else lIlII1ii1liiIiIIiIi1i[li1iilllI1llllIIiii[3]] = II1IilI1Ii1Iili1IiI[li1iilllI1llllIIiii[2]] end elseif iIIIIiI11lIIiIIllI1 < 8 then if iIIIIiI11lIIiIIllI1 < 6 then if li1iilllI1llllIIiii[9] == 132 then iIllIII1ilIliIilii1 = iIllIII1ilIliIilii1 - 1 lIlIi1III1lil1iIIiIll[iIllIII1ilIliIilii1] = { [6] = 8, [3] = (li1iilllI1llllIIiii[3] - 221) % 256, [9] = (li1iilllI1llllIIiii[5] - 221) % 256 } else ll1iI11I11IIiI1il1I[li1iilllI1llllIIiii[5]] = lIlII1ii1liiIiIIiIi1i[li1iilllI1llllIIiii[3]] end elseif iIIIIiI11lIIiIIllI1 == 7 then II1IilI1Ii1Iili1IiI[li1iilllI1llllIIiii[2]] = lIlII1ii1liiIiIIiIi1i[li1iilllI1llllIIiii[3]] elseif li1iilllI1llllIIiii[9] == 241 then iIllIII1ilIliIilii1 = iIllIII1ilIliIilii1 - 1 lIlIi1III1lil1iIIiIll[iIllIII1ilIliIilii1] = { [6] = 5, [3] = (li1iilllI1llllIIiii[3] - 119) % 256, [5] = (li1iilllI1llllIIiii[5] - 119) % 256 } else local lIliIlii1I1llIliIlI1i = li1iilllI1llllIIiii[3] local IlilIiIl1iil1liIilI = {} for iIiil1I1ilI1I1Ii1I1, I1Iill1Iiii1li11lIi in pairs(lIl1II1il1llli1lI1iii[lIlII1ii1liiIiIIiIi1i]) do for iIiil1I1ilI1I1Ii1I1, lIllliiI1Ii1I1ilIIiIi in pairs(I1Iill1Iiii1li11lIi) do if lIllliiI1Ii1I1ilIIiIi[1] == lIlII1ii1liiIiIIiIi1i and lIliIlii1I1llIliIlI1i <= lIllliiI1Ii1I1ilIIiIi[2] then local l1iI1IIlIi1Ill1iiIi = lIllliiI1Ii1I1ilIIiIi[2] if not IlilIiIl1iil1liIilI[l1iI1IIlIi1Ill1iiIi] then Ill1IlIilI1iliIiIli(ilIl1lIil1IIii1I111, lIlII1ii1liiIiIIiIi1i[l1iI1IIlIi1Ill1iiIi]) IlilIiIl1iil1liIilI[l1iI1IIlIi1Ill1iiIi] = #ilIl1lIil1IIii1I111 end lIllliiI1Ii1I1ilIIiIi[1] = ilIl1lIil1IIii1I111 lIllliiI1Ii1I1ilIIiIi[2] = IlilIiIl1iil1liIilI[l1iI1IIlIi1Ill1iiIi] end end end end elseif iIIIIiI11lIIiIIllI1 < 9 then if li1iilllI1llllIIiii[5] == 88 then iIllIII1ilIliIilii1 = iIllIII1ilIliIilii1 - 1 lIlIi1III1lil1iIIiIll[iIllIII1ilIliIilii1] = { [6] = 18, [3] = (li1iilllI1llllIIiii[3] - 70) % 256, [5] = (li1iilllI1llllIIiii[9] - 70) % 256 } elseif li1iilllI1llllIIiii[5] == 239 then iIllIII1ilIliIilii1 = iIllIII1ilIliIilii1 - 1 lIlIi1III1lil1iIIiIll[iIllIII1ilIliIilii1] = { [6] = 21, [3] = (li1iilllI1llllIIiii[3] - 218) % 256, [5] = (li1iilllI1llllIIiii[9] - 218) % 256 } else local lIll111IIliiI1l11Il11 = li1iilllI1llllIIiii[3] local IiIii11iiIl1IlIlIll = lIll111IIliiI1l11Il11 + 2 local iI1IIIi1IlIli11i1l1 = { lIlII1ii1liiIiIIiIi1i[lIll111IIliiI1l11Il11](lIlII1ii1liiIiIIiIi1i[lIll111IIliiI1l11Il11 + 1], lIlII1ii1liiIiIIiIi1i[lIll111IIliiI1l11Il11 + 2]) } for i1l11I111Ill1lll1i1 = 1, li1iilllI1llllIIiii[9] do lIlII1ii1liiIiIIiIi1i[IiIii11iiIl1IlIlIll + i1l11I111Ill1lll1i1] = iI1IIIi1IlIli11i1l1[i1l11I111Ill1lll1i1] end if lIlII1ii1liiIiIIiIi1i[lIll111IIliiI1l11Il11 + 3] ~= nil then lIlII1ii1liiIiIIiIi1i[lIll111IIliiI1l11Il11 + 2] = lIlII1ii1liiIiIIiIi1i[lIll111IIliiI1l11Il11 + 3] else iIllIII1ilIliIilii1 = iIllIII1ilIliIilii1 + 1 end end elseif iIIIIiI11lIIiIIllI1 == 10 then local lIl1iIiIi1lllllIiIi11 = lIlII1ii1liiIiIIiIi1i[li1iilllI1llllIIiii[5]] local lIllIi1IIl1I11lIliiI1 if li1iilllI1llllIIiii[10] then lIllIi1IIl1I11lIliiI1 = li1iilllI1llllIIiii[4] else lIllIi1IIl1I11lIliiI1 = lIlII1ii1liiIiIIiIi1i[li1iilllI1llllIIiii[9]] end lIlII1ii1liiIiIIiIi1i[li1iilllI1llllIIiii[3] + 1] = lIl1iIiIi1lllllIiIi11 lIlII1ii1liiIiIIiIi1i[li1iilllI1llllIIiii[3]] = lIl1iIiIi1lllllIiIi11[lIllIi1IIl1I11lIliiI1] elseif li1iilllI1llllIIiii[9] == 148 then iIllIII1ilIliIilii1 = iIllIII1ilIliIilii1 - 1 lIlIi1III1lil1iIIiIll[iIllIII1ilIliIilii1] = { [6] = 14, [3] = (li1iilllI1llllIIiii[3] - 37) % 256, [5] = (li1iilllI1llllIIiii[5] - 37) % 256 } else for i1l11I111Ill1lll1i1 = li1iilllI1llllIIiii[3], li1iilllI1llllIIiii[5] do lIlII1ii1liiIiIIiIi1i[i1l11I111Ill1lll1i1] = nil end end end end local lIl1il1ll11IIIIli11, llI1I1IiiIIiIIiliIi, lIliIlii1I1llIliIlI1i, lllIIIlIliiIIii1ilI = IIliil1lliIIii1l11I(lIlIIl1Iiil1I1Illii1l) if lIl1il1ll11IIIIli11 then if lIliIlii1I1llIliIlI1i then return lIllilIllil1lIl111lIi(lIlII1ii1liiIiIIiIi1i, lIliIlii1I1llIliIlI1i, lllIIIlIliiIIii1ilI) end else lIlIIll1lIliI111IliII("Luraph Script:" .. (lIl11I1llI1II1lii11Ii[iIllIII1ilIliIilii1 - 1] or "") .. ": " .. IllIi1llI1ii1lliiiI(llI1I1IiiIIiIIiliIi), 0) end end Il1IliiI111llIlIl11(lIlIl1iIli1lIllIi1I1i, II1IilI1Ii1Iili1IiI) return lIlIl1iIli1lIllIi1I1i end local IlilIiIl1iil1liIilI = i11ll1ilil1IiIl1IIi() return Ill1IlIilI1iliIiIli(IlilIiIl1iil1liIilI, II1IilI1Ii1Iili1IiI)() end lIl11IlIl1IIlI1i11IlI("LPH!", iilIlilI1iIIiIIII1I()) 