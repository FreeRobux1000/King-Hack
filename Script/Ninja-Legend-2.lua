local iIi1IilI111iIlli1ll = assert local lIllIli11ill11l111l11 = select local lIliiIIli11lIIilliIi1 = tonumber local IIIiIIll1I1ilIi1ili = unpack local liill1II1ilIiIil1I1 = pcall local IlllIl1i111IIlIilil = setfenv local IilIIIiIIlIIIliiIIl = setmetatable local IllIl1I1liIii1IiilI = type local IliI1i1iilI1iIi1ill = getfenv local lIl1lI11I1I1l11iIIIIi = tostring local lIl1111i1111llIlIi11l = error local lIl11il1IlI1I1Ii1II1l = string.sub local llIIii111lIilllIlI1 = string.byte local Il1IillIill1Iii1ii1 = string.char local lIlllIIlI1Iil1lIi1ili = string.rep local lIl1iI1ilIli11I1I1iii = string.gsub local IiIiIIlI1il1l1liIil = string.match local lIlli1IlIII1I1i1iilil = table.insert local lIl1iillIIii11il1I11i = llIIii111lIilllIlI1("}", 1) local IIiiIIlIl111iI1li1I, lIlI111IlIIllllI1ilI1 = #{4775}, #{ 2165, 976, 5997, 5894, 4035, 6334, 4504, 2957, 2979, 3209, 5813, 3288, 333, 3394, 6862, 5478, 1088, 1696, 5913, 4532, 2801, 6664 } + lIl1iillIIii11il1I11i + 130924 local ll11iII1illlIil111i = {} local i1IIl1Iilll1lI1l1li = 1 local lIlllliIiiiIi1iI1iiii, lIlill1lill11iIliIll1 local function IlIIi11iI1111i1Ii1I(IIl1IllIii1ii1Il1lI, lIl1lliiIiIl11li1i1ii) local Ili1I1ll1ii1l111l1I IIl1IllIii1ii1Il1lI = lIl1iI1ilIli11I1I1iii(lIl11il1IlI1I1Ii1II1l(IIl1IllIii1ii1Il1lI, 5), "..", function(Il1IIilliI1II1lliil) if llIIii111lIilllIlI1(Il1IIilliI1II1lliil, 2) == 72 then Ili1I1ll1ii1l111l1I = lIliiIIli11lIIilliIi1(lIl11il1IlI1I1Ii1II1l(Il1IIilliI1II1lliil, 1, 1)) return "" else local lIlilill1lillli1IliI1 = Il1IillIill1Iii1ii1(lIliiIIli11lIIilliIi1(Il1IIilliI1II1lliil, 16)) if Ili1I1ll1ii1l111l1I then local i1liIilII1ll1I1iIIi = lIlllIIlI1Iil1lIi1ili(lIlilill1lillli1IliI1, Ili1I1ll1ii1l111l1I) Ili1I1ll1ii1l111l1I = nil return i1liIilII1ll1I1iIIi else return lIlilill1lillli1IliI1 end end end) local function iIiiilllIlI1ii1I1Ii() local iIlilllIIli1IlilIll = llIIii111lIilllIlI1(IIl1IllIii1ii1Il1lI, i1IIl1Iilll1lI1l1li, i1IIl1Iilll1lI1l1li) i1IIl1Iilll1lI1l1li = i1IIl1Iilll1lI1l1li + 1 return iIlilllIIli1IlilIll end local function lIliliiIlII1IIIllIi11() local iIlilllIIli1IlilIll, lIlilill1lillli1IliI1, i1liIilII1ll1I1iIIi, I1I11IiiIili1Illlil = llIIii111lIilllIlI1(IIl1IllIii1ii1Il1lI, i1IIl1Iilll1lI1l1li, i1IIl1Iilll1lI1l1li + 3) i1IIl1Iilll1lI1l1li = i1IIl1Iilll1lI1l1li + 4 return I1I11IiiIili1Illlil * 16777216 + i1liIilII1ll1I1iIIi * 65536 + lIlilill1lillli1IliI1 * 256 + iIlilllIIli1IlilIll end local function IllI1liliII1iiliilI(i1Il1III1llIll1lliI, IiIIlil11iIliil1lIi, IIiilIl1iIil1iiI11I) if IIiilIl1iIil1iiI11I then local lIliIiI1liiii1111iI11, iiIiI1Ili1lIIii1i1i = 0, 0 for illi1IilIi1l11lllI1 = IiIIlil11iIliil1lIi, IIiilIl1iIil1iiI11I do lIliIiI1liiii1111iI11 = lIliIiI1liiii1111iI11 + 2 ^ iiIiI1Ili1lIIii1i1i * IllI1liliII1iiliilI(i1Il1III1llIll1lliI, illi1IilIi1l11lllI1) iiIiI1Ili1lIIii1i1i = iiIiI1Ili1lIIii1i1i + 1 end return lIliIiI1liiii1111iI11 else local iilI11ilII1lilIlill = 2 ^ (IiIIlil11iIliil1lIi - 1) return iilI11ilII1lilIlill <= i1Il1III1llIll1lliI % (iilI11ilII1lilIlill + iilI11ilII1lilIlill) and 1 or 0 end end local function lIllI1lI1llliIi1I1i() local iIlilllIIli1IlilIll, lIlilill1lillli1IliI1 = lIliliiIlII1IIIllIi11(), lIliliiIlII1IIIllIi11() if iIlilllIIli1IlilIll == 0 and lIlilill1lillli1IliI1 == 0 then return 0 end return (-2 * IllI1liliII1iiliilI(lIlilill1lillli1IliI1, 32) + 1) * 2 ^ (IllI1liliII1iiliilI(lIlilill1lillli1IliI1, 21, 31) - 1023) * ((IllI1liliII1iiliilI(lIlilill1lillli1IliI1, 1, 20) * 4294967296 + iIlilllIIli1IlilIll) / 4503599627370496 + 1) end local iliIli11Ilili1l1iI1 = bit or bit32 local l1Il1iIll1i1l1iIll1 = iliIli11Ilili1l1iI1 and iliIli11Ilili1l1iI1.bxor or function(iIlilllIIli1IlilIll, lIlilill1lillli1IliI1) local lIl1llIlilIliliI1IlI1 = 1 local i1liIilII1ll1I1iIIi = 0 while iIlilllIIli1IlilIll > 0 and lIlilill1lillli1IliI1 > 0 do local IIlil11I1Illiiil1Ii = iIlilllIIli1IlilIll % 2 local lIl1iIiiIl1ilIIilIl11 = lIlilill1lillli1IliI1 % 2 if IIlil11I1Illiiil1Ii ~= lIl1iIiiIl1ilIIilIl11 then i1liIilII1ll1I1iIIi = i1liIilII1ll1I1iIIi + lIl1llIlilIliliI1IlI1 end iIlilllIIli1IlilIll = (iIlilllIIli1IlilIll - IIlil11I1Illiiil1Ii) / 2 lIlilill1lillli1IliI1 = (lIlilill1lillli1IliI1 - lIl1iIiiIl1ilIIilIl11) / 2 lIl1llIlilIliliI1IlI1 = lIl1llIlilIliliI1IlI1 * 2 end if iIlilllIIli1IlilIll < lIlilill1lillli1IliI1 then iIlilllIIli1IlilIll = lIlilill1lillli1IliI1 end while iIlilllIIli1IlilIll > 0 do local IIlil11I1Illiiil1Ii = iIlilllIIli1IlilIll % 2 if IIlil11I1Illiiil1Ii > 0 then i1liIilII1ll1I1iIIi = i1liIilII1ll1I1iIIi + lIl1llIlilIliliI1IlI1 end iIlilllIIli1IlilIll = (iIlilllIIli1IlilIll - IIlil11I1Illiiil1Ii) / 2 lIl1llIlilIliliI1IlI1 = lIl1llIlilIliliI1IlI1 * 2 end return i1liIilII1ll1I1iIIi end local function lI11ilI11iI1III1l1I(lIlIllli1Iil1iiIllI1i) local illll1IIlIII1iI1iil = { llIIii111lIilllIlI1(IIl1IllIii1ii1Il1lI, i1IIl1Iilll1lI1l1li, i1IIl1Iilll1lI1l1li + 3) } i1IIl1Iilll1lI1l1li = i1IIl1Iilll1lI1l1li + 4 local iIlilllIIli1IlilIll = l1Il1iIll1i1l1iIll1(illll1IIlIII1iI1iil[1], lIlill1lill11iIliIll1) local lIlilill1lillli1IliI1 = l1Il1iIll1i1l1iIll1(illll1IIlIII1iI1iil[2], lIlill1lill11iIliIll1) local i1liIilII1ll1I1iIIi = l1Il1iIll1i1l1iIll1(illll1IIlIII1iI1iil[3], lIlill1lill11iIliIll1) local I1I11IiiIili1Illlil = l1Il1iIll1i1l1iIll1(illll1IIlIII1iI1iil[4], lIlill1lill11iIliIll1) lIlill1lill11iIliIll1 = (181 * lIlill1lill11iIliIll1 + lIlIllli1Iil1iiIllI1i) % 256 return I1I11IiiIili1Illlil * 16777216 + i1liIilII1ll1I1iIIi * 65536 + lIlilill1lillli1IliI1 * 256 + iIlilllIIli1IlilIll end local function ilI1Ii1IlIli1lII1iI(lIl11lIlll111li1iliIl) local li1iiII1i1illliliI1 = lIliliiIlII1IIIllIi11() local lIiil1l1IIiiiil1Il1 = "" for illi1IilIi1l11lllI1 = IIiiIIlIl111iI1li1I, li1iiII1i1illliliI1 do lIiil1l1IIiiiil1Il1 = lIiil1l1IIiiiil1Il1 .. Il1IillIill1Iii1ii1(l1Il1iIll1i1l1iIll1(llIIii111lIilllIlI1(IIl1IllIii1ii1Il1lI, i1IIl1Iilll1lI1l1li + illi1IilIi1l11lllI1 - 1), lIlllliIiiiIi1iI1iiii)) lIlllliIiiiIi1iI1iiii = (lIl11lIlll111li1iliIl * lIlllliIiiiIi1iI1iiii + 107) % 256 end i1IIl1Iilll1lI1l1li = i1IIl1Iilll1lI1l1li + li1iiII1i1illliliI1 return lIiil1l1IIiiiil1Il1 end lIlllliIiiiIi1iI1iiii = iIiiilllIlI1ii1I1Ii() lIlill1lill11iIliIll1 = iIiiilllIlI1ii1I1Ii() local lIllIlil1i1IlI1ll1l1l = {} for illi1IilIi1l11lllI1 = IIiiIIlIl111iI1li1I, iIiiilllIlI1ii1I1Ii() do local iIilliIllIi1iiIi11l = iIiiilllIlI1ii1I1Ii() local IlIilIIl1i1lIil1lli = (illi1IilIi1l11lllI1 - 1) * 2 lIllIlil1i1IlI1ll1l1l[IlIilIIl1i1lIil1lli] = IllI1liliII1iiliilI(iIilliIllIi1iiIi11l, 1, 4) lIllIlil1i1IlI1ll1l1l[IlIilIIl1i1lIil1lli + 1] = IllI1liliII1iiliilI(iIilliIllIi1iiIi11l, 5, 8) end local function l1il1iIIIIililii1il() local lIl1Ill1il1li1i1iIIIi = { nil, {}, {}, {}, {}, nil, nil } local l11iI1Iillii1lllll1 = lIliliiIlII1IIIllIi11() for illi1IilIi1l11lllI1 = IIiiIIlIl111iI1li1I, l11iI1Iillii1lllll1 do lIl1Ill1il1li1i1iIIIi[2][illi1IilIi1l11lllI1 - IIiiIIlIl111iI1li1I] = l1il1iIIIIililii1il() end local i1l1ll1llIIIiI1l1I1 = lIliliiIlII1IIIllIi11() - (#{ 6428, 5063, 6153, 5163, 5353, 6086, 718, 1859, 2505, 6463, 2163, 3291, 1631, 4176, 741, 1493, 3617, 6351, 5947, 2964, 6671, 245, 3207, 1921 } + lIl1iillIIii11il1I11i + 133574) local lIlIilI11iI1l1iIiIiIl = iIiiilllIlI1ii1I1Ii() for illi1IilIi1l11lllI1 = IIiiIIlIl111iI1li1I, i1l1ll1llIIIiI1l1I1 do local IiiIiIllIl1lIIlII1l = { nil, nil, nil, nil, nil, nil, nil, nil, nil, nil } local iIilliIllIi1iiIi11l = lI11ilI11iI1III1l1I(lIlIilI11iI1l1iIiIiIl) IiiIiIllIl1lIIlII1l[8] = IllI1liliII1iiliilI(iIilliIllIi1iiIi11l, #{ 3342, 2365, 3251, 6507, 1532, 2720, 6457, 880, 6241, 5904 }, #{ 3189, 942, 2800, 976, 6763, 3994, 6528, 776, 592, 5077, 4279, 6751, 1648, 6804, 1467, 496, 3848, 4405 }) IiiIiIllIl1lIIlII1l[9] = IllI1liliII1iiliilI(iIilliIllIi1iiIi11l, #{684}, #{ 1841, 4020, 555, 1865, 2272, 2941, 3182, 6285, 763, 2261, 1174, 6193, 1052, 3319, 6477, 1632, 3097, 688 }) IiiIiIllIl1lIIlII1l[7] = IllI1liliII1iiliilI(iIilliIllIi1iiIi11l, #{ 1420, 2288, 4751, 5674, 3943, 3265, 5945, 3927, 5624, 4644, 61, 434, 4430, 4636, 886, 5455, 4196, 2547, 6846, 4020, 1117, 2983 } + lIl1iillIIii11il1I11i + -120, #{ 4912, 5683, 3053, 1841, 2292, 4286, 1718, 3969, 3717, 3476, 2794, 1488, 1379, 3442, 1098, 3677, 5408, 5128, 3388, 144, 6495, 2240, 2423 } + lIl1iillIIii11il1I11i + -116) IiiIiIllIl1lIIlII1l[10] = IllI1liliII1iiliilI(iIilliIllIi1iiIi11l, #{ 2214, 479, 5336, 872, 1980, 3687, 6633, 5767, 6736, 1109, 1401, 5809, 763, 3867, 2009, 4173, 375, 3368, 3786 }, #{ 6674, 250, 5414, 3559, 2373, 3868, 6547, 4201, 5191, 2082, 6495, 1875, 6650, 3911, 4571, 2322, 3544, 5130, 1336, 2489, 5755 } + lIl1iillIIii11il1I11i + -120) IiiIiIllIl1lIIlII1l[6] = IllI1liliII1iiliilI(iIilliIllIi1iiIi11l, #{5938}, #{ 6189, 3562, 2838, 6554, 3475, 4894, 3504, 2791, 5430 }) lIl1Ill1il1li1i1iIIIi[3][illi1IilIi1l11lllI1] = IiiIiIllIl1lIIlII1l end iIiiilllIlI1ii1I1Ii() lIliliiIlII1IIIllIi11() lIliliiIlII1IIIllIi11() lIliliiIlII1IIIllIi11() iIiiilllIlI1ii1I1Ii() lIliliiIlII1IIIllIi11() lIl1Ill1il1li1i1iIIIi[1] = iIiiilllIlI1ii1I1Ii() local l11iI1Iillii1lllll1 = lIliliiIlII1IIIllIi11() - (#{ 4207, 4946, 3021, 2598, 5541, 4178, 3906, 2122, 3781, 2427, 3763, 4910, 2328, 2013, 4321, 3071, 6866, 1656, 3659, 4377, 2816, 4671, 3059, 3863 } + lIl1iillIIii11il1I11i + 133631) local lIll1lIliIiiilIIIiIli = iIiiilllIlI1ii1I1Ii() for illi1IilIi1l11lllI1 = IIiiIIlIl111iI1li1I, l11iI1Iillii1lllll1 do local i1liii1II1IllliiiIl local IllIl1I1liIii1IiilI = iIiiilllIlI1ii1I1Ii() if IllIl1I1liIii1IiilI == #{ 3606, 575, 5882, 6875, 5215, 4492, 571, 1590, 5575, 4198, 1532, 5064, 593, 5797, 6403, 3215, 3157, 2489, 2504, 6177, 664, 670, 2713 } + lIl1iillIIii11il1I11i + 82 then i1liii1II1IllliiiIl = lIliliiIlII1IIIllIi11() end if IllIl1I1liIii1IiilI == #{ 311, 13, 1296, 1461, 1930, 3237, 2642, 6927, 474, 5205, 3718, 6895, 3576, 1292, 234, 5031, 379, 5264, 3022, 4846, 4217, 889, 2388 } + lIl1iillIIii11il1I11i + 31 then i1liii1II1IllliiiIl = iIiiilllIlI1ii1I1Ii() + lIliliiIlII1IIIllIi11() + lIllI1lI1llliIi1I1i() end if IllIl1I1liIii1IiilI == #{ 3636, 129, 3812, 1339, 595, 3578, 2495, 5760, 2893, 2838, 1412, 4744, 3854, 569 } then i1liii1II1IllliiiIl = #{ 3335, 3261, 3883, 5593, 2124, 3050, 432, 905, 1983, 1242, 2717, 692, 15, 1608, 1667, 1891, 5463, 6059, 2849, 5473, 5682, 5419, 4265, 6051 } + lIl1iillIIii11il1I11i + 33218 == #{ 2223, 1226, 3858, 3009, 3506, 3483, 2807, 4046, 2963, 2553, 3362, 6566, 6325, 5765, 2340, 5507, 263, 6475, 5283, 3453, 1377 } + lIl1iillIIii11il1I11i + 73535 end if IllIl1I1liIii1IiilI == #{ 3731, 1437, 441, 799, 6293, 4350, 6869, 5649, 3410, 4671, 1751, 824, 676, 1048, 1516, 5048, 424, 1481, 3166, 412, 3269 } + lIl1iillIIii11il1I11i + 4 then i1liii1II1IllliiiIl = #{ 6954, 958, 3869, 771, 6394, 1414, 1778, 4473, 2092, 5232, 3778, 1763, 1846, 3389, 3026, 5571, 5967, 6796, 1063, 65, 5575, 995 } + lIl1iillIIii11il1I11i + 16975 == #{ 6954, 958, 3869, 771, 6394, 1414, 1778, 4473, 2092, 5232, 3778, 1763, 1846, 3389, 3026, 5571, 5967, 6796, 1063, 65, 5575, 995 } + lIl1iillIIii11il1I11i + 16975 end if IllIl1I1liIii1IiilI == #{ 4069, 5320, 3258, 1360, 3128, 4814, 5583, 1993, 1093, 5570, 6796, 3887, 4498, 5102, 1411, 3711, 2176, 4948, 654, 3585, 2156, 2457 } + lIl1iillIIii11il1I11i + -77 then i1liii1II1IllliiiIl = lIl11il1IlI1I1Ii1II1l(ilI1Ii1IlIli1lII1iI(lIll1lIliIiiilIIIiIli), #{ 2875, 5418, 6230, 3933, 6417, 5666 }) end if IllIl1I1liIii1IiilI == #{ 5060, 4160, 3281, 3585, 2077, 5914, 6133, 3623, 5404, 2161, 2419, 4969, 3043, 5427, 6051, 4188, 6606, 2711, 2865, 946, 2360, 1195 } + lIl1iillIIii11il1I11i + 60 then i1liii1II1IllliiiIl = lIllI1lI1llliIi1I1i() + lIllI1lI1llliIi1I1i() end if IllIl1I1liIii1IiilI == #{ 6668, 5186, 190, 649, 798, 6306, 5235, 6716, 2272, 1747, 5139, 1959, 4444, 4649, 3004, 462, 3752, 4299, 2481, 3586, 6885, 3337 } + lIl1iillIIii11il1I11i + -88 then i1liii1II1IllliiiIl = lIl11il1IlI1I1Ii1II1l(ilI1Ii1IlIli1lII1iI(lIll1lIliIiiilIIIiIli), #{1688}) end if IllIl1I1liIii1IiilI == #{ 2736, 3310, 6123, 2323, 2090, 5984, 1387, 1689, 2393, 6421, 5391, 1647, 5208, 6348, 1030, 6516, 580, 2408, 2373, 5693, 3041, 5178 } + lIl1iillIIii11il1I11i + -92 then i1liii1II1IllliiiIl = lIllI1lI1llliIi1I1i() end if IllIl1I1liIii1IiilI == #{ 6483, 80, 5034, 2872, 178, 2660, 2801, 1946, 2309, 4255, 3699, 1085, 2673, 4731, 1867, 4560, 483, 4422, 8, 6197 } + lIl1iillIIii11il1I11i + 99 then i1liii1II1IllliiiIl = iIiiilllIlI1ii1I1Ii() end lIl1Ill1il1li1i1iIIIi[4][illi1IilIi1l11lllI1 - IIiiIIlIl111iI1li1I] = i1liii1II1IllliiiIl end for illi1IilIi1l11lllI1 = IIiiIIlIl111iI1li1I, i1l1ll1llIIIiI1l1I1 do local IiiIiIllIl1lIIlII1l = lIl1Ill1il1li1i1iIIIi[3][illi1IilIi1l11lllI1] local lIlIIl11iI1iiIil1I1il = lIllIlil1i1IlI1ll1l1l[IiiIiIllIl1lIIlII1l[7]] if lIlIIl11iI1iiIil1I1il == #{1729} and IiiIiIllIl1lIIlII1l[6] > 255 then IiiIiIllIl1lIIlII1l[1] = true IiiIiIllIl1lIIlII1l[5] = lIl1Ill1il1li1i1iIIIi[4][IiiIiIllIl1lIIlII1l[6] - 256] end if lIlIIl11iI1iiIil1I1il == #{3105, 1986} and IiiIiIllIl1lIIlII1l[8] > 255 then IiiIiIllIl1lIIlII1l[4] = true IiiIiIllIl1lIIlII1l[2] = lIl1Ill1il1li1i1iIIIi[4][IiiIiIllIl1lIIlII1l[8] - 256] end if lIlIIl11iI1iiIil1I1il == #{ 346, 445, 4891 } then if IiiIiIllIl1lIIlII1l[6] > 255 then IiiIiIllIl1lIIlII1l[1] = true IiiIiIllIl1lIIlII1l[5] = lIl1Ill1il1li1i1iIIIi[4][IiiIiIllIl1lIIlII1l[6] - 256] end if IiiIiIllIl1lIIlII1l[8] > 255 then IiiIiIllIl1lIIlII1l[4] = true IiiIiIllIl1lIIlII1l[2] = lIl1Ill1il1li1i1iIIIi[4][IiiIiIllIl1lIIlII1l[8] - 256] end end if lIlIIl11iI1iiIil1I1il == #{ 2414, 2663, 38, 22 } then IiiIiIllIl1lIIlII1l[3] = lIl1Ill1il1li1i1iIIIi[4][IiiIiIllIl1lIIlII1l[9]] end end lIliliiIlII1IIIllIi11() iIiiilllIlI1ii1I1Ii() lIl1Ill1il1li1i1iIIIi[7] = iIiiilllIlI1ii1I1Ii() lIl1Ill1il1li1i1iIIIi[6] = iIiiilllIlI1ii1I1Ii() iIiiilllIlI1ii1I1Ii() iIiiilllIlI1ii1I1Ii() local l11iI1Iillii1lllll1 = lIliliiIlII1IIIllIi11() for illi1IilIi1l11lllI1 = IIiiIIlIl111iI1li1I, l11iI1Iillii1lllll1 do lIl1Ill1il1li1i1iIIIi[5][illi1IilIi1l11lllI1] = lIliliiIlII1IIIllIi11() end return lIl1Ill1il1li1i1iIIIi end local function IiI1liilllIllll1lll(lIl1Ill1il1li1i1iIIIi, lIl1lliiIiIl11li1i1ii, I1iliIiilliiIIi1Ii1) local lIlIli11IiI1lI11I1l1l, l1ii1i1i11llI11IIi1 = 13, 8 local lIlllii11i11lliI1IiII = lIl1Ill1il1li1i1iIIIi[3] local iIiIiIIlil1i1iII1Ii = 6 local lIlIIi1Ili1III1lIilII = lIl1Ill1il1li1i1iIIIi[2] local iI1illI1lii1l11l1lI = lIl1Ill1il1li1i1iIIIi[7] local lIllii1I1ii1ll1iliiII = lIl1Ill1il1li1i1iIIIi[1] local iilliIi1ilI1I1Ii1II = 7 local IlIl1ii11l1IIl1Ilil = lIl1Ill1il1li1i1iIIIi[5] local il111II1l1il1iiilll = 6 local function i1iiiiliI11ll11l1li(...) local lIl11i1I1lIlill11il1l = 0 local Il1Ii1lIi1li11IllIi = { IIIiIIll1I1ilIi1ili({}, 1, lIllii1I1ii1ll1iliiII) } local i1l1ilI1lllllii1iiI = 1 local illiliilIlil1llIlil = {} local lIliI1i1iliII1l1I1111 = {} local lIl1lliiIiIl11li1i1ii = IliI1i1iilI1iIi1ill() local lIii1iIl1iIIililiiI = { ... } local l1IliiIli11lliliIIi = #lIii1iIl1iIIililiiI - 1 for illi1IilIi1l11lllI1 = 0, l1IliiIli11lliliIIi do if illi1IilIi1l11lllI1 < iI1illI1lii1l11l1lI then Il1Ii1lIi1li11IllIi[illi1IilIi1l11lllI1] = lIii1iIl1iIIililiiI[illi1IilIi1l11lllI1 + 1] end end local function lIlIiIl11i11iII1IiII1(...) local i1liIilII1ll1I1iIIi = lIllIli11ill11l111l11("#", ...) local II1liIiIi1IilIIl1iI = { ... } return i1liIilII1ll1I1iIIi, II1liIiIi1IilIIl1iI end local function IliilI11Ii1illll1Il() while true do local li1lIIi11lI1iiii1li = lIlllii11i11lliI1IiII[i1l1ilI1lllllii1iiI] local iliI1ililllllIiIlIl = li1lIIi11lI1iiii1li[7] i1l1ilI1lllllii1iiI = i1l1ilI1lllllii1iiI + 1 if iliI1ililllllIiIlIl < 11 then if iliI1ililllllIiIlIl < 5 then if iliI1ililllllIiIlIl < 2 then if iliI1ililllllIiIlIl == 1 then local Ill1iIi1iiIiIiillll = Il1Ii1lIi1li11IllIi[li1lIIi11lI1iiii1li[6]] local i1liIilII1ll1I1iIIi if li1lIIi11lI1iiii1li[4] then i1liIilII1ll1I1iIIi = li1lIIi11lI1iiii1li[2] else i1liIilII1ll1I1iIIi = Il1Ii1lIi1li11IllIi[li1lIIi11lI1iiii1li[8]] end Il1Ii1lIi1li11IllIi[li1lIIi11lI1iiii1li[10] + 1] = Ill1iIi1iiIiIiillll Il1Ii1lIi1li11IllIi[li1lIIi11lI1iiii1li[10]] = Ill1iIi1iiIiIiillll[i1liIilII1ll1I1iIIi] else local lIlI1Iiii1iiI1lI1iiIl = li1lIIi11lI1iiii1li[10] local lIii1iIl1iIIililiiI = li1lIIi11lI1iiii1li[6] local llliiI1IIl1ii111Iii = li1lIIi11lI1iiii1li[8] local III11i1Il1ilii11li1, ii1i1lli11ili1ilIll, IliilI11Ii1illll1Il if lIii1iIl1iIIililiiI ~= 1 then if lIii1iIl1iIIililiiI ~= 0 then ii1i1lli11ili1ilIll = lIlI1Iiii1iiI1lI1iiIl + lIii1iIl1iIIililiiI - 1 else ii1i1lli11ili1ilIll = lIl11i1I1lIlill11il1l end ii1i1lli11ili1ilIll, III11i1Il1ilii11li1 = lIlIiIl11i11iII1IiII1(Il1Ii1lIi1li11IllIi[lIlI1Iiii1iiI1lI1iiIl](IIIiIIll1I1ilIi1ili(Il1Ii1lIi1li11IllIi, lIlI1Iiii1iiI1lI1iiIl + 1, ii1i1lli11ili1ilIll))) else ii1i1lli11ili1ilIll, III11i1Il1ilii11li1 = lIlIiIl11i11iII1IiII1(Il1Ii1lIi1li11IllIi[lIlI1Iiii1iiI1lI1iiIl]()) end if llliiI1IIl1ii111Iii ~= 1 then if llliiI1IIl1ii111Iii ~= 0 then ii1i1lli11ili1ilIll = lIlI1Iiii1iiI1lI1iiIl + llliiI1IIl1ii111Iii - 2 lIl11i1I1lIlill11il1l = ii1i1lli11ili1ilIll + 1 else ii1i1lli11ili1ilIll = ii1i1lli11ili1ilIll + lIlI1Iiii1iiI1lI1iiIl - 1 lIl11i1I1lIlill11il1l = ii1i1lli11ili1ilIll end IliilI11Ii1illll1Il = 0 for illi1IilIi1l11lllI1 = lIlI1Iiii1iiI1lI1iiIl, ii1i1lli11ili1ilIll do IliilI11Ii1illll1Il = IliilI11Ii1illll1Il + 1 Il1Ii1lIi1li11IllIi[illi1IilIi1l11lllI1] = III11i1Il1ilii11li1[IliilI11Ii1illll1Il] end else lIl11i1I1lIlill11il1l = lIlI1Iiii1iiI1lI1iiIl - 1 end for illi1IilIi1l11lllI1 = lIl11i1I1lIlill11il1l + 1, lIllii1I1ii1ll1iliiII do Il1Ii1lIi1li11IllIi[illi1IilIi1l11lllI1] = nil end end elseif iliI1ililllllIiIlIl >= 3 then if iliI1ililllllIiIlIl == 4 then if not not Il1Ii1lIi1li11IllIi[li1lIIi11lI1iiii1li[10]] == (li1lIIi11lI1iiii1li[8] == 0) then i1l1ilI1lllllii1iiI = i1l1ilI1lllllii1iiI + 1 end else local li1lIlIlIl1IiliIill = lIlIIi1Ili1III1lIilII[li1lIIi11lI1iiii1li[9]] local liiII11IiI1IliII1ii = {} if li1lIlIlIl1IiliIill[iIiIiIIlil1i1iII1Ii] > 0 then do local iII1i11I1ll1l1liII1 = {} liiII11IiI1IliII1ii = IilIIIiIIlIIIliiIIl({}, { __index = function(II1liIiIi1IilIIl1iI, IllI1iiili1ilIili11) local llIiIIl1ilIIiiIIill = iII1i11I1ll1l1liII1[IllI1iiili1ilIili11] return llIiIIl1ilIIiiIIill[1][llIiIIl1ilIIiiIIill[2]] end, __newindex = function(II1liIiIi1IilIIl1iI, IllI1iiili1ilIili11, IIi1IiI1iilllIIiIIi) local llIiIIl1ilIIiiIIill = iII1i11I1ll1l1liII1[IllI1iiili1ilIili11] llIiIIl1ilIIiiIIill[1][llIiIIl1ilIIiiIIill[2]] = IIi1IiI1iilllIIiIIi end }) for illi1IilIi1l11lllI1 = 1, li1lIlIlIl1IiliIill[iIiIiIIlil1i1iII1Ii] do local i1lli11lll1I1i1iIli = lIlllii11i11lliI1IiII[i1l1ilI1lllllii1iiI] if i1lli11lll1I1i1iIli[iilliIi1ilI1I1Ii1II] == lIlIli11IiI1lI11I1l1l then iII1i11I1ll1l1liII1[illi1IilIi1l11lllI1 - 1] = { Il1Ii1lIi1li11IllIi, i1lli11lll1I1i1iIli[il111II1l1il1iiilll] } elseif i1lli11lll1I1i1iIli[iilliIi1ilI1I1Ii1II] == l1ii1i1i11llI11IIi1 then iII1i11I1ll1l1liII1[illi1IilIi1l11lllI1 - 1] = { I1iliIiilliiIIi1Ii1, i1lli11lll1I1i1iIli[il111II1l1il1iiilll] } end i1l1ilI1lllllii1iiI = i1l1ilI1lllllii1iiI + 1 end if not illiliilIlil1llIlil[Il1Ii1lIi1li11IllIi] then illiliilIlil1llIlil[Il1Ii1lIi1li11IllIi] = {iII1i11I1ll1l1liII1} else lIlli1IlIII1I1i1iilil(illiliilIlil1llIlil[Il1Ii1lIi1li11IllIi], iII1i11I1ll1l1liII1) end end end local I1i1lllII11IIl1lIil = IiI1liilllIllll1lll(li1lIlIlIl1IiliIill, lIl1lliiIiIl11li1i1ii, liiII11IiI1IliII1ii) Il1Ii1lIi1li11IllIi[li1lIIi11lI1iiii1li[10]] = I1i1lllII11IIl1lIil end else lIl1lliiIiIl11li1i1ii[li1lIIi11lI1iiii1li[3]] = Il1Ii1lIi1li11IllIi[li1lIIi11lI1iiii1li[10]] end elseif iliI1ililllllIiIlIl >= 8 then if iliI1ililllllIiIlIl < 9 then if li1lIIi11lI1iiii1li[8] == 131 then i1l1ilI1lllllii1iiI = i1l1ilI1lllllii1iiI - 1 lIlllii11i11lliI1IiII[i1l1ilI1lllllii1iiI] = { [7] = 6, [10] = (li1lIIi11lI1iiii1li[10] - 158) % 256, [6] = (li1lIIi11lI1iiii1li[6] - 158) % 256 } elseif li1lIIi11lI1iiii1li[8] == 233 then i1l1ilI1lllllii1iiI = i1l1ilI1lllllii1iiI - 1 lIlllii11i11lliI1IiII[i1l1ilI1lllllii1iiI] = { [7] = 7, [10] = (li1lIIi11lI1iiii1li[10] - 120) % 256, [8] = (li1lIIi11lI1iiii1li[6] - 120) % 256 } else Il1Ii1lIi1li11IllIi[li1lIIi11lI1iiii1li[10]] = I1iliIiilliiIIi1Ii1[li1lIIi11lI1iiii1li[6]] end elseif iliI1ililllllIiIlIl == 10 then local i1liIilII1ll1I1iIIi if li1lIIi11lI1iiii1li[4] then i1liIilII1ll1I1iIIi = li1lIIi11lI1iiii1li[2] else i1liIilII1ll1I1iIIi = Il1Ii1lIi1li11IllIi[li1lIIi11lI1iiii1li[8]] end Il1Ii1lIi1li11IllIi[li1lIIi11lI1iiii1li[10]] = Il1Ii1lIi1li11IllIi[li1lIIi11lI1iiii1li[6]][i1liIilII1ll1I1iIIi] else i1l1ilI1lllllii1iiI = i1l1ilI1lllllii1iiI + (li1lIIi11lI1iiii1li[9] - lIlI111IlIIllllI1ilI1) end elseif iliI1ililllllIiIlIl < 6 then if li1lIIi11lI1iiii1li[8] == 32 then i1l1ilI1lllllii1iiI = i1l1ilI1lllllii1iiI - 1 lIlllii11i11lliI1IiII[i1l1ilI1lllllii1iiI] = { [7] = 4, [10] = (li1lIIi11lI1iiii1li[10] - 245) % 256, [8] = (li1lIIi11lI1iiii1li[6] - 245) % 256 } else illiliilIlil1llIlil[Il1Ii1lIi1li11IllIi] = nil local lIlI1Iiii1iiI1lI1iiIl = li1lIIi11lI1iiii1li[10] local llI1III1i1i1IiiIIiI = li1lIIi11lI1iiii1li[6] if llI1III1i1i1IiiIIiI == 1 then return true end local ii1i1lli11ili1ilIll = lIlI1Iiii1iiI1lI1iiIl + llI1III1i1i1IiiIIiI - 2 if llI1III1i1i1IiiIIiI == 0 then ii1i1lli11ili1ilIll = lIl11i1I1lIlill11il1l end return true, lIlI1Iiii1iiI1lI1iiIl, ii1i1lli11ili1ilIll end elseif iliI1ililllllIiIlIl == 7 then local lIlI1Iiii1iiI1lI1iiIl = li1lIIi11lI1iiii1li[10] local IlIilIIl1i1lIil1lli = lIlI1Iiii1iiI1lI1iiIl + 2 local lliI1iliI111iI1IIil = { Il1Ii1lIi1li11IllIi[lIlI1Iiii1iiI1lI1iiIl](Il1Ii1lIi1li11IllIi[lIlI1Iiii1iiI1lI1iiIl + 1], Il1Ii1lIi1li11IllIi[lIlI1Iiii1iiI1lI1iiIl + 2]) } for illi1IilIi1l11lllI1 = 1, li1lIIi11lI1iiii1li[8] do Il1Ii1lIi1li11IllIi[IlIilIIl1i1lIil1lli + illi1IilIi1l11lllI1] = lliI1iliI111iI1IIil[illi1IilIi1l11lllI1] end if Il1Ii1lIi1li11IllIi[lIlI1Iiii1iiI1lI1iiIl + 3] ~= nil then Il1Ii1lIi1li11IllIi[lIlI1Iiii1iiI1lI1iiIl + 2] = Il1Ii1lIi1li11IllIi[lIlI1Iiii1iiI1lI1iiIl + 3] else i1l1ilI1lllllii1iiI = i1l1ilI1lllllii1iiI + 1 end else I1iliIiilliiIIi1Ii1[li1lIIi11lI1iiii1li[6]] = Il1Ii1lIi1li11IllIi[li1lIIi11lI1iiii1li[10]] end elseif iliI1ililllllIiIlIl >= 16 then if iliI1ililllllIiIlIl < 19 then if iliI1ililllllIiIlIl < 17 then local lIlilill1lillli1IliI1, i1liIilII1ll1I1iIIi if li1lIIi11lI1iiii1li[1] then lIlilill1lillli1IliI1 = li1lIIi11lI1iiii1li[5] else lIlilill1lillli1IliI1 = Il1Ii1lIi1li11IllIi[li1lIIi11lI1iiii1li[6]] end if li1lIIi11lI1iiii1li[4] then i1liIilII1ll1I1iIIi = li1lIIi11lI1iiii1li[2] else i1liIilII1ll1I1iIIi = Il1Ii1lIi1li11IllIi[li1lIIi11lI1iiii1li[8]] end Il1Ii1lIi1li11IllIi[li1lIIi11lI1iiii1li[10]] = lIlilill1lillli1IliI1 * i1liIilII1ll1I1iIIi elseif iliI1ililllllIiIlIl ~= 18 then Il1Ii1lIi1li11IllIi[li1lIIi11lI1iiii1li[10]] = lIl1lliiIiIl11li1i1ii[li1lIIi11lI1iiii1li[3]] else local lIlilill1lillli1IliI1, i1liIilII1ll1I1iIIi if li1lIIi11lI1iiii1li[1] then lIlilill1lillli1IliI1 = li1lIIi11lI1iiii1li[5] else lIlilill1lillli1IliI1 = Il1Ii1lIi1li11IllIi[li1lIIi11lI1iiii1li[6]] end if li1lIIi11lI1iiii1li[4] then i1liIilII1ll1I1iIIi = li1lIIi11lI1iiii1li[2] else i1liIilII1ll1I1iIIi = Il1Ii1lIi1li11IllIi[li1lIIi11lI1iiii1li[8]] end Il1Ii1lIi1li11IllIi[li1lIIi11lI1iiii1li[10]][lIlilill1lillli1IliI1] = i1liIilII1ll1I1iIIi end elseif iliI1ililllllIiIlIl >= 20 then if iliI1ililllllIiIlIl ~= 21 then Il1Ii1lIi1li11IllIi[li1lIIi11lI1iiii1li[10]] = { IIIiIIll1I1ilIi1ili(ll11iII1illlIil111i, 1, li1lIIi11lI1iiii1li[6] == 0 and 255 or li1lIIi11lI1iiii1li[6]) } else Il1Ii1lIi1li11IllIi[li1lIIi11lI1iiii1li[10]] = li1lIIi11lI1iiii1li[6] ~= 0 if li1lIIi11lI1iiii1li[8] ~= 0 then i1l1ilI1lllllii1iiI = i1l1ilI1lllllii1iiI + 1 end end else local IlIilIIl1i1lIil1lli = (li1lIIi11lI1iiii1li[8] - 1) * 50 local lIllI11i11iIillI1l1Ii = li1lIIi11lI1iiii1li[6] if lIllI11i11iIillI1l1Ii == 0 then lIllI11i11iIillI1l1Ii = lIl11i1I1lIlill11il1l - li1lIIi11lI1iiii1li[10] end for illi1IilIi1l11lllI1 = 1, lIllI11i11iIillI1l1Ii do Il1Ii1lIi1li11IllIi[li1lIIi11lI1iiii1li[10]][IlIilIIl1i1lIil1lli + illi1IilIi1l11lllI1] = Il1Ii1lIi1li11IllIi[li1lIIi11lI1iiii1li[10] + illi1IilIi1l11lllI1] end end elseif iliI1ililllllIiIlIl < 13 then if iliI1ililllllIiIlIl == 12 then Il1Ii1lIi1li11IllIi[li1lIIi11lI1iiii1li[10]] = li1lIIi11lI1iiii1li[3] else local lIlilill1lillli1IliI1, i1liIilII1ll1I1iIIi if li1lIIi11lI1iiii1li[1] then lIlilill1lillli1IliI1 = li1lIIi11lI1iiii1li[5] else lIlilill1lillli1IliI1 = Il1Ii1lIi1li11IllIi[li1lIIi11lI1iiii1li[6]] end if li1lIIi11lI1iiii1li[4] then i1liIilII1ll1I1iIIi = li1lIIi11lI1iiii1li[2] else i1liIilII1ll1I1iIIi = Il1Ii1lIi1li11IllIi[li1lIIi11lI1iiii1li[8]] end if lIlilill1lillli1IliI1 == i1liIilII1ll1I1iIIi ~= (li1lIIi11lI1iiii1li[10] ~= 0) then i1l1ilI1lllllii1iiI = i1l1ilI1lllllii1iiI + 1 end end elseif iliI1ililllllIiIlIl >= 14 then if iliI1ililllllIiIlIl ~= 15 then if li1lIIi11lI1iiii1li[8] == 130 then i1l1ilI1lllllii1iiI = i1l1ilI1lllllii1iiI - 1 lIlllii11i11lliI1IiII[i1l1ilI1lllllii1iiI] = { [7] = 8, [10] = (li1lIIi11lI1iiii1li[10] - 139) % 256, [6] = (li1lIIi11lI1iiii1li[6] - 139) % 256 } else Il1Ii1lIi1li11IllIi[li1lIIi11lI1iiii1li[10]] = #Il1Ii1lIi1li11IllIi[li1lIIi11lI1iiii1li[6]] end elseif li1lIIi11lI1iiii1li[8] == 221 then i1l1ilI1lllllii1iiI = i1l1ilI1lllllii1iiI - 1 lIlllii11i11lliI1IiII[i1l1ilI1lllllii1iiI] = { [7] = 13, [10] = (li1lIIi11lI1iiii1li[10] - 216) % 256, [6] = (li1lIIi11lI1iiii1li[6] - 216) % 256 } elseif li1lIIi11lI1iiii1li[8] == 124 then i1l1ilI1lllllii1iiI = i1l1ilI1lllllii1iiI - 1 lIlllii11i11lliI1IiII[i1l1ilI1lllllii1iiI] = { [7] = 5, [10] = (li1lIIi11lI1iiii1li[10] - 157) % 256, [6] = (li1lIIi11lI1iiii1li[6] - 157) % 256 } else for illi1IilIi1l11lllI1 = li1lIIi11lI1iiii1li[10], li1lIIi11lI1iiii1li[6] do Il1Ii1lIi1li11IllIi[illi1IilIi1l11lllI1] = nil end end else Il1Ii1lIi1li11IllIi[li1lIIi11lI1iiii1li[10]] = Il1Ii1lIi1li11IllIi[li1lIIi11lI1iiii1li[6]] end end end local lliliIil1iIIIllIlIi, lIiil1l1IIiiiil1Il1, i1i1ii1l1iI1lI1iIII, IliliIl1111liIiliii = liill1II1ilIiIil1I1(IliilI11Ii1illll1Il) if lliliIil1iIIIllIlIi then if i1i1ii1l1iI1lI1iIII then return IIIiIIll1I1ilIi1ili(Il1Ii1lIi1li11IllIi, i1i1ii1l1iI1lI1iIII, IliliIl1111liIiliii) end else lIl1111i1111llIlIi11l("Luraph Script:" .. (IlIl1ii11l1IIl1Ilil[i1l1ilI1lllllii1iiI - 1] or "") .. ": " .. lIl1lI11I1I1l11iIIIIi(lIiil1l1IIiiiil1Il1), 0) end end IlllIl1i111IIlIilil(i1iiiiliI11ll11l1li, lIl1lliiIiIl11li1i1ii) return i1iiiiliI11ll11l1li end local Iii1ll1iiiil1l1Il1l = l1il1iIIIIililii1il() return IiI1liilllIllll1lll(Iii1ll1iiiil1l1Il1l, lIl1lliiIiIl11li1i1ii)() end IlIIi11iI1111i1IiliI1i1iilI1iIi1ill()) 