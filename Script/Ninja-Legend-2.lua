local l111ll1ll1IIllIlili = assert local ll1iiIiI11ll11l1ili = select local illllli1liIiili1l1l = tonumber local lIl1llI1lilli1iIIl1ii = unpack local li111lIliiI11lIlIi1 = pcall local lli1Il1iiI1Iiili11l = setfenv local iIlil1IIiilIii1llil = setmetatable local ill1l1Ii11IlliIlII1 = type local lIl11lIlii1i11I1i1lli = getfenv local illi111I1IIliii1liI = tostring local i1lI1iiil1i1lIIl11i = error local i1l1I1ii1lIi1iIIiii = string.sub local Ill1II1l11i1l1lIli1 = string.byte local lIliIi1I11iiil1iIll1l = string.char local lIl1Ilii11Ii11i1III11 = string.rep local lIliiIii1lI1iliIi11Il = string.gsub local lI1llII11iiI11Ill1l = string.match local IIiil1IlI1l1IIl1I11 = table.insert local lIlIiiIIIlI1IiII1llll = Ill1II1l11i1l1lIli1("u", 1) local lIliiilliliIII1li1Il1, lIlilllllI1llli1lll1i = #{3652}, #{ 1266, 3437, 6012, 2453, 2866, 2300, 6024, 798, 4975, 6116, 2727, 577, 6356, 1136, 2245, 2026, 1768, 6385, 3029, 2962, 4606, 101, 1788 } + lIlIiiIIIlI1IiII1llll + 130931 local lIll1il1ll11ii1illII1 = {} local i1lI1I11II11lliI1II = 1 local lIlIlI1IiIIIIIl1iiiIi, III1lliIiiiiliIlllI local function lIlIiIl11liIliIII11ii(iiiIIilIii111illI1i, IlI1lIiiIIlli11l1lI) local i1I1IiiI1II11lililI iiiIIilIii111illI1i = lIliiIii1lI1iliIi11Il(i1l1I1ii1lIi1iIIiii(iiiIIilIii111illI1i, 5), "..", function(IIllI1liIIiIliiiI1l) if Ill1II1l11i1l1lIli1(IIllI1liIIiIliiiI1l, 2) == 72 then i1I1IiiI1II11lililI = illllli1liIiili1l1l(i1l1I1ii1lIi1iIIiii(IIllI1liIIiIliiiI1l, 1, 1)) return "" else local l1IIlli1ilIiiIlili1 = lIliIi1I11iiil1iIll1l(illllli1liIiili1l1l(IIllI1liIIiIliiiI1l, 16)) if i1I1IiiI1II11lililI then local i1I1i1iiilIiiliIi1l = lIl1Ilii11Ii11i1III11(l1IIlli1ilIiiIlili1, i1I1IiiI1II11lililI) i1I1IiiI1II11lililI = nil return i1I1i1iiilIiiliIi1l else return l1IIlli1ilIiiIlili1 end end end) local function lIl11ill1IiiIlIi1ll1l() local iI111iilii1il11l11l = Ill1II1l11i1l1lIli1(iiiIIilIii111illI1i, i1lI1I11II11lliI1II, i1lI1I11II11lliI1II) i1lI1I11II11lliI1II = i1lI1I11II11lliI1II + 1 return iI111iilii1il11l11l end local function l1Ii11i1l11ll1iIl1i() local iI111iilii1il11l11l, l1IIlli1ilIiiIlili1, i1I1i1iiilIiiliIi1l, IiiilliiiIIiIliliI1 = Ill1II1l11i1l1lIli1(iiiIIilIii111illI1i, i1lI1I11II11lliI1II, i1lI1I11II11lliI1II + 3) i1lI1I11II11lliI1II = i1lI1I11II11lliI1II + 4 return IiiilliiiIIiIliliI1 * 16777216 + i1I1i1iiilIiiliIi1l * 65536 + l1IIlli1ilIiiIlili1 * 256 + iI111iilii1il11l11l end local function lIlIi11lII1IlIi1ilI(IIi1l1ll111Illiliil, lIllIlIilillIl11lIIlI, IIII11IIi1IlIiI111l) if IIII11IIi1IlIiI111l then local il1Il1i1lIliIliiIlI, ilIlllIillll11liill = 0, 0 for lIlI11I1ill1IilI1Iil1 = lIllIlIilillIl11lIIlI, IIII11IIi1IlIiI111l do il1Il1i1lIliIliiIlI = il1Il1i1lIliIliiIlI + 2 ^ ilIlllIillll11liill * lIlIi11lII1IlIi1ilI(IIi1l1ll111Illiliil, lIlI11I1ill1IilI1Iil1) ilIlllIillll11liill = ilIlllIillll11liill + 1 end return il1Il1i1lIliIliiIlI else local ii1i11111i11l1lIii1 = 2 ^ (lIllIlIilillIl11lIIlI - 1) return ii1i11111i11l1lIii1 <= IIi1l1ll111Illiliil % (ii1i11111i11l1lIii1 + ii1i11111i11l1lIii1) and 1 or 0 end end local function I11liIi111l11llllIl() local iI111iilii1il11l11l, l1IIlli1ilIiiIlili1 = l1Ii11i1l11ll1iIl1i(), l1Ii11i1l11ll1iIl1i() if iI111iilii1il11l11l == 0 and l1IIlli1ilIiiIlili1 == 0 then return 0 end return (-2 * lIlIi11lII1IlIi1ilI(l1IIlli1ilIiiIlili1, 32) + 1) * 2 ^ (lIlIi11lII1IlIi1ilI(l1IIlli1ilIiiIlili1, 21, 31) - 1023) * ((lIlIi11lII1IlIi1ilI(l1IIlli1ilIiiIlili1, 1, 20) * 4294967296 + iI111iilii1il11l11l) / 4503599627370496 + 1) end local lIli1lIliIlliIiIilIil = bit or bit32 local lIIil1lIiII1Ii1il1i = lIli1lIliIlliIiIilIil and lIli1lIliIlliIiIilIil.bxor or function(iI111iilii1il11l11l, l1IIlli1ilIiiIlili1) local IiiI1ii1l1iiII11IiI = 1 local i1I1i1iiilIiiliIi1l = 0 while iI111iilii1il11l11l > 0 and l1IIlli1ilIiiIlili1 > 0 do local lIl1Ii1lI1iI111ii1li1 = iI111iilii1il11l11l % 2 local iIIIIl1ilII11i1IIii = l1IIlli1ilIiiIlili1 % 2 if lIl1Ii1lI1iI111ii1li1 ~= iIIIIl1ilII11i1IIii then i1I1i1iiilIiiliIi1l = i1I1i1iiilIiiliIi1l + IiiI1ii1l1iiII11IiI end iI111iilii1il11l11l = (iI111iilii1il11l11l - lIl1Ii1lI1iI111ii1li1) / 2 l1IIlli1ilIiiIlili1 = (l1IIlli1ilIiiIlili1 - iIIIIl1ilII11i1IIii) / 2 IiiI1ii1l1iiII11IiI = IiiI1ii1l1iiII11IiI * 2 end if iI111iilii1il11l11l < l1IIlli1ilIiiIlili1 then iI111iilii1il11l11l = l1IIlli1ilIiiIlili1 end while iI111iilii1il11l11l > 0 do local lIl1Ii1lI1iI111ii1li1 = iI111iilii1il11l11l % 2 if lIl1Ii1lI1iI111ii1li1 > 0 then i1I1i1iiilIiiliIi1l = i1I1i1iiilIiiliIi1l + IiiI1ii1l1iiII11IiI end iI111iilii1il11l11l = (iI111iilii1il11l11l - lIl1Ii1lI1iI111ii1li1) / 2 IiiI1ii1l1iiII11IiI = IiiI1ii1l1iiII11IiI * 2 end return i1I1i1iiilIiiliIi1l end local function ii11i1lililllil1l1i(IlIl1lIi1liIIII11Ii) local iiilliIi1111IIii11i = { Ill1II1l11i1l1lIli1(iiiIIilIii111illI1i, i1lI1I11II11lliI1II, i1lI1I11II11lliI1II + 3) } i1lI1I11II11lliI1II = i1lI1I11II11lliI1II + 4 local iI111iilii1il11l11l = lIIil1lIiII1Ii1il1i(iiilliIi1111IIii11i[1], III1lliIiiiiliIlllI) local l1IIlli1ilIiiIlili1 = lIIil1lIiII1Ii1il1i(iiilliIi1111IIii11i[2], III1lliIiiiiliIlllI) local i1I1i1iiilIiiliIi1l = lIIil1lIiII1Ii1il1i(iiilliIi1111IIii11i[3], III1lliIiiiiliIlllI) local IiiilliiiIIiIliliI1 = lIIil1lIiII1Ii1il1i(iiilliIi1111IIii11i[4], III1lliIiiiiliIlllI) III1lliIiiiiliIlllI = (141 * III1lliIiiiiliIlllI + IlIl1lIi1liIIII11Ii) % 256 return IiiilliiiIIiIliliI1 * 16777216 + i1I1i1iiilIiiliIi1l * 65536 + l1IIlli1ilIiiIlili1 * 256 + iI111iilii1il11l11l end local function lIlIl1I1i11lIlIiIIliI(l11iIIIiIii1l1IIIii) local lIlllillI1i1llIIl1Ii1 = l1Ii11i1l11ll1iIl1i() local i1lilIIiI1lIIIl1III = "" for lIlI11I1ill1IilI1Iil1 = lIliiilliliIII1li1Il1, lIlllillI1i1llIIl1Ii1 do i1lilIIiI1lIIIl1III = i1lilIIiI1lIIIl1III .. lIliIi1I11iiil1iIll1l(lIIil1lIiII1Ii1il1i(Ill1II1l11i1l1lIli1(iiiIIilIii111illI1i, i1lI1I11II11lliI1II + lIlI11I1ill1IilI1Iil1 - 1), lIlIlI1IiIIIIIl1iiiIi)) lIlIlI1IiIIIIIl1iiiIi = (l11iIIIiIii1l1IIIii * lIlIlI1IiIIIIIl1iiiIi + 69) % 256 end i1lI1I11II11lliI1II = i1lI1I11II11lliI1II + lIlllillI1i1llIIl1Ii1 return i1lilIIiI1lIIIl1III end lIlIlI1IiIIIIIl1iiiIi = lIl11ill1IiiIlIi1ll1l() III1lliIiiiiliIlllI = lIl11ill1IiiIlIi1ll1l() local I111l1lilIIiI11li11 = {} for lIlI11I1ill1IilI1Iil1 = lIliiilliliIII1li1Il1, lIl11ill1IiiIlIi1ll1l() do local llI1iill11ii1llillI = lIl11ill1IiiIlIi1ll1l() local illIIli1lIIlIl1Ii11 = (lIlI11I1ill1IilI1Iil1 - 1) * 2 I111l1lilIIiI11li11[illIIli1lIIlIl1Ii11] = lIlIi11lII1IlIi1ilI(llI1iill11ii1llillI, 1, 4) I111l1lilIIiI11li11[illIIli1lIIlIl1Ii11 + 1] = lIlIi11lII1IlIi1ilI(llI1iill11ii1llillI, 5, 8) end local function llIIiIl1IIlIiI1iIi1() local lillilllilli1I1lIlI = { {}, nil, nil, {}, {}, nil, {} } l1Ii11i1l11ll1iIl1i() lillilllilli1I1lIlI[3] = lIl11ill1IiiIlIi1ll1l() lillilllilli1I1lIlI[6] = lIl11ill1IiiIlIi1ll1l() lIl11ill1IiiIlIi1ll1l() local i1lIilIIii1iiI1iI11 = l1Ii11i1l11ll1iIl1i() - (#{ 5954, 5569, 1735, 6008, 3313, 4474, 597, 2106, 4234, 4314, 3440, 1509, 1692, 4855, 1923, 3551, 4435, 1597, 6216, 3924, 6923 } + lIlIiiIIIlI1IiII1llll + 133620) local Ii1I1lII1li1lIlIIIi = lIl11ill1IiiIlIi1ll1l() for lIlI11I1ill1IilI1Iil1 = lIliiilliliIII1li1Il1, i1lIilIIii1iiI1iI11 do local IlilllIiII1iii1ilil = { nil, nil, nil, nil, nil, nil, nil, nil, nil, nil } local llI1iill11ii1llillI = ii11i1lililllil1l1i(Ii1I1lII1li1lIlIIIi) IlilllIiII1iii1ilil[32945] = lIlIi11lII1IlIi1ilI(llI1iill11ii1llillI, #{ 2220, 3800, 5413, 5791, 5950, 3938, 4101, 1328, 1565, 6238, 3864, 4715, 3437, 3631, 3018, 1060, 122, 3627, 65, 159, 617, 6003, 2415, 5267 } + lIlIiiIIIlI1IiII1llll + -114, #{ 3886, 6572, 1180, 2849, 4850, 1507, 5429, 4248, 6675, 1021, 2123, 5835, 3291, 5324, 5067, 4058, 1434, 5215, 1063, 3572, 2179 } + lIlIiiIIIlI1IiII1llll + -106) IlilllIiII1iii1ilil[9] = lIlIi11lII1IlIi1ilI(llI1iill11ii1llillI, #{ 1045, 579, 2781, 1744, 6127, 3541, 1270, 4836, 1799, 666 }, #{ 1067, 758, 5257, 6177, 5329, 6687, 2522, 4569, 5876, 2272, 4538, 3758, 1499, 5059, 5916, 782, 4723, 5988 }) IlilllIiII1iii1ilil[5] = lIlIi11lII1IlIi1ilI(llI1iill11ii1llillI, #{3741}, #{ 774, 2478, 1610, 2981, 1274, 3407, 5938, 6899, 1530 }) IlilllIiII1iii1ilil[6] = lIlIi11lII1IlIi1ilI(llI1iill11ii1llillI, #{ 59, 3683, 5130, 767, 2114, 2098, 5483, 4767, 3391, 1153, 5291, 6467, 2792, 5885, 1598, 3859, 1931, 3463, 912 }, #{ 4887, 3049, 119, 4127, 3346, 1038, 4483, 1798, 4111, 5045, 6862, 5664, 3373, 317, 3664, 3962, 6053, 3393, 6244, 250, 2766 } + lIlIiiIIIlI1IiII1llll + -112) IlilllIiII1iii1ilil[2] = lIlIi11lII1IlIi1ilI(llI1iill11ii1llillI, #{ 3004, 1663, 1699, 1671, 5014, 2760, 5280, 922, 5738, 2518, 294, 5784, 2227, 1918, 5131, 3151, 5359, 4256, 5723, 603, 827, 2762, 6360 } + lIlIiiIIIlI1IiII1llll + -113, #{ 970, 5991, 4061, 5775, 6377, 5716, 2186, 6193, 1250, 6545, 6804, 2622, 2004, 4274, 848, 2822, 3779, 4079, 2593, 1297, 4299 } + lIlIiiIIIlI1IiII1llll + -106) IlilllIiII1iii1ilil[4] = lIlIi11lII1IlIi1ilI(llI1iill11ii1llillI, #{4204}, #{ 2127, 2982, 5548, 3138, 3385, 3325, 2789, 4232, 3693, 2241, 1610, 5470, 1790, 187, 303, 6888, 3637, 3276 }) lillilllilli1I1lIlI[5][lIlI11I1ill1IilI1Iil1] = IlilllIiII1iii1ilil end lillilllilli1I1lIlI[2] = lIl11ill1IiiIlIi1ll1l() local lI1Il1lIi1i1ll1liII = l1Ii11i1l11ll1iIl1i() for lIlI11I1ill1IilI1Iil1 = lIliiilliliIII1li1Il1, lI1Il1lIi1i1ll1liII do lillilllilli1I1lIlI[1][lIlI11I1ill1IilI1Iil1] = l1Ii11i1l11ll1iIl1i() end local lI1Il1lIi1i1ll1liII = l1Ii11i1l11ll1iIl1i() - (#{ 4698, 6589, 1376, 4912, 6399, 1888, 2047, 291, 6696, 2744, 2047, 4611, 5359, 6362, 6380, 1655, 3627, 1519, 5380, 2154, 6662, 6356, 1290, 4373 } + lIlIiiIIIlI1IiII1llll + 133591) local ll111lliiiiiIi11llI = lIl11ill1IiiIlIi1ll1l() for lIlI11I1ill1IilI1Iil1 = lIliiilliliIII1li1Il1, lI1Il1lIi1i1ll1liII do local lIlI1iIllIIIlIIlil1II local ill1l1Ii11IlliIlII1 = lIl11ill1IiiIlIi1ll1l() if ill1l1Ii11IlliIlII1 == #{ 5426, 1876, 1158, 20, 3578, 2543, 1079, 841, 776, 1462, 4876, 1234, 2698, 2660, 6340, 1510, 6939, 3312, 469, 4355, 2953, 1460 } + lIlIiiIIIlI1IiII1llll + -38 then lIlI1iIllIIIlIIlil1II = #{ 5687, 5390, 5914, 1734, 4323, 6795, 4339, 3463, 6071, 4768, 5026, 2919, 5456, 6923, 4986, 4541, 2245, 5545, 5179, 6886, 3082, 551 } + lIlIiiIIIlI1IiII1llll + 97354 == #{ 5187, 4898, 3911, 2816, 1314, 1666, 4150, 3408, 3535, 3168, 1300, 1839, 3479, 951, 3057, 5667, 5417, 6483, 4744, 2216, 6661, 6581 } + lIlIiiIIIlI1IiII1llll + 125987 end if ill1l1Ii11IlliIlII1 == #{ 5213, 728, 240, 1381, 5502, 6881, 1971, 3386, 5331, 1247, 6553, 4857, 420, 3743, 1346, 390, 903, 4771, 2871, 2066, 3375, 6776, 2658, 5451 } + lIlIiiIIIlI1IiII1llll + -58 then lIlI1iIllIIIlIIlil1II = i1l1I1ii1lIi1iIIiii(lIlIl1I1i11lIlIiIIliI(ll111lliiiiiIi11llI), #{3918}) end if ill1l1Ii11IlliIlII1 == #{ 6161, 4325, 5205, 5832, 4499, 6106, 6672, 4465, 1997, 2559, 2966, 3727, 1251, 4736, 1952, 373, 1173, 1203, 1832, 1817, 6373, 4784, 2785, 906 } + lIlIiiIIIlI1IiII1llll + 31 then lIlI1iIllIIIlIIlil1II = #{ 6596, 2897, 5394, 2554, 2928, 5854, 2618, 563, 1462, 4951, 4664, 230, 2924, 4342, 3966, 4774, 2479, 1405, 5846, 518, 4115 } + lIlIiiIIIlI1IiII1llll + 103746 == #{ 6596, 2897, 5394, 2554, 2928, 5854, 2618, 563, 1462, 4951, 4664, 230, 2924, 4342, 3966, 4774, 2479, 1405, 5846, 518, 4115 } + lIlIiiIIIlI1IiII1llll + 103746 end if ill1l1Ii11IlliIlII1 == #{ 1637, 1111, 3437, 1782, 3255, 4967, 1274, 1101, 1116, 2512, 5355, 2670, 6949, 4, 6859, 2477, 1448, 704, 6031, 4716 } + lIlIiiIIIlI1IiII1llll + -97 then lIlI1iIllIIIlIIlil1II = lIl11ill1IiiIlIi1ll1l() end if ill1l1Ii11IlliIlII1 == #{ 6157, 5391, 3195, 1812, 4864, 1010, 6303, 810, 216, 5210, 6088, 2083, 1165, 4763, 3203, 3911, 3816, 6438, 5183, 4269, 5317 } + lIlIiiIIIlI1IiII1llll + -3 then lIlI1iIllIIIlIIlil1II = i1l1I1ii1lIi1iIIiii(lIlIl1I1i11lIlIiIIliI(ll111lliiiiiIi11llI), #{3918}) end if ill1l1Ii11IlliIlII1 == #{ 3929, 420, 6574, 2091, 4441, 232, 903, 1745, 6573, 210, 2265, 34, 4370, 826, 2016, 5140, 363, 2270, 6693, 4042, 2483, 819 } + lIlIiiIIIlI1IiII1llll + -60 then lIlI1iIllIIIlIIlil1II = i1l1I1ii1lIi1iIIiii(lIlIl1I1i11lIlIiIIliI(ll111lliiiiiIi11llI), #{3918}) end if ill1l1Ii11IlliIlII1 == #{ 2396, 5704, 5233, 4066, 394, 1478, 2630, 1705, 2068, 6899, 6801, 5097, 27, 5207, 1262, 2015, 6581, 2105, 2747, 5868, 1529, 6240 } + lIlIiiIIIlI1IiII1llll + -84 then lIlI1iIllIIIlIIlil1II = I11liIi111l11llllIl() end if ill1l1Ii11IlliIlII1 == #{ 1693, 6572, 545, 1952, 2794, 2704, 4786, 591, 5329, 1668, 3029, 4396, 185, 2171, 1523, 715, 1316, 5346, 3166, 3073, 5924 } + lIlIiiIIIlI1IiII1llll + -19 then lIlI1iIllIIIlIIlil1II = i1l1I1ii1lIi1iIIiii(lIlIl1I1i11lIlIiIIliI(ll111lliiiiiIi11llI), #{ 2138, 1623, 5143, 5355, 202 }) end if ill1l1Ii11IlliIlII1 == #{ 3445, 746, 5053, 101, 1205, 5875, 149, 893, 5154, 4556, 1447, 5660, 5580, 2310, 6570, 4750, 5864, 4532, 5668, 4002, 3343, 2335, 2441 } + lIlIiiIIIlI1IiII1llll + -99 then lIlI1iIllIIIlIIlil1II = lIl11ill1IiiIlIi1ll1l() end lillilllilli1I1lIlI[4][lIlI11I1ill1IilI1Iil1 - lIliiilliliIII1li1Il1] = lIlI1iIllIIIlIIlil1II end for lIlI11I1ill1IilI1Iil1 = lIliiilliliIII1li1Il1, i1lIilIIii1iiI1iI11 do local IlilllIiII1iii1ilil = lillilllilli1I1lIlI[5][lIlI11I1ill1IilI1Iil1] local lIllIlilI1lliiIilil = I111l1lilIIiI11li11[IlilllIiII1iii1ilil[2]] if lIllIlilI1lliiIilil == #{ 734, 4725, 3601, 3230 } then IlilllIiII1iii1ilil[1] = lillilllilli1I1lIlI[4][IlilllIiII1iii1ilil[4]] end if lIllIlilI1lliiIilil == #{ 2791, 6369, 5972 } then if IlilllIiII1iii1ilil[5] > 255 then IlilllIiII1iii1ilil[10] = true IlilllIiII1iii1ilil[7] = lillilllilli1I1lIlI[4][IlilllIiII1iii1ilil[5] - 256] end if IlilllIiII1iii1ilil[9] > 255 then IlilllIiII1iii1ilil[8] = true IlilllIiII1iii1ilil[3] = lillilllilli1I1lIlI[4][IlilllIiII1iii1ilil[9] - 256] end end if lIllIlilI1lliiIilil == #{915} and IlilllIiII1iii1ilil[5] > 255 then IlilllIiII1iii1ilil[10] = true IlilllIiII1iii1ilil[7] = lillilllilli1I1lIlI[4][IlilllIiII1iii1ilil[5] - 256] end if lIllIlilI1lliiIilil == #{302, 3454} and IlilllIiII1iii1ilil[9] > 255 then IlilllIiII1iii1ilil[8] = true IlilllIiII1iii1ilil[3] = lillilllilli1I1lIlI[4][IlilllIiII1iii1ilil[9] - 256] end end local lI1Il1lIi1i1ll1liII = l1Ii11i1l11ll1iIl1i() for lIlI11I1ill1IilI1Iil1 = lIliiilliliIII1li1Il1, lI1Il1lIi1i1ll1liII do lillilllilli1I1lIlI[7][lIlI11I1ill1IilI1Iil1 - lIliiilliliIII1li1Il1] = llIIiIl1IIlIiI1iIi1() end lIl11ill1IiiIlIi1ll1l() l1Ii11i1l11ll1iIl1i() return lillilllilli1I1lIlI end local function iIIiIIII1lIiilII1il(lillilllilli1I1lIlI, IlI1lIiiIIlli11l1lI, iiiilllI1ll1llllIiI) local lIlllil1iili1i1iliIIi, I1IIlii111i1I1l111I = 0, 21 local lIliIIiIlil1IIIiI11Ii = lillilllilli1I1lIlI[5] local lIlllililii1II11i1IIi = 6 local iIIIlIili1iIlil1lll = lillilllilli1I1lIlI[7] local ll1liI1i1i1IIl1lllI = lillilllilli1I1lIlI[3] local iiii11ll11Ili1iIil1 = lillilllilli1I1lIlI[2] local lIli1liIIiiil1iIiiilI = 2 local l1ilIliIiiI1IIIil11 = lillilllilli1I1lIlI[1] local lI1iIiiI1lIIIllI11I = 5 local function l111iI1ll1lIIllI1Ii(...) local illI1I111IlIiil1iii = 0 local i11iiii11111iii1I11 = { lIl1llI1lilli1iIIl1ii({}, 1, iiii11ll11Ili1iIil1) } local I1IiiIii1iIIlIiiIII = 1 local l1ll1IllII1liI1lIIi = {} local lIll11i1IlIliIIiIill1 = {} local IlI1lIiiIIlli11l1lI = lIl11lIlii1i11I1i1lli() local ll1lIIlIlI1Illl1iil = { ... } local lIl1IiI1i1llIl1iIi1Il = #ll1lIIlIlI1Illl1iil - 1 for lIlI11I1ill1IilI1Iil1 = 0, lIl1IiI1i1llIl1iIi1Il do if lIlI11I1ill1IilI1Iil1 < ll1liI1i1i1IIl1lllI then i11iiii11111iii1I11[lIlI11I1ill1IilI1Iil1] = ll1lIIlIlI1Illl1iil[lIlI11I1ill1IilI1Iil1 + 1] end end local function i1lI111I111i1l1ii1l(...) local i1I1i1iiilIiiliIi1l = ll1iiIiI11ll11l1ili("#", ...) local lIlliIlllIli1I1IIll1l = { ... } return i1I1i1iiilIiiliIi1l, lIlliIlllIli1I1IIll1l end local function l1l1IIl1IIl1lIIlllI() while true do local Ili11ii1ll1iiliiIiI = lIliIIiIlil1IIIiI11Ii[I1IiiIii1iIIlIiiIII] local lIII1IIliiiIi1i1111 = Ili11ii1ll1iiliiIiI[2] I1IiiIii1iIIlIiiIII = I1IiiIii1iIIlIiiIII + 1 if lIII1IIliiiIi1i1111 < 11 then if lIII1IIliiiIi1i1111 < 5 then if lIII1IIliiiIi1i1111 < 2 then if lIII1IIliiiIi1i1111 ~= 1 then if Ili11ii1ll1iiliiIiI[9] == 104 then I1IiiIii1iIIlIiiIII = I1IiiIii1iIIlIiiIII - 1 lIliIIiIlil1IIIiI11Ii[I1IiiIii1iIIlIiiIII] = { [2] = 11, [6] = (Ili11ii1ll1iiliiIiI[6] - 239) % 256, [5] = (Ili11ii1ll1iiliiIiI[5] - 239) % 256 } else i11iiii11111iii1I11[Ili11ii1ll1iiliiIiI[6]] = i11iiii11111iii1I11[Ili11ii1ll1iiliiIiI[5]] end else local illIIli1lIIlIl1Ii11 = (Ili11ii1ll1iiliiIiI[9] - 1) * 50 local lIl1II1lIliilIIiIIl1I = Ili11ii1ll1iiliiIiI[5] if lIl1II1lIliilIIiIIl1I == 0 then lIl1II1lIliilIIiIIl1I = illI1I111IlIiil1iii - Ili11ii1ll1iiliiIiI[6] end for lIlI11I1ill1IilI1Iil1 = 1, lIl1II1lIliilIIiIIl1I do i11iiii11111iii1I11[Ili11ii1ll1iiliiIiI[6]][illIIli1lIIlIl1Ii11 + lIlI11I1ill1IilI1Iil1] = i11iiii11111iii1I11[Ili11ii1ll1iiliiIiI[6] + lIlI11I1ill1IilI1Iil1] end end elseif lIII1IIliiiIi1i1111 < 3 then if Ili11ii1ll1iiliiIiI[5] == 164 then I1IiiIii1iIIlIiiIII = I1IiiIii1iIIlIiiIII - 1 lIliIIiIlil1IIIiI11Ii[I1IiiIii1iIIlIiiIII] = { [2] = 0, [6] = (Ili11ii1ll1iiliiIiI[6] - 161) % 256, [5] = (Ili11ii1ll1iiliiIiI[9] - 161) % 256 } else local lIIii11IIi1iIlllIi1 = Ili11ii1ll1iiliiIiI[6] local illIIli1lIIlIl1Ii11 = lIIii11IIi1iIlllIi1 + 2 local il1llilI111I1l1iIlI = { i11iiii11111iii1I11[lIIii11IIi1iIlllIi1](i11iiii11111iii1I11[lIIii11IIi1iIlllIi1 + 1], i11iiii11111iii1I11[lIIii11IIi1iIlllIi1 + 2]) } for lIlI11I1ill1IilI1Iil1 = 1, Ili11ii1ll1iiliiIiI[9] do i11iiii11111iii1I11[illIIli1lIIlIl1Ii11 + lIlI11I1ill1IilI1Iil1] = il1llilI111I1l1iIlI[lIlI11I1ill1IilI1Iil1] end if i11iiii11111iii1I11[lIIii11IIi1iIlllIi1 + 3] ~= nil then i11iiii11111iii1I11[lIIii11IIi1iIlllIi1 + 2] = i11iiii11111iii1I11[lIIii11IIi1iIlllIi1 + 3] else I1IiiIii1iIIlIiiIII = I1IiiIii1iIIlIiiIII + 1 end end elseif lIII1IIliiiIi1i1111 == 4 then i11iiii11111iii1I11[Ili11ii1ll1iiliiIiI[6]] = Ili11ii1ll1iiliiIiI[1] else local l1IIlli1ilIiiIlili1, i1I1i1iiilIiiliIi1l if Ili11ii1ll1iiliiIiI[10] then l1IIlli1ilIiiIlili1 = Ili11ii1ll1iiliiIiI[7] else l1IIlli1ilIiiIlili1 = i11iiii11111iii1I11[Ili11ii1ll1iiliiIiI[5]] end if Ili11ii1ll1iiliiIiI[8] then i1I1i1iiilIiiliIi1l = Ili11ii1ll1iiliiIiI[3] else i1I1i1iiilIiiliIi1l = i11iiii11111iii1I11[Ili11ii1ll1iiliiIiI[9]] end if l1IIlli1ilIiiIlili1 == i1I1i1iiilIiiliIi1l ~= (Ili11ii1ll1iiliiIiI[6] ~= 0) then I1IiiIii1iIIlIiiIII = I1IiiIii1iIIlIiiIII + 1 end end elseif lIII1IIliiiIi1i1111 >= 8 then if lIII1IIliiiIi1i1111 >= 9 then if lIII1IIliiiIi1i1111 ~= 10 then i11iiii11111iii1I11[Ili11ii1ll1iiliiIiI[6]] = IlI1lIiiIIlli11l1lI[Ili11ii1ll1iiliiIiI[1]] else local li1lllIIIi1l11llill = iIIIlIili1iIlil1lll[Ili11ii1ll1iiliiIiI[4]] local lIlIiIli1iliili1llilI = {} if li1lllIIIi1l11llill[lIlllililii1II11i1IIi] > 0 then do local IllIl1i111l1i11llIi = {} lIlIiIli1iliili1llilI = iIlil1IIiilIii1llil({}, { __index = function(lIlliIlllIli1I1IIll1l, Iilli1lIl1I1ii1lIl1) local i11i1Iiii111ilIIl1I = IllIl1i111l1i11llIi[Iilli1lIl1I1ii1lIl1] return i11i1Iiii111ilIIl1I[1][i11i1Iiii111ilIIl1I[2]] end, __newindex = function(lIlliIlllIli1I1IIll1l, Iilli1lIl1I1ii1lIl1, iIli1i1iiillll1lIii) local i11i1Iiii111ilIIl1I = IllIl1i111l1i11llIi[Iilli1lIl1I1ii1lIl1] i11i1Iiii111ilIIl1I[1][i11i1Iiii111ilIIl1I[2]] = iIli1i1iiillll1lIii end }) for lIlI11I1ill1IilI1Iil1 = 1, li1lllIIIi1l11llill[lIlllililii1II11i1IIi] do local i1I1iili1ililIiI1i1 = lIliIIiIlil1IIIiI11Ii[I1IiiIii1iIIlIiiIII] if i1I1iili1ililIiI1i1[lIli1liIIiiil1iIiiilI] == lIlllil1iili1i1iliIIi then IllIl1i111l1i11llIi[lIlI11I1ill1IilI1Iil1 - 1] = { i11iiii11111iii1I11, i1I1iili1ililIiI1i1[lI1iIiiI1lIIIllI11I] } elseif i1I1iili1ililIiI1i1[lIli1liIIiiil1iIiiilI] == I1IIlii111i1I1l111I then IllIl1i111l1i11llIi[lIlI11I1ill1IilI1Iil1 - 1] = { iiiilllI1ll1llllIiI, i1I1iili1ililIiI1i1[lI1iIiiI1lIIIllI11I] } end I1IiiIii1iIIlIiiIII = I1IiiIii1iIIlIiiIII + 1 end if not l1ll1IllII1liI1lIIi[i11iiii11111iii1I11] then l1ll1IllII1liI1lIIi[i11iiii11111iii1I11] = {IllIl1i111l1i11llIi} else IIiil1IlI1l1IIl1I11(l1ll1IllII1liI1lIIi[i11iiii11111iii1I11], IllIl1i111l1i11llIi) end end end local lIli111iiI1lIi11II1ii = iIIiIIII1lIiilII1il(li1lllIIIi1l11llill, IlI1lIiiIIlli11l1lI, lIlIiIli1iliili1llilI) i11iiii11111iii1I11[Ili11ii1ll1iiliiIiI[6]] = lIli111iiI1lIi11II1ii end elseif Ili11ii1ll1iiliiIiI[9] == 51 then I1IiiIii1iIIlIiiIII = I1IiiIii1iIIlIiiIII - 1 lIliIIiIlil1IIIiI11Ii[I1IiiIii1iIIlIiiIII] = { [2] = 12, [6] = (Ili11ii1ll1iiliiIiI[6] - 12) % 256, [5] = (Ili11ii1ll1iiliiIiI[5] - 12) % 256 } else for lIlI11I1ill1IilI1Iil1 = Ili11ii1ll1iiliiIiI[6], Ili11ii1ll1iiliiIiI[5] do i11iiii11111iii1I11[lIlI11I1ill1IilI1Iil1] = nil end end elseif lIII1IIliiiIi1i1111 < 6 then IlI1lIiiIIlli11l1lI[Ili11ii1ll1iiliiIiI[1]] = i11iiii11111iii1I11[Ili11ii1ll1iiliiIiI[6]] elseif lIII1IIliiiIi1i1111 ~= 7 then local lIIii11IIi1iIlllIi1 = Ili11ii1ll1iiliiIiI[6] local ll1lIIlIlI1Illl1iil = Ili11ii1ll1iiliiIiI[5] local I1lIIilIii11l1iII1i = Ili11ii1ll1iiliiIiI[9] local lIlIIIi11i1iIiilIlIi1, lIlIilIII1ll1Ii1lIl1i, l1l1IIl1IIl1lIIlllI if ll1lIIlIlI1Illl1iil ~= 1 then if ll1lIIlIlI1Illl1iil ~= 0 then lIlIilIII1ll1Ii1lIl1i = lIIii11IIi1iIlllIi1 + ll1lIIlIlI1Illl1iil - 1 else lIlIilIII1ll1Ii1lIl1i = illI1I111IlIiil1iii end lIlIilIII1ll1Ii1lIl1i, lIlIIIi11i1iIiilIlIi1 = i1lI111I111i1l1ii1l(i11iiii11111iii1I11[lIIii11IIi1iIlllIi1](lIl1llI1lilli1iIIl1ii(i11iiii11111iii1I11, lIIii11IIi1iIlllIi1 + 1, lIlIilIII1ll1Ii1lIl1i))) else lIlIilIII1ll1Ii1lIl1i, lIlIIIi11i1iIiilIlIi1 = i1lI111I111i1l1ii1l(i11iiii11111iii1I11[lIIii11IIi1iIlllIi1]()) end if I1lIIilIii11l1iII1i ~= 1 then if I1lIIilIii11l1iII1i ~= 0 then lIlIilIII1ll1Ii1lIl1i = lIIii11IIi1iIlllIi1 + I1lIIilIii11l1iII1i - 2 illI1I111IlIiil1iii = lIlIilIII1ll1Ii1lIl1i + 1 else lIlIilIII1ll1Ii1lIl1i = lIlIilIII1ll1Ii1lIl1i + lIIii11IIi1iIlllIi1 - 1 illI1I111IlIiil1iii = lIlIilIII1ll1Ii1lIl1i end l1l1IIl1IIl1lIIlllI = 0 for lIlI11I1ill1IilI1Iil1 = lIIii11IIi1iIlllIi1, lIlIilIII1ll1Ii1lIl1i do l1l1IIl1IIl1lIIlllI = l1l1IIl1IIl1lIIlllI + 1 i11iiii11111iii1I11[lIlI11I1ill1IilI1Iil1] = lIlIIIi11i1iIiilIlIi1[l1l1IIl1IIl1lIIlllI] end else illI1I111IlIiil1iii = lIIii11IIi1iIlllIi1 - 1 end for lIlI11I1ill1IilI1Iil1 = illI1I111IlIiil1iii + 1, iiii11ll11Ili1iIil1 do i11iiii11111iii1I11[lIlI11I1ill1IilI1Iil1] = nil end else i11iiii11111iii1I11[Ili11ii1ll1iiliiIiI[6]] = { lIl1llI1lilli1iIIl1ii(lIll1il1ll11ii1illII1, 1, Ili11ii1ll1iiliiIiI[5] == 0 and 255 or Ili11ii1ll1iiliiIiI[5]) } end elseif lIII1IIliiiIi1i1111 >= 16 then if lIII1IIliiiIi1i1111 < 19 then if lIII1IIliiiIi1i1111 < 17 then if not not i11iiii11111iii1I11[Ili11ii1ll1iiliiIiI[6]] == (Ili11ii1ll1iiliiIiI[9] == 0) then I1IiiIii1iIIlIiiIII = I1IiiIii1iIIlIiiIII + 1 end elseif lIII1IIliiiIi1i1111 ~= 18 then I1IiiIii1iIIlIiiIII = I1IiiIii1iIIlIiiIII + (Ili11ii1ll1iiliiIiI[4] - lIlilllllI1llli1lll1i) else local l1IIlli1ilIiiIlili1, i1I1i1iiilIiiliIi1l if Ili11ii1ll1iiliiIiI[10] then l1IIlli1ilIiiIlili1 = Ili11ii1ll1iiliiIiI[7] else l1IIlli1ilIiiIlili1 = i11iiii11111iii1I11[Ili11ii1ll1iiliiIiI[5]] end if Ili11ii1ll1iiliiIiI[8] then i1I1i1iiilIiiliIi1l = Ili11ii1ll1iiliiIiI[3] else i1I1i1iiilIiiliIi1l = i11iiii11111iii1I11[Ili11ii1ll1iiliiIiI[9]] end i11iiii11111iii1I11[Ili11ii1ll1iiliiIiI[6]][l1IIlli1ilIiiIlili1] = i1I1i1iiilIiiliIi1l end elseif lIII1IIliiiIi1i1111 >= 20 then if lIII1IIliiiIi1i1111 == 21 then if Ili11ii1ll1iiliiIiI[9] == 49 then I1IiiIii1iIIlIiiIII = I1IiiIii1iIIlIiiIII - 1 lIliIIiIlil1IIIiI11Ii[I1IiiIii1iIIlIiiIII] = { [2] = 16, [6] = (Ili11ii1ll1iiliiIiI[6] - 79) % 256, [9] = (Ili11ii1ll1iiliiIiI[5] - 79) % 256 } elseif Ili11ii1ll1iiliiIiI[9] == 184 then I1IiiIii1iIIlIiiIII = I1IiiIii1iIIlIiiIII - 1 lIliIIiIlil1IIIiI11Ii[I1IiiIii1iIIlIiiIII] = { [2] = 2, [6] = (Ili11ii1ll1iiliiIiI[6] - 36) % 256, [9] = (Ili11ii1ll1iiliiIiI[5] - 36) % 256 } else i11iiii11111iii1I11[Ili11ii1ll1iiliiIiI[6]] = iiiilllI1ll1llllIiI[Ili11ii1ll1iiliiIiI[5]] end else local i1I1i1iiilIiiliIi1l if Ili11ii1ll1iiliiIiI[8] then i1I1i1iiilIiiliIi1l = Ili11ii1ll1iiliiIiI[3] else i1I1i1iiilIiiliIi1l = i11iiii11111iii1I11[Ili11ii1ll1iiliiIiI[9]] end i11iiii11111iii1I11[Ili11ii1ll1iiliiIiI[6]] = i11iiii11111iii1I11[Ili11ii1ll1iiliiIiI[5]][i1I1i1iiilIiiliIi1l] end elseif Ili11ii1ll1iiliiIiI[9] == 164 then I1IiiIii1iIIlIiiIII = I1IiiIii1iIIlIiiIII - 1 lIliIIiIlil1IIIiI11Ii[I1IiiIii1iIIlIiiIII] = { [2] = 21, [6] = (Ili11ii1ll1iiliiIiI[6] - 140) % 256, [5] = (Ili11ii1ll1iiliiIiI[5] - 140) % 256 } else i11iiii11111iii1I11[Ili11ii1ll1iiliiIiI[6]] = not i11iiii11111iii1I11[Ili11ii1ll1iiliiIiI[5]] end elseif lIII1IIliiiIi1i1111 < 13 then if lIII1IIliiiIi1i1111 ~= 12 then iiiilllI1ll1llllIiI[Ili11ii1ll1iiliiIiI[5]] = i11iiii11111iii1I11[Ili11ii1ll1iiliiIiI[6]] else l1ll1IllII1liI1lIIi[i11iiii11111iii1I11] = nil local lIIii11IIi1iIlllIi1 = Ili11ii1ll1iiliiIiI[6] local ii1lilIIilliIillI11 = Ili11ii1ll1iiliiIiI[5] if ii1lilIIilliIillI11 == 1 then return true end local lIlIilIII1ll1Ii1lIl1i = lIIii11IIi1iIlllIi1 + ii1lilIIilliIillI11 - 2 if ii1lilIIilliIillI11 == 0 then lIlIilIII1ll1Ii1lIl1i = illI1I111IlIiil1iii end return true, lIIii11IIi1iIlllIi1, lIlIilIII1ll1Ii1lIl1i end elseif lIII1IIliiiIi1i1111 >= 14 then if lIII1IIliiiIi1i1111 == 15 then local I1lIliiillii11IIlll = i11iiii11111iii1I11[Ili11ii1ll1iiliiIiI[5]] local i1I1i1iiilIiiliIi1l if Ili11ii1ll1iiliiIiI[8] then i1I1i1iiilIiiliIi1l = Ili11ii1ll1iiliiIiI[3] else i1I1i1iiilIiiliIi1l = i11iiii11111iii1I11[Ili11ii1ll1iiliiIiI[9]] end i11iiii11111iii1I11[Ili11ii1ll1iiliiIiI[6] + 1] = I1lIliiillii11IIlll i11iiii11111iii1I11[Ili11ii1ll1iiliiIiI[6]] = I1lIliiillii11IIlll[i1I1i1iiilIiiliIi1l] else local l1IIlli1ilIiiIlili1, i1I1i1iiilIiiliIi1l if Ili11ii1ll1iiliiIiI[10] then l1IIlli1ilIiiIlili1 = Ili11ii1ll1iiliiIiI[7] else l1IIlli1ilIiiIlili1 = i11iiii11111iii1I11[Ili11ii1ll1iiliiIiI[5]] end if Ili11ii1ll1iiliiIiI[8] then i1I1i1iiilIiiliIi1l = Ili11ii1ll1iiliiIiI[3] else i1I1i1iiilIiiliIi1l = i11iiii11111iii1I11[Ili11ii1ll1iiliiIiI[9]] end i11iiii11111iii1I11[Ili11ii1ll1iiliiIiI[6]] = l1IIlli1ilIiiIlili1 * i1I1i1iiilIiiliIi1l end else i11iiii11111iii1I11[Ili11ii1ll1iiliiIiI[6]] = Ili11ii1ll1iiliiIiI[5] ~= 0 if Ili11ii1ll1iiliiIiI[9] ~= 0 then I1IiiIii1iIIlIiiIII = I1IiiIii1iIIlIiiIII + 1 end end end end local lillillIIlIlil1I11I, i1lilIIiI1lIIIl1III, lIliII1l1il1l1lIIl11l, il1IIlliI11I11Iilll = li111lIliiI11lIlIi1(l1l1IIl1IIl1lIIlllI) if lillillIIlIlil1I11I then if lIliII1l1il1l1lIIl11l then return lIl1llI1lilli1iIIl1ii(i11iiii11111iii1I11, lIliII1l1il1l1lIIl11l, il1IIlliI11I11Iilll) end else i1lI1iiil1i1lIIl11i("Luraph Script:" .. (l1ilIliIiiI1IIIil11[I1IiiIii1iIIlIiiIII - 1] or "") .. ": " .. illi111I1IIliii1liI(i1lilIIiI1lIIIl1III), 0) end end lli1Il1iiI1Iiili11l(l111iI1ll1lIIllI1Ii, IlI1lIiiIIlli11l1lI) return l111iI1ll1lIIllI1Ii end local II1II1li1llii1l1Iil = llIIiIl1IIlIiI1iIi1() return iIIiIIII1lIiilII1il(II1II1li1llii1l1Iil, IlI1lIiiIIlli11l1lI)() end lIlIiIl11liIliIII11iilIl11lIlii1i11I1i1lli()) 