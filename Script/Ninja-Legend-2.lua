local lIlI1IIIllI1iIliI1IlI = assert local iillIiIIIili1iIi1II = select local i1lI1i11il111i1Ii1I = tonumber local li1lllii1I1Il11lIii = unpack local IlII1lIi11IliIiill1 = pcall local iIiIII1111I1IlI11l1 = setfenv local i1i1Ii1IlIli11iIll1 = setmetatable local I11iIl1lIIlliliiIii = type local lIiiIiIliIllI1i1I1l = getfenv local iIllIll1IiIl1IiIliI = tostring local IIIlI1IiilI1i1IiIll = error local liIII11ilII1iI1I1Ii = string.sub local lI11il1ii1IllililII = string.byte local iiiiII1lIllI1iIl1ll = string.char local lIllliIIIiiIlIiiII1I1 = string.rep local IIlli1liil1iiii1l1I = string.gsub local Ii1IiI1ill1iIl1IIli = string.match local ili1l1l1llIlIill11I = table.insert local I1iilIi1iIlIII1liI1 = lI11il1ii1IllililII("P", 1) local lIlliIIIllii11Ii1l1lI, lIl1ii1I111II11il1l = #{5219}, #{ 4170, 1687, 2946, 4606, 3252, 3281, 5315, 1513, 3130, 4350, 4595, 2348, 4868, 3264, 6, 3112, 4657, 31, 6212, 6213, 5020, 2595, 1940 } + I1iilIi1iIlIII1liI1 + 130968 local lIli1I1I11iIIllI1I1II = {} local l1IIiIlIiiiI1IIlIli = 1 local ii1l1II1il1liiI1IlI, lIl1l1llll1lliiilI1I1 local function lIllIli11lIl1il1I1li1(lIl1IIilI1illi1I1lIii, IlIlIlillI1IIII1liI) local iIl1l1il1li1lI1I111 lIl1IIilI1illi1I1lIii = IIlli1liil1iiii1l1I(liIII11ilII1iI1I1Ii(lIl1IIilI1illi1I1lIii, 5), "..", function(IlliIi1iI11iIIII111) if lI11il1ii1IllililII(IlliIi1iI11iIIII111, 2) == 72 then iIl1l1il1li1lI1I111 = i1lI1i11il111i1Ii1I(liIII11ilII1iI1I1Ii(IlliIi1iI11iIIII111, 1, 1)) return "" else local ii1iiIiiiiIliIiilli = iiiiII1lIllI1iIl1ll(i1lI1i11il111i1Ii1I(IlliIi1iI11iIIII111, 16)) if iIl1l1il1li1lI1I111 then local iii1iIi1I11iIli1I1i = lIllliIIIiiIlIiiII1I1(ii1iiIiiiiIliIiilli, iIl1l1il1li1lI1I111) iIl1l1il1li1lI1I111 = nil return iii1iIi1I11iIli1I1i else return ii1iiIiiiiIliIiilli end end end) local function lIl1Il1lIll1l1lI11i() local lIIiIlIIII1i1lllIiI = lI11il1ii1IllililII(lIl1IIilI1illi1I1lIii, l1IIiIlIiiiI1IIlIli, l1IIiIlIiiiI1IIlIli) l1IIiIlIiiiI1IIlIli = l1IIiIlIiiiI1IIlIli + 1 return lIIiIlIIII1i1lllIiI end local function illlll11iliilI1lI1i() local lIIiIlIIII1i1lllIiI, ii1iiIiiiiIliIiilli, iii1iIi1I11iIli1I1i, lIlliiiiII1illll1IiI1 = lI11il1ii1IllililII(lIl1IIilI1illi1I1lIii, l1IIiIlIiiiI1IIlIli, l1IIiIlIiiiI1IIlIli + 3) l1IIiIlIiiiI1IIlIli = l1IIiIlIiiiI1IIlIli + 4 return lIlliiiiII1illll1IiI1 * 16777216 + iii1iIi1I11iIli1I1i * 65536 + ii1iiIiiiiIliIiilli * 256 + lIIiIlIIII1i1lllIiI end local function Iii1l1Ii1lilI1iil1i(IiI11IlI11liIlI111l, l1lI1iIlI11lIIiIl1i, iili11i11I1i1llI1Ii) if iili11i11I1i1llI1Ii then local iIilli1i1li1l11Ii1i, ii11llllllllilll1iI = 0, 0 for iliiili1lli1IIll1l1 = l1lI1iIlI11lIIiIl1i, iili11i11I1i1llI1Ii do iIilli1i1li1l11Ii1i = iIilli1i1li1l11Ii1i + 2 ^ ii11llllllllilll1iI * Iii1l1Ii1lilI1iil1i(IiI11IlI11liIlI111l, iliiili1lli1IIll1l1) ii11llllllllilll1iI = ii11llllllllilll1iI + 1 end return iIilli1i1li1l11Ii1i else local lIliIii1IlIlIII1iilil = 2 ^ (l1lI1iIlI11lIIiIl1i - 1) return lIliIii1IlIlIII1iilil <= IiI11IlI11liIlI111l % (lIliIii1IlIlIII1iilil + lIliIii1IlIlIII1iilil) and 1 or 0 end end local function IIiIiiI1lli11II1ill() local lIIiIlIIII1i1lllIiI, ii1iiIiiiiIliIiilli = illlll11iliilI1lI1i(), illlll11iliilI1lI1i() if lIIiIlIIII1i1lllIiI == 0 and ii1iiIiiiiIliIiilli == 0 then return 0 end return (-2 * Iii1l1Ii1lilI1iil1i(ii1iiIiiiiIliIiilli, 32) + 1) * 2 ^ (Iii1l1Ii1lilI1iil1i(ii1iiIiiiiIliIiilli, 21, 31) - 1023) * ((Iii1l1Ii1lilI1iil1i(ii1iiIiiiiIliIiilli, 1, 20) * 4294967296 + lIIiIlIIII1i1lllIiI) / 4503599627370496 + 1) end local iliIi1i111IlIii1ii1 = bit or bit32 local lIi1iIlillil1Ii11iI = iliIi1i111IlIii1ii1 and iliIi1i111IlIii1ii1.bxor or function(lIIiIlIIII1i1lllIiI, ii1iiIiiiiIliIiilli) local I1IliIiIIIl1II111ii = 1 local iii1iIi1I11iIli1I1i = 0 while lIIiIlIIII1i1lllIiI > 0 and ii1iiIiiiiIliIiilli > 0 do local ll1lll11IIIIiIIIlll = lIIiIlIIII1i1lllIiI % 2 local Ii11iIllIlli11lIlil = ii1iiIiiiiIliIiilli % 2 if ll1lll11IIIIiIIIlll ~= Ii11iIllIlli11lIlil then iii1iIi1I11iIli1I1i = iii1iIi1I11iIli1I1i + I1IliIiIIIl1II111ii end lIIiIlIIII1i1lllIiI = (lIIiIlIIII1i1lllIiI - ll1lll11IIIIiIIIlll) / 2 ii1iiIiiiiIliIiilli = (ii1iiIiiiiIliIiilli - Ii11iIllIlli11lIlil) / 2 I1IliIiIIIl1II111ii = I1IliIiIIIl1II111ii * 2 end if lIIiIlIIII1i1lllIiI < ii1iiIiiiiIliIiilli then lIIiIlIIII1i1lllIiI = ii1iiIiiiiIliIiilli end while lIIiIlIIII1i1lllIiI > 0 do local ll1lll11IIIIiIIIlll = lIIiIlIIII1i1lllIiI % 2 if ll1lll11IIIIiIIIlll > 0 then iii1iIi1I11iIli1I1i = iii1iIi1I11iIli1I1i + I1IliIiIIIl1II111ii end lIIiIlIIII1i1lllIiI = (lIIiIlIIII1i1lllIiI - ll1lll11IIIIiIIIlll) / 2 I1IliIiIIIl1II111ii = I1IliIiIIIl1II111ii * 2 end return iii1iIi1I11iIli1I1i end local function iil1llllliIl1Illl1i(lI11llllI1lIilIi1Ii) local lIli1IiiiilIii11I1I1l = { lI11il1ii1IllililII(lIl1IIilI1illi1I1lIii, l1IIiIlIiiiI1IIlIli, l1IIiIlIiiiI1IIlIli + 3) } l1IIiIlIiiiI1IIlIli = l1IIiIlIiiiI1IIlIli + 4 local lIIiIlIIII1i1lllIiI = lIi1iIlillil1Ii11iI(lIli1IiiiilIii11I1I1l[1], lIl1l1llll1lliiilI1I1) local ii1iiIiiiiIliIiilli = lIi1iIlillil1Ii11iI(lIli1IiiiilIii11I1I1l[2], lIl1l1llll1lliiilI1I1) local iii1iIi1I11iIli1I1i = lIi1iIlillil1Ii11iI(lIli1IiiiilIii11I1I1l[3], lIl1l1llll1lliiilI1I1) local lIlliiiiII1illll1IiI1 = lIi1iIlillil1Ii11iI(lIli1IiiiilIii11I1I1l[4], lIl1l1llll1lliiilI1I1) lIl1l1llll1lliiilI1I1 = (13 * lIl1l1llll1lliiilI1I1 + lI11llllI1lIilIi1Ii) % 256 return lIlliiiiII1illll1IiI1 * 16777216 + iii1iIi1I11iIli1I1i * 65536 + ii1iiIiiiiIliIiilli * 256 + lIIiIlIIII1i1lllIiI end local function llill1Il1i1Iili1ili(lii1li11liIlliiili1) local i11lIIl1I1l1lil1il1 = illlll11iliilI1lI1i() local lIliiIlliililiil11Ill = "" for iliiili1lli1IIll1l1 = lIlliIIIllii11Ii1l1lI, i11lIIl1I1l1lil1il1 do lIliiIlliililiil11Ill = lIliiIlliililiil11Ill .. iiiiII1lIllI1iIl1ll(lIi1iIlillil1Ii11iI(lI11il1ii1IllililII(lIl1IIilI1illi1I1lIii, l1IIiIlIiiiI1IIlIli + iliiili1lli1IIll1l1 - 1), ii1l1II1il1liiI1IlI)) ii1l1II1il1liiI1IlI = (lii1li11liIlliiili1 * ii1l1II1il1liiI1IlI + 193) % 256 end l1IIiIlIiiiI1IIlIli = l1IIiIlIiiiI1IIlIli + i11lIIl1I1l1lil1il1 return lIliiIlliililiil11Ill end ii1l1II1il1liiI1IlI = lIl1Il1lIll1l1lI11i() lIl1l1llll1lliiilI1I1 = lIl1Il1lIll1l1lI11i() local lIlI1IiiIIii1l1I1ill1 = {} for iliiili1lli1IIll1l1 = lIlliIIIllii11Ii1l1lI, lIl1Il1lIll1l1lI11i() do local lIlii1liIlIiI1IlIl1l1 = lIl1Il1lIll1l1lI11i() local IIIIii1II1i1iIIiilI = (iliiili1lli1IIll1l1 - 1) * 2 lIlI1IiiIIii1l1I1ill1[IIIIii1II1i1iIIiilI] = Iii1l1Ii1lilI1iil1i(lIlii1liIlIiI1IlIl1l1, 1, 4) lIlI1IiiIIii1l1I1ill1[IIIIii1II1i1iIIiilI + 1] = Iii1l1Ii1lilI1iil1i(lIlii1liIlIiI1IlIl1l1, 5, 8) end local function i1iI111i11I11i1i1ii() local lIl11iiilIliIIlIIiI1I = { {}, nil, nil, {}, {}, nil, {} } illlll11iliilI1lI1i() lIl1Il1lIll1l1lI11i() lIl11iiilIliIIlIIiI1I[6] = lIl1Il1lIll1l1lI11i() lIl1Il1lIll1l1lI11i() lIl1Il1lIll1l1lI11i() lIl1Il1lIll1l1lI11i() lIl1Il1lIll1l1lI11i() illlll11iliilI1lI1i() lIl1Il1lIll1l1lI11i() lIl1Il1lIll1l1lI11i() local lilIlI1iIilI11Ill1I = illlll11iliilI1lI1i() for iliiili1lli1IIll1l1 = lIlliIIIllii11Ii1l1lI, lilIlI1iIilI11Ill1I do lIl11iiilIliIIlIIiI1I[1][iliiili1lli1IIll1l1] = illlll11iliilI1lI1i() end illlll11iliilI1lI1i() illlll11iliilI1lI1i() illlll11iliilI1lI1i() illlll11iliilI1lI1i() illlll11iliilI1lI1i() lIl1Il1lIll1l1lI11i() local lilIlI1iIilI11Ill1I = illlll11iliilI1lI1i() - (#{ 1271, 2773, 920, 2509, 425, 6330, 6648, 6018, 5205, 2424, 2511, 1295, 1889, 3100, 3970, 5293, 3081, 627, 462, 4144, 2696 } + I1iilIi1iIlIII1liI1 + 133615) local llIi11l1i1IlIIIlIIi = lIl1Il1lIll1l1lI11i() for iliiili1lli1IIll1l1 = lIlliIIIllii11Ii1l1lI, lilIlI1iIilI11Ill1I do local i1IiI1iiiIIIIIIl1Il local I11iIl1lIIlliliiIii = lIl1Il1lIll1l1lI11i() if I11iIl1lIIlliliiIii == #{2419, 4693} then i1IiI1iiiIIIIIIl1Il = liIII11ilII1iI1I1Ii(llill1Il1i1Iili1ili(#{ 3701, 848, 2161, 1460, 6080, 2930, 448, 566, 3666, 5557, 5466, 2469, 613, 975, 1437, 268, 824, 5844, 2082, 4486, 5225, 5280, 2597 } + I1iilIi1iIlIII1liI1 + 17), #{ 1462, 6683, 3948 }) end if I11iIl1lIIlliliiIii == #{ 3495, 5989, 3775, 3229, 3163, 3176, 6451, 6346, 4433, 4084, 3725, 5476, 2458, 3278, 1810, 495, 5706, 333, 3522, 4075, 96 } + I1iilIi1iIlIII1liI1 + 77 then i1IiI1iiiIIIIIIl1Il = #{ 3018, 982, 1306, 4864, 5471, 1037, 4459, 2704, 2700, 2596, 6215, 435, 1685, 4553, 6276, 1516, 307, 6889, 3266, 4561 } + I1iilIi1iIlIII1liI1 + 102331 == #{ 2863, 3534, 1654, 5771, 4429, 2693, 3369, 301, 4989, 1424, 3541, 4853, 4328, 2731, 4410, 952, 6167, 1084, 1472, 3921, 6037, 3838, 3935, 3093 } + I1iilIi1iIlIII1liI1 + 56648 end if I11iIl1lIIlliliiIii == #{ 6130, 603, 3847, 4345, 538, 4488, 5496, 1431, 4801, 3481, 5418, 3568, 2130, 1309, 2529, 5723, 1504, 4406, 6125, 6861, 3582 } + I1iilIi1iIlIII1liI1 + -51 then i1IiI1iiiIIIIIIl1Il = #{ 3319, 6873, 5948, 474, 27, 2266, 2862, 4965, 1152, 6027, 1561, 1118, 3499, 531, 1250, 4957, 6724, 2320, 3015, 6637, 2121, 527 } + I1iilIi1iIlIII1liI1 + 104510 == #{ 3319, 6873, 5948, 474, 27, 2266, 2862, 4965, 1152, 6027, 1561, 1118, 3499, 531, 1250, 4957, 6724, 2320, 3015, 6637, 2121, 527 } + I1iilIi1iIlIII1liI1 + 104510 end if I11iIl1lIIlliliiIii == #{ 1705, 2682, 2741, 5388, 1618, 5941, 5671, 5764, 6059, 3110, 3885, 2585, 6172, 4671, 4371, 6372, 2900, 4035, 5907, 4719, 3073, 3341, 4071, 6440 } + I1iilIi1iIlIII1liI1 + 76 then i1IiI1iiiIIIIIIl1Il = IIiIiiI1lli11II1ill() end if I11iIl1lIIlliliiIii == #{ 5335, 3750, 615, 1872, 1367, 3112, 4120, 3532, 6205, 4518, 5533, 391, 1267, 5517, 4473, 5282, 5619, 932, 1870, 5546 } + I1iilIi1iIlIII1liI1 + 17 then i1IiI1iiiIIIIIIl1Il = liIII11ilII1iI1I1Ii(llill1Il1i1Iili1ili(llIi11l1i1IlIIIlIIi), #{ 4439, 810, 3481, 799, 2719, 294 }) end if I11iIl1lIIlliliiIii == #{ 1929, 576, 3194, 1324, 4490, 3547, 6850, 4254, 5915, 5575, 2757, 477, 6005, 1576, 4829, 5090, 6505, 1196, 6415, 2515, 5587, 6788 } + I1iilIi1iIlIII1liI1 + 141 then i1IiI1iiiIIIIIIl1Il = liIII11ilII1iI1I1Ii(llill1Il1i1Iili1ili(insEncKey), #{ 3902, 6329, 3589, 5835, 4519 }) end if I11iIl1lIIlliliiIii == #{ 2107, 946, 2511, 1767, 2888, 4769, 1842, 2688, 2666, 6037, 288, 6510, 2935, 6501, 3861, 5560, 6660, 2562, 2327, 4802, 5433 } + I1iilIi1iIlIII1liI1 + 127 then i1IiI1iiiIIIIIIl1Il = liIII11ilII1iI1I1Ii(llill1Il1i1Iili1ili(insEncKey), #{ 3902, 6329, 3589, 5835, 4519 }) end if I11iIl1lIIlliliiIii == #{ 2449, 4526, 2424, 6261, 1620, 4487, 3681, 5326, 5317, 1307, 968, 642, 4819, 887, 2576, 807, 4471, 4647, 6964, 6517, 2562, 170 } + I1iilIi1iIlIII1liI1 + 138 then i1IiI1iiiIIIIIIl1Il = liIII11ilII1iI1I1Ii(llill1Il1i1Iili1ili(insEncKey), #{ 3902, 6329, 3589, 5835, 4519 }) end if I11iIl1lIIlliliiIii == #{ 2068, 1665, 5107, 5275, 1500, 1449, 5994, 489, 1364, 5294, 5417, 4177, 5024, 1451, 2497, 2303, 5616, 3594, 4726, 2720, 4087, 4053, 3374 } + I1iilIi1iIlIII1liI1 + -64 then i1IiI1iiiIIIIIIl1Il = liIII11ilII1iI1I1Ii(llill1Il1i1Iili1ili(insEncKey), #{ 3902, 6329, 3589, 5835, 4519 }) end lIl11iiilIliIIlIIiI1I[5][iliiili1lli1IIll1l1 - lIlliIIIllii11Ii1l1lI] = i1IiI1iiiIIIIIIl1Il end lIl1Il1lIll1l1lI11i() illlll11iliilI1lI1i() lIl11iiilIliIIlIIiI1I[2] = lIl1Il1lIll1l1lI11i() local lilIlI1iIilI11Ill1I = illlll11iliilI1lI1i() for iliiili1lli1IIll1l1 = lIlliIIIllii11Ii1l1lI, lilIlI1iIilI11Ill1I do lIl11iiilIliIIlIIiI1I[7][iliiili1lli1IIll1l1 - lIlliIIIllii11Ii1l1lI] = i1iI111i11I11i1i1ii() end lIl1Il1lIll1l1lI11i() illlll11iliilI1lI1i() illlll11iliilI1lI1i() lIl11iiilIliIIlIIiI1I[3] = lIl1Il1lIll1l1lI11i() local iII1iIi1lIllilillIi = illlll11iliilI1lI1i() - (#{ 4556, 6731, 2229, 6739, 4145, 5381, 1780, 3589, 4021, 3219, 3321, 2757, 224, 695, 2543, 6209, 3559, 4606, 5769, 6496 } + I1iilIi1iIlIII1liI1 + 133603) local Ii1il1liIiIlilI11iI = lIl1Il1lIll1l1lI11i() for iliiili1lli1IIll1l1 = lIlliIIIllii11Ii1l1lI, iII1iIi1lIllilillIi do local ii1IiiIlII1Iil1iIlI = { nil, nil, nil, nil, nil, nil, nil, nil, nil, nil } local lIlii1liIlIiI1IlIl1l1 = iil1llllliIl1Illl1i(Ii1il1liIiIlilI11iI) ii1IiiIlII1Iil1iIlI[3] = Iii1l1Ii1lilI1iil1i(lIlii1liIlIiI1IlIl1l1, #{ 5088, 3107, 2559, 565, 1433, 4395, 1987, 4376, 5975, 5036, 1324, 2065, 524, 1976, 6869, 3752, 3725, 3641, 2454 }, #{ 544, 1496, 1811, 3056, 6085, 6881, 2081, 3499, 3169, 3622, 5928, 3935, 5407, 1654, 1954, 4746, 791, 2216, 6767, 2002 } + I1iilIi1iIlIII1liI1 + -74) ii1IiiIlII1Iil1iIlI[9] = Iii1l1Ii1lilI1iil1i(lIlii1liIlIiI1IlIl1l1, #{4944}, #{ 5267, 5532, 2541, 5931, 4272, 1408, 4997, 3408, 3394, 822, 4034, 2734, 3700, 6424, 5501, 4491, 6198, 3651 }) ii1IiiIlII1Iil1iIlI[5] = Iii1l1Ii1lilI1iil1i(lIlii1liIlIiI1IlIl1l1, #{ 5872, 3364, 4763, 6249, 5402, 4602, 4859, 6942, 6432, 5201, 1752, 1646, 4006, 2402, 5712, 5772, 1460, 1649, 2667, 752 } + I1iilIi1iIlIII1liI1 + -73, #{ 2020, 3878, 99, 1237, 649, 398, 1906, 6607, 2349, 5750, 4243, 1693, 6874, 5266, 6686, 3037, 2100, 3403, 5205, 5529, 4745, 1824, 1066, 6125 } + I1iilIi1iIlIII1liI1 + -72) ii1IiiIlII1Iil1iIlI[6] = Iii1l1Ii1lilI1iil1i(lIlii1liIlIiI1IlIl1l1, #{ 258, 5715, 3962, 2459, 566, 4985, 3013, 5344, 1123, 330 }, #{ 1027, 2663, 6748, 3458, 4601, 5621, 6351, 5890, 4802, 1200, 1903, 5882, 3096, 2665, 4640, 2861, 833, 4032 }) ii1IiiIlII1Iil1iIlI[10] = Iii1l1Ii1lilI1iil1i(lIlii1liIlIiI1IlIl1l1, #{6356}, #{ 1984, 5669, 1821, 4896, 2304, 6797, 2486, 5291, 3607 }) lIl11iiilIliIIlIIiI1I[4][iliiili1lli1IIll1l1] = ii1IiiIlII1Iil1iIlI end for iliiili1lli1IIll1l1 = lIlliIIIllii11Ii1l1lI, iII1iIi1lIllilillIi do local ii1IiiIlII1Iil1iIlI = lIl11iiilIliIIlIIiI1I[4][iliiili1lli1IIll1l1] local lIl11li1i11lIl1l111I1 = lIlI1IiiIIii1l1I1ill1[ii1IiiIlII1Iil1iIlI[5]] if lIl11li1i11lIl1l111I1 == #{2617, 6460} and ii1IiiIlII1Iil1iIlI[6] > 255 then ii1IiiIlII1Iil1iIlI[7] = true ii1IiiIlII1Iil1iIlI[8] = lIl11iiilIliIIlIIiI1I[5][ii1IiiIlII1Iil1iIlI[6] - 256] end if lIl11li1i11lIl1l111I1 == #{ 5042, 2073, 5719, 4006 } then ii1IiiIlII1Iil1iIlI[1] = lIl11iiilIliIIlIIiI1I[5][ii1IiiIlII1Iil1iIlI[9]] end if lIl11li1i11lIl1l111I1 == #{6174} and ii1IiiIlII1Iil1iIlI[10] > 255 then ii1IiiIlII1Iil1iIlI[4] = true ii1IiiIlII1Iil1iIlI[2] = lIl11iiilIliIIlIIiI1I[5][ii1IiiIlII1Iil1iIlI[10] - 256] end if lIl11li1i11lIl1l111I1 == #{ 4420, 6036, 1895 } then if ii1IiiIlII1Iil1iIlI[10] > 255 then ii1IiiIlII1Iil1iIlI[4] = true ii1IiiIlII1Iil1iIlI[2] = lIl11iiilIliIIlIIiI1I[5][ii1IiiIlII1Iil1iIlI[10] - 256] end if ii1IiiIlII1Iil1iIlI[6] > 255 then ii1IiiIlII1Iil1iIlI[7] = true ii1IiiIlII1Iil1iIlI[8] = lIl11iiilIliIIlIIiI1I[5][ii1IiiIlII1Iil1iIlI[6] - 256] end end end return lIl11iiilIliIIlIIiI1I end local function lIlIlii1iIlli1li111II(lIl11iiilIliIIlIIiI1I, IlIlIlillI1IIII1liI, I1lll1i1Il1II1l11li) local il1lIi1iIi1II11Iii1, IlIi1IliIlll11I1Ii1 = 3, 1 local iIilIlilIliliillliI = lIl11iiilIliIIlIIiI1I[4] local I1iIiII11liI1lllil1 = 3 local l1i111l1IIIii1iil1I = lIl11iiilIliIIlIIiI1I[7] local I1lIii1Iiil11iiIIil = lIl11iiilIliIIlIIiI1I[6] local i1Ill1il1ll1ilIiiIi = lIl11iiilIliIIlIIiI1I[2] local lIlllilill1IiliI1ll1i = 5 local iIlII1IiiIllIlliili = lIl11iiilIliIIlIIiI1I[1] local lIlliiilII1llIi1lilII = 10 local function iiIIIil1lI11iliIIli(...) local Iiii1II1lilllII1lli = 0 local IiiiilIIiIliI11II1i = { li1lllii1I1Il11lIii({}, 1, i1Ill1il1ll1ilIiiIi) } local i1l1iIIlll1lI1Iiil1 = 1 local ilIiI11llIlIl11II1l = {} local lIllli1l1iil1IlIIiIiI = {} local IlIlIlillI1IIII1liI = lIiiIiIliIllI1i1I1l() local ii11iiiIIIiiI1Il1lI = { ... } local ll1iiIIlIl1llI1iilI = #ii11iiiIIIiiI1Il1lI - 1 for iliiili1lli1IIll1l1 = 0, ll1iiIIlIl1llI1iilI do if iliiili1lli1IIll1l1 < I1lIii1Iiil11iiIIil then IiiiilIIiIliI11II1i[iliiili1lli1IIll1l1] = ii11iiiIIIiiI1Il1lI[iliiili1lli1IIll1l1 + 1] end end local function IiilIii111iII1lI11i(...) local iii1iIi1I11iIli1I1i = iillIiIIIili1iIi1II("#", ...) local lliliii1IllI1il1iIl = { ... } return iii1iIi1I11iIli1I1i, lliliii1IllI1il1iIl end local function IlI1l11l11llIl1I1Ii() while true do local ll11liII1ili11ill1i = iIilIlilIliliillliI[i1l1iIIlll1lI1Iiil1] local iIil1iliiillliliIlI = ll11liII1ili11ill1i[5] i1l1iIIlll1lI1Iiil1 = i1l1iIIlll1lI1Iiil1 + 1 if iIil1iliiillliliIlI < 12 then if iIil1iliiillliliIlI < 6 then if iIil1iliiillliliIlI >= 3 then if iIil1iliiillliliIlI < 4 then if ll11liII1ili11ill1i[6] == 252 then i1l1iIIlll1lI1Iiil1 = i1l1iIIlll1lI1Iiil1 - 1 iIilIlilIliliillliI[i1l1iIIlll1lI1Iiil1] = { [5] = 5, [3] = (ll11liII1ili11ill1i[3] - 128) % 256, [6] = (ll11liII1ili11ill1i[10] - 128) % 256 } else IiiiilIIiIliI11II1i[ll11liII1ili11ill1i[3]] = IiiiilIIiIliI11II1i[ll11liII1ili11ill1i[10]] end elseif iIil1iliiillliliIlI ~= 5 then local l1l1IiI1IlI1illllli = IiiiilIIiIliI11II1i[ll11liII1ili11ill1i[10]] local iii1iIi1I11iIli1I1i if ll11liII1ili11ill1i[7] then iii1iIi1I11iIli1I1i = ll11liII1ili11ill1i[8] else iii1iIi1I11iIli1I1i = IiiiilIIiIliI11II1i[ll11liII1ili11ill1i[6]] end IiiiilIIiIliI11II1i[ll11liII1ili11ill1i[3] + 1] = l1l1IiI1IlI1illllli IiiiilIIiIliI11II1i[ll11liII1ili11ill1i[3]] = l1l1IiI1IlI1illllli[iii1iIi1I11iIli1I1i] elseif not not IiiiilIIiIliI11II1i[ll11liII1ili11ill1i[3]] == (ll11liII1ili11ill1i[6] == 0) then i1l1iIIlll1lI1Iiil1 = i1l1iIIlll1lI1Iiil1 + 1 end elseif iIil1iliiillliliIlI >= 1 then if iIil1iliiillliliIlI ~= 2 then if ll11liII1ili11ill1i[6] == 254 then i1l1iIIlll1lI1Iiil1 = i1l1iIIlll1lI1Iiil1 - 1 iIilIlilIliliillliI[i1l1iIIlll1lI1Iiil1] = { [5] = 3, [3] = (ll11liII1ili11ill1i[3] - 41) % 256, [10] = (ll11liII1ili11ill1i[10] - 41) % 256 } elseif ll11liII1ili11ill1i[6] == 233 then i1l1iIIlll1lI1Iiil1 = i1l1iIIlll1lI1Iiil1 - 1 iIilIlilIliliillliI[i1l1iIIlll1lI1Iiil1] = { [5] = 7, [3] = (ll11liII1ili11ill1i[3] - 29) % 256, [10] = (ll11liII1ili11ill1i[10] - 29) % 256 } else IiiiilIIiIliI11II1i[ll11liII1ili11ill1i[3]] = I1lll1i1Il1II1l11li[ll11liII1ili11ill1i[10]] end else IlIlIlillI1IIII1liI[ll11liII1ili11ill1i[1]] = IiiiilIIiIliI11II1i[ll11liII1ili11ill1i[3]] end else local i1Iii1lIilIIliIllI1 = l1i111l1IIIii1iil1I[ll11liII1ili11ill1i[9]] local lIlIlIl1IlI1IIillII11 = {} if i1Iii1lIilIIliIllI1[I1iIiII11liI1lllil1] > 0 then do local llIIiIl1I1I1l111Ili = {} lIlIlIl1IlI1IIillII11 = i1i1Ii1IlIli11iIll1({}, { __index = function(lliliii1IllI1il1iIl, iii1i11lliIlIi1i1Ii) local ii1Il1i1IIiI1iiIil1 = llIIiIl1I1I1l111Ili[iii1i11lliIlIi1i1Ii] return ii1Il1i1IIiI1iiIil1[1][ii1Il1i1IIiI1iiIil1[2]] end, __newindex = function(lliliii1IllI1il1iIl, iii1i11lliIlIi1i1Ii, lIliIllIliiII11Illlll) local ii1Il1i1IIiI1iiIil1 = llIIiIl1I1I1l111Ili[iii1i11lliIlIi1i1Ii] ii1Il1i1IIiI1iiIil1[1][ii1Il1i1IIiI1iiIil1[2]] = lIliIllIliiII11Illlll end }) for iliiili1lli1IIll1l1 = 1, i1Iii1lIilIIliIllI1[I1iIiII11liI1lllil1] do local lIlIi1iI1Il111II1iIil = iIilIlilIliliillliI[i1l1iIIlll1lI1Iiil1] if lIlIi1iI1Il111II1iIil[lIlllilill1IiliI1ll1i] == il1lIi1iIi1II11Iii1 then llIIiIl1I1I1l111Ili[iliiili1lli1IIll1l1 - 1] = { IiiiilIIiIliI11II1i, lIlIi1iI1Il111II1iIil[lIlliiilII1llIi1lilII] } elseif lIlIi1iI1Il111II1iIil[lIlllilill1IiliI1ll1i] == IlIi1IliIlll11I1Ii1 then llIIiIl1I1I1l111Ili[iliiili1lli1IIll1l1 - 1] = { I1lll1i1Il1II1l11li, lIlIi1iI1Il111II1iIil[lIlliiilII1llIi1lilII] } end i1l1iIIlll1lI1Iiil1 = i1l1iIIlll1lI1Iiil1 + 1 end if not ilIiI11llIlIl11II1l[IiiiilIIiIliI11II1i] then ilIiI11llIlIl11II1l[IiiiilIIiIliI11II1i] = {llIIiIl1I1I1l111Ili} else ili1l1l1llIlIill11I(ilIiI11llIlIl11II1l[IiiiilIIiIliI11II1i], llIIiIl1I1I1l111Ili) end end end local lIl1IIllilIlIil11liii = lIlIlii1iIlli1li111II(i1Iii1lIilIIliIllI1, IlIlIlillI1IIII1liI, lIlIlIl1IlI1IIillII11) IiiiilIIiIliI11II1i[ll11liII1ili11ill1i[3]] = lIl1IIllilIlIil11liii end elseif iIil1iliiillliliIlI < 9 then if iIil1iliiillliliIlI < 7 then IiiiilIIiIliI11II1i[ll11liII1ili11ill1i[3]] = IlIlIlillI1IIII1liI[ll11liII1ili11ill1i[1]] elseif iIil1iliiillliliIlI == 8 then if ll11liII1ili11ill1i[6] == 91 then i1l1iIIlll1lI1Iiil1 = i1l1iIIlll1lI1Iiil1 - 1 iIilIlilIliliillliI[i1l1iIIlll1lI1Iiil1] = { [5] = 12, [3] = (ll11liII1ili11ill1i[3] - 249) % 256, [6] = (ll11liII1ili11ill1i[10] - 249) % 256 } else local II1II1II111i1iI1iI1 = ll11liII1ili11ill1i[3] local lilIlI1iIilI11Ill1I = ll11liII1ili11ill1i[10] local iil11liiiiiilllil1i = lilIlI1iIilI11Ill1I > 0 and lilIlI1iIilI11Ill1I - 1 or ll1iiIIlIl1llI1iilI - I1lIii1Iiil11iiIIil if iil11liiiiiilllil1i < 0 then iil11liiiiiilllil1i = -1 end for iliiili1lli1IIll1l1 = II1II1II111i1iI1iI1, II1II1II111i1iI1iI1 + iil11liiiiiilllil1i do IiiiilIIiIliI11II1i[iliiili1lli1IIll1l1] = ii11iiiIIIiiI1Il1lI[I1lIii1Iiil11iiIIil + (iliiili1lli1IIll1l1 - II1II1II111i1iI1iI1) + 1] end if lilIlI1iIilI11Ill1I == 0 then Iiii1II1lilllII1lli = II1II1II111i1iI1iI1 + iil11liiiiiilllil1i for iliiili1lli1IIll1l1 = Iiii1II1lilllII1lli + 1, i1Ill1il1ll1ilIiiIi do IiiiilIIiIliI11II1i[iliiili1lli1IIll1l1] = nil end end end else local lIlil1II1I11Il1iIi111 = ll11liII1ili11ill1i[3] local lIli1ii1llI1I1I1iilli = {} for ili1lIlI1lIIIlil11i, llIIiIl1I1I1l111Ili in pairs(ilIiI11llIlIl11II1l[IiiiilIIiIliI11II1i]) do for ili1lIlI1lIIIlil11i, ii1Il1i1IIiI1iiIil1 in pairs(llIIiIl1I1I1l111Ili) do if ii1Il1i1IIiI1iiIil1[1] == IiiiilIIiIliI11II1i and lIlil1II1I11Il1iIi111 <= ii1Il1i1IIiI1iiIil1[2] then local ll11li1ii1iIil11ili = ii1Il1i1IIiI1iiIil1[2] if not lIli1ii1llI1I1I1iilli[ll11li1ii1iIil11ili] then lIlIlii1iIlli1li111II(lIllli1l1iil1IlIIiIiI, IiiiilIIiIliI11II1i[ll11li1ii1iIil11ili]) lIli1ii1llI1I1I1iilli[ll11li1ii1iIil11ili] = #lIllli1l1iil1IlIIiIiI end ii1Il1i1IIiI1iiIil1[1] = lIllli1l1iil1IlIIiIiI ii1Il1i1IIiI1iiIil1[2] = lIli1ii1llI1I1I1iilli[ll11li1ii1iIil11ili] end end end end elseif iIil1iliiillliliIlI < 10 then local IIIIii1II1i1iIIiilI = (ll11liII1ili11ill1i[6] - 1) * 50 local l11ilI11i111IllIiII = ll11liII1ili11ill1i[10] if l11ilI11i111IllIiII == 0 then l11ilI11i111IllIiII = Iiii1II1lilllII1lli - ll11liII1ili11ill1i[3] end for iliiili1lli1IIll1l1 = 1, l11ilI11i111IllIiII do IiiiilIIiIliI11II1i[ll11liII1ili11ill1i[3]][IIIIii1II1i1iIIiilI + iliiili1lli1IIll1l1] = IiiiilIIiIliI11II1i[ll11liII1ili11ill1i[3] + iliiili1lli1IIll1l1] end elseif iIil1iliiillliliIlI == 11 then IiiiilIIiIliI11II1i[ll11liII1ili11ill1i[3]] = { li1lllii1I1Il11lIii(lIli1I1I11iIIllI1I1II, 1, ll11liII1ili11ill1i[10] == 0 and 255 or ll11liII1ili11ill1i[10]) } elseif ll11liII1ili11ill1i[6] == 100 then i1l1iIIlll1lI1Iiil1 = i1l1iIIlll1lI1Iiil1 - 1 iIilIlilIliliillliI[i1l1iIIlll1lI1Iiil1] = { [5] = 15, [3] = (ll11liII1ili11ill1i[3] - 193) % 256, [10] = (ll11liII1ili11ill1i[10] - 193) % 256 } else ilIiI11llIlIl11II1l[IiiiilIIiIliI11II1i] = nil local II1II1II111i1iI1iI1 = ll11liII1ili11ill1i[3] local lIli1l11ll1iIli111I11 = ll11liII1ili11ill1i[10] if lIli1l11ll1iIli111I11 == 1 then return true end local IlIII1lIIl1IIili11l = II1II1II111i1iI1iI1 + lIli1l11ll1iIli111I11 - 2 if lIli1l11ll1iIli111I11 == 0 then IlIII1lIIl1IIili11l = Iiii1II1lilllII1lli end return true, II1II1II111i1iI1iI1, IlIII1lIIl1IIili11l end elseif iIil1iliiillliliIlI >= 18 then if iIil1iliiillliliIlI < 21 then if iIil1iliiillliliIlI < 19 then local ii1iiIiiiiIliIiilli, iii1iIi1I11iIli1I1i if ll11liII1ili11ill1i[4] then ii1iiIiiiiIliIiilli = ll11liII1ili11ill1i[2] else ii1iiIiiiiIliIiilli = IiiiilIIiIliI11II1i[ll11liII1ili11ill1i[10]] end if ll11liII1ili11ill1i[7] then iii1iIi1I11iIli1I1i = ll11liII1ili11ill1i[8] else iii1iIi1I11iIli1I1i = IiiiilIIiIliI11II1i[ll11liII1ili11ill1i[6]] end if ii1iiIiiiiIliIiilli == iii1iIi1I11iIli1I1i ~= (ll11liII1ili11ill1i[3] ~= 0) then i1l1iIIlll1lI1Iiil1 = i1l1iIIlll1lI1Iiil1 + 1 end elseif iIil1iliiillliliIlI == 20 then if ll11liII1ili11ill1i[6] == 212 then i1l1iIIlll1lI1Iiil1 = i1l1iIIlll1lI1Iiil1 - 1 iIilIlilIliliillliI[i1l1iIIlll1lI1Iiil1] = { [5] = 10, [3] = (ll11liII1ili11ill1i[3] - 173) % 256, [10] = (ll11liII1ili11ill1i[10] - 173) % 256 } else IiiiilIIiIliI11II1i[ll11liII1ili11ill1i[3]] = not IiiiilIIiIliI11II1i[ll11liII1ili11ill1i[10]] end else IiiiilIIiIliI11II1i[ll11liII1ili11ill1i[3]] = ll11liII1ili11ill1i[1] end elseif iIil1iliiillliliIlI >= 23 then if iIil1iliiillliliIlI == 24 then local ii1iiIiiiiIliIiilli, iii1iIi1I11iIli1I1i if ll11liII1ili11ill1i[4] then ii1iiIiiiiIliIiilli = ll11liII1ili11ill1i[2] else ii1iiIiiiiIliIiilli = IiiiilIIiIliI11II1i[ll11liII1ili11ill1i[10]] end if ll11liII1ili11ill1i[7] then iii1iIi1I11iIli1I1i = ll11liII1ili11ill1i[8] else iii1iIi1I11iIli1I1i = IiiiilIIiIliI11II1i[ll11liII1ili11ill1i[6]] end IiiiilIIiIliI11II1i[ll11liII1ili11ill1i[3]] = ii1iiIiiiiIliIiilli + iii1iIi1I11iIli1I1i else local II1II1II111i1iI1iI1 = ll11liII1ili11ill1i[3] local ii11iiiIIIiiI1Il1lI = ll11liII1ili11ill1i[10] local lIllllIlIl11111liIilI = ll11liII1ili11ill1i[6] local i1liIIiIliiliI1iliI, IlIII1lIIl1IIili11l, IlI1l11l11llIl1I1Ii if ii11iiiIIIiiI1Il1lI ~= 1 then if ii11iiiIIIiiI1Il1lI ~= 0 then IlIII1lIIl1IIili11l = II1II1II111i1iI1iI1 + ii11iiiIIIiiI1Il1lI - 1 else IlIII1lIIl1IIili11l = Iiii1II1lilllII1lli end IlIII1lIIl1IIili11l, i1liIIiIliiliI1iliI = IiilIii111iII1lI11i(IiiiilIIiIliI11II1i[II1II1II111i1iI1iI1](li1lllii1I1Il11lIii(IiiiilIIiIliI11II1i, II1II1II111i1iI1iI1 + 1, IlIII1lIIl1IIili11l))) else IlIII1lIIl1IIili11l, i1liIIiIliiliI1iliI = IiilIii111iII1lI11i(IiiiilIIiIliI11II1i[II1II1II111i1iI1iI1]()) end if lIllllIlIl11111liIilI ~= 1 then if lIllllIlIl11111liIilI ~= 0 then IlIII1lIIl1IIili11l = II1II1II111i1iI1iI1 + lIllllIlIl11111liIilI - 2 Iiii1II1lilllII1lli = IlIII1lIIl1IIili11l + 1 else IlIII1lIIl1IIili11l = IlIII1lIIl1IIili11l + II1II1II111i1iI1iI1 - 1 Iiii1II1lilllII1lli = IlIII1lIIl1IIili11l end IlI1l11l11llIl1I1Ii = 0 for iliiili1lli1IIll1l1 = II1II1II111i1iI1iI1, IlIII1lIIl1IIili11l do IlI1l11l11llIl1I1Ii = IlI1l11l11llIl1I1Ii + 1 IiiiilIIiIliI11II1i[iliiili1lli1IIll1l1] = i1liIIiIliiliI1iliI[IlI1l11l11llIl1I1Ii] end else Iiii1II1lilllII1lli = II1II1II111i1iI1iI1 - 1 end for iliiili1lli1IIll1l1 = Iiii1II1lilllII1lli + 1, i1Ill1il1ll1ilIiiIi do IiiiilIIiIliI11II1i[iliiili1lli1IIll1l1] = nil end end elseif iIil1iliiillliliIlI == 22 then local ii1iiIiiiiIliIiilli, iii1iIi1I11iIli1I1i if ll11liII1ili11ill1i[4] then ii1iiIiiiiIliIiilli = ll11liII1ili11ill1i[2] else ii1iiIiiiiIliIiilli = IiiiilIIiIliI11II1i[ll11liII1ili11ill1i[10]] end if ll11liII1ili11ill1i[7] then iii1iIi1I11iIli1I1i = ll11liII1ili11ill1i[8] else iii1iIi1I11iIli1I1i = IiiiilIIiIliI11II1i[ll11liII1ili11ill1i[6]] end IiiiilIIiIliI11II1i[ll11liII1ili11ill1i[3]] = ii1iiIiiiiIliIiilli * iii1iIi1I11iIli1I1i else local iii1iIi1I11iIli1I1i if ll11liII1ili11ill1i[7] then iii1iIi1I11iIli1I1i = ll11liII1ili11ill1i[8] else iii1iIi1I11iIli1I1i = IiiiilIIiIliI11II1i[ll11liII1ili11ill1i[6]] end IiiiilIIiIliI11II1i[ll11liII1ili11ill1i[3]] = IiiiilIIiIliI11II1i[ll11liII1ili11ill1i[10]][iii1iIi1I11iIli1I1i] end elseif iIil1iliiillliliIlI < 15 then if iIil1iliiillliliIlI < 13 then local II1II1II111i1iI1iI1 = ll11liII1ili11ill1i[3] local IIIIii1II1i1iIIiilI = II1II1II111i1iI1iI1 + 2 local iIIIl1I1liIi1IlIi1l = { IiiiilIIiIliI11II1i[II1II1II111i1iI1iI1](IiiiilIIiIliI11II1i[II1II1II111i1iI1iI1 + 1], IiiiilIIiIliI11II1i[II1II1II111i1iI1iI1 + 2]) } for iliiili1lli1IIll1l1 = 1, ll11liII1ili11ill1i[6] do IiiiilIIiIliI11II1i[IIIIii1II1i1iIIiilI + iliiili1lli1IIll1l1] = iIIIl1I1liIi1IlIi1l[iliiili1lli1IIll1l1] end if IiiiilIIiIliI11II1i[II1II1II111i1iI1iI1 + 3] ~= nil then IiiiilIIiIliI11II1i[II1II1II111i1iI1iI1 + 2] = IiiiilIIiIliI11II1i[II1II1II111i1iI1iI1 + 3] else i1l1iIIlll1lI1Iiil1 = i1l1iIIlll1lI1Iiil1 + 1 end elseif iIil1iliiillliliIlI ~= 14 then local ii1iiIiiiiIliIiilli, iii1iIi1I11iIli1I1i if ll11liII1ili11ill1i[4] then ii1iiIiiiiIliIiilli = ll11liII1ili11ill1i[2] else ii1iiIiiiiIliIiilli = IiiiilIIiIliI11II1i[ll11liII1ili11ill1i[10]] end if ll11liII1ili11ill1i[7] then iii1iIi1I11iIli1I1i = ll11liII1ili11ill1i[8] else iii1iIi1I11iIli1I1i = IiiiilIIiIliI11II1i[ll11liII1ili11ill1i[6]] end IiiiilIIiIliI11II1i[ll11liII1ili11ill1i[3]][ii1iiIiiiiIliIiilli] = iii1iIi1I11iIli1I1i elseif ll11liII1ili11ill1i[6] == 86 then i1l1iIIlll1lI1Iiil1 = i1l1iIIlll1lI1Iiil1 - 1 iIilIlilIliliillliI[i1l1iIIlll1lI1Iiil1] = { [5] = 1, [3] = (ll11liII1ili11ill1i[3] - 48) % 256, [10] = (ll11liII1ili11ill1i[10] - 48) % 256 } else for iliiili1lli1IIll1l1 = ll11liII1ili11ill1i[3], ll11liII1ili11ill1i[10] do IiiiilIIiIliI11II1i[iliiili1lli1IIll1l1] = nil end end elseif iIil1iliiillliliIlI >= 16 then if iIil1iliiillliliIlI == 17 then IiiiilIIiIliI11II1i[ll11liII1ili11ill1i[3]] = ll11liII1ili11ill1i[10] ~= 0 if ll11liII1ili11ill1i[6] ~= 0 then i1l1iIIlll1lI1Iiil1 = i1l1iIIlll1lI1Iiil1 + 1 end else i1l1iIIlll1lI1Iiil1 = i1l1iIIlll1lI1Iiil1 + (ll11liII1ili11ill1i[9] - lIl1ii1I111II11il1l) end else I1lll1i1Il1II1l11li[ll11liII1ili11ill1i[10]] = IiiiilIIiIliI11II1i[ll11liII1ili11ill1i[3]] end end end local iIlIIilIliil1IllliI, lIliiIlliililiil11Ill, lIlil1II1I11Il1iIi111, lIliilli1iil1ill1li1l = IlII1lIi11IliIiill1(IlI1l11l11llIl1I1Ii) if iIlIIilIliil1IllliI then if lIlil1II1I11Il1iIi111 then return li1lllii1I1Il11lIii(IiiiilIIiIliI11II1i, lIlil1II1I11Il1iIi111, lIliilli1iil1ill1li1l) end else IIIlI1IiilI1i1IiIll("Luraph Script:" .. (iIlII1IiiIllIlliili[i1l1iIIlll1lI1Iiil1 - 1] or "") .. ": " .. iIllIll1IiIl1IiIliI(lIliiIlliililiil11Ill), 0) end end iIiIII1111I1IlI11l1(iiIIIil1lI11iliIIli, IlIlIlillI1IIII1liI) return iiIIIil1lI11iliIIli end local lIli1ii1llI1I1I1iilli = i1iI111i11I11i1i1ii() return lIlIlii1iIlli1li111II(lIli1ii1llI1I1I1iilli, IlIlIlillI1IIII1liI)() end lIllIli11lIl1il1I1lilIiiIiIliIllI1i1I1l()) 