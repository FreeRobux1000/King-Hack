local lIliliIli11lllIIiIi1I = assert local liIIIII1lIlII1ii1ll = select local ii1ll1iiiiil1ilIlll = tonumber local liII1iilI1lIlIII111 = unpack local i1i1llIii11I1iIlIil = pcall local lIlII11i1ilI1lIliIiiI = setfenv local lI1lIl1iilI1iiIIiii = setmetatable local IIlIIIlI1II11ll11ll = type local liI11li1l1ilIIiII1i = getfenv local lIlIIIi1lil1I111liiiI = tostring local llliII1II1iI1I1iIi1 = error local l1liiI1IiiiIil1iIiI = string.sub local lIlil11iilllIl1iI1li1 = string.byte local li1il1lil111IiiIIil = string.char local lIlIlII1Ii1iII1iI11lI = string.rep local lIlI1I1iiIIli1il1111i = string.gsub local llI1l11ili1iIi1llii = string.match local Il1ll11l1IIiiI1liii = table.insert local ll1I1I1illii1iilliI = lIlil11iilllIl1iI1li1("-", 1) local iiIlI1l1iiil1i1iiI1, ii1IlIIlli1llllll1i = #{6942}, #{ 4467, 1582, 5174, 6263, 2258, 6904, 3398, 1306, 5339, 3331, 6220, 1372, 387, 2199, 538, 3774, 2853, 4155, 5426, 3169, 58, 5379, 6275 } + ll1I1I1illii1iilliI + 131003 local II1ill1iIlli1111I1i = {} local lIilli1IiIili1lIIiI = 1 local lIliII1ll1IlIiIIllIli, i111Iilll1lIiIIliI1 local function l111iIIIllIll1Ill11(iiI1IiliiiIlIiIi1l1, ll1111IiiiIlIIlliIi) local Illl1liIIlIIiIlIl11 iiI1IiliiiIlIiIi1l1 = lIlI1I1iiIIli1il1111i(l1liiI1IiiiIil1iIiI(iiI1IiliiiIlIiIi1l1, 5), "..", function(l1Ii1III11lll1lIil1) if lIlil11iilllIl1iI1li1(l1Ii1III11lll1lIil1, 2) == 72 then Illl1liIIlIIiIlIl11 = ii1ll1iiiiil1ilIlll(l1liiI1IiiiIil1iIiI(l1Ii1III11lll1lIil1, 1, 1)) return "" else local lIlIlillI1lii1lIlili1 = li1il1lil111IiiIIil(ii1ll1iiiiil1ilIlll(l1Ii1III11lll1lIil1, 16)) if Illl1liIIlIIiIlIl11 then local lilI1i1iI1i1i1i11i1 = lIlIlII1Ii1iII1iI11lI(lIlIlillI1lii1lIlili1, Illl1liIIlIIiIlIl11) Illl1liIIlIIiIlIl11 = nil return lilI1i1iI1i1i1i11i1 else return lIlIlillI1lii1lIlili1 end end end) local function lIliliII1li1llIii11I1() local IIlli111llI1I1iliIl = lIlil11iilllIl1iI1li1(iiI1IiliiiIlIiIi1l1, lIilli1IiIili1lIIiI, lIilli1IiIili1lIIiI) lIilli1IiIili1lIIiI = lIilli1IiIili1lIIiI + 1 return IIlli111llI1I1iliIl end local function Ii11I1IillI11ii1lIi() local IIlli111llI1I1iliIl, lIlIlillI1lii1lIlili1, lilI1i1iI1i1i1i11i1, lIlII11I1II1i11ll11Il = lIlil11iilllIl1iI1li1(iiI1IiliiiIlIiIi1l1, lIilli1IiIili1lIIiI, lIilli1IiIili1lIIiI + 3) lIilli1IiIili1lIIiI = lIilli1IiIili1lIIiI + 4 return lIlII11I1II1i11ll11Il * 16777216 + lilI1i1iI1i1i1i11i1 * 65536 + lIlIlillI1lii1lIlili1 * 256 + IIlli111llI1I1iliIl end local function ilIIii1IliliiI1iI11(IliI1iiilil1iIlII1i, IlIi11iiIIi11lI1lii, ii11iIIII1Illillll1) if ii11iIIII1Illillll1 then local lIil1iiIl1i1l1IiIl1, iiiliIlli1l11llii1i = 0, 0 for lIlIIlIii1I11I1I1IiIl = IlIi11iiIIi11lI1lii, ii11iIIII1Illillll1 do lIil1iiIl1i1l1IiIl1 = lIil1iiIl1i1l1IiIl1 + 2 ^ iiiliIlli1l11llii1i * ilIIii1IliliiI1iI11(IliI1iiilil1iIlII1i, lIlIIlIii1I11I1I1IiIl) iiiliIlli1l11llii1i = iiiliIlli1l11llii1i + 1 end return lIil1iiIl1i1l1IiIl1 else local lIliIlI1iIiiI1II1i1Il = 2 ^ (IlIi11iiIIi11lI1lii - 1) return lIliIlI1iIiiI1II1i1Il <= IliI1iiilil1iIlII1i % (lIliIlI1iIiiI1II1i1Il + lIliIlI1iIiiI1II1i1Il) and 1 or 0 end end local function ili11i1IiiIIIli1llI() local IIlli111llI1I1iliIl, lIlIlillI1lii1lIlili1 = Ii11I1IillI11ii1lIi(), Ii11I1IillI11ii1lIi() if IIlli111llI1I1iliIl == 0 and lIlIlillI1lii1lIlili1 == 0 then return 0 end return (-2 * ilIIii1IliliiI1iI11(lIlIlillI1lii1lIlili1, 32) + 1) * 2 ^ (ilIIii1IliliiI1iI11(lIlIlillI1lii1lIlili1, 21, 31) - 1023) * ((ilIIii1IliliiI1iI11(lIlIlillI1lii1lIlili1, 1, 20) * 4294967296 + IIlli111llI1I1iliIl) / 4503599627370496 + 1) end local II11illiII11l1l1l1i = bit or bit32 local lli1IIi1iIiI1IlIIll = II11illiII11l1l1l1i and II11illiII11l1l1l1i.bxor or function(IIlli111llI1I1iliIl, lIlIlillI1lii1lIlili1) local IIl1ilIIi1III1li1il = 1 local lilI1i1iI1i1i1i11i1 = 0 while IIlli111llI1I1iliIl > 0 and lIlIlillI1lii1lIlili1 > 0 do local IIi1l1ii1II1lIIlliI = IIlli111llI1I1iliIl % 2 local liIlI1i1IliIIIiiiiI = lIlIlillI1lii1lIlili1 % 2 if IIi1l1ii1II1lIIlliI ~= liIlI1i1IliIIIiiiiI then lilI1i1iI1i1i1i11i1 = lilI1i1iI1i1i1i11i1 + IIl1ilIIi1III1li1il end IIlli111llI1I1iliIl = (IIlli111llI1I1iliIl - IIi1l1ii1II1lIIlliI) / 2 lIlIlillI1lii1lIlili1 = (lIlIlillI1lii1lIlili1 - liIlI1i1IliIIIiiiiI) / 2 IIl1ilIIi1III1li1il = IIl1ilIIi1III1li1il * 2 end if IIlli111llI1I1iliIl < lIlIlillI1lii1lIlili1 then IIlli111llI1I1iliIl = lIlIlillI1lii1lIlili1 end while IIlli111llI1I1iliIl > 0 do local IIi1l1ii1II1lIIlliI = IIlli111llI1I1iliIl % 2 if IIi1l1ii1II1lIIlliI > 0 then lilI1i1iI1i1i1i11i1 = lilI1i1iI1i1i1i11i1 + IIl1ilIIi1III1li1il end IIlli111llI1I1iliIl = (IIlli111llI1I1iliIl - IIi1l1ii1II1lIIlliI) / 2 IIl1ilIIi1III1li1il = IIl1ilIIi1III1li1il * 2 end return lilI1i1iI1i1i1i11i1 end local function IliIiii111l1iIIIiII(lIlIil11I11lI1I1IlIIl) local iIiiIlliIIi11lIllii = { lIlil11iilllIl1iI1li1(iiI1IiliiiIlIiIi1l1, lIilli1IiIili1lIIiI, lIilli1IiIili1lIIiI + 3) } lIilli1IiIili1lIIiI = lIilli1IiIili1lIIiI + 4 local IIlli111llI1I1iliIl = lli1IIi1iIiI1IlIIll(iIiiIlliIIi11lIllii[1], i111Iilll1lIiIIliI1) local lIlIlillI1lii1lIlili1 = lli1IIi1iIiI1IlIIll(iIiiIlliIIi11lIllii[2], i111Iilll1lIiIIliI1) local lilI1i1iI1i1i1i11i1 = lli1IIi1iIiI1IlIIll(iIiiIlliIIi11lIllii[3], i111Iilll1lIiIIliI1) local lIlII11I1II1i11ll11Il = lli1IIi1iIiI1IlIIll(iIiiIlliIIi11lIllii[4], i111Iilll1lIiIIliI1) i111Iilll1lIiIIliI1 = (125 * i111Iilll1lIiIIliI1 + lIlIil11I11lI1I1IlIIl) % 256 return lIlII11I1II1i11ll11Il * 16777216 + lilI1i1iI1i1i1i11i1 * 65536 + lIlIlillI1lii1lIlili1 * 256 + IIlli111llI1I1iliIl end local function IllIIlI11lIIIllilii(IIiiIIIli1lliIiI1II) local liiII1i1iiIii11i1i1 = Ii11I1IillI11ii1lIi() local Ii1ililll1IiiIl1Ii1 = "" for lIlIIlIii1I11I1I1IiIl = iiIlI1l1iiil1i1iiI1, liiII1i1iiIii11i1i1 do Ii1ililll1IiiIl1Ii1 = Ii1ililll1IiiIl1Ii1 .. li1il1lil111IiiIIil(lli1IIi1iIiI1IlIIll(lIlil11iilllIl1iI1li1(iiI1IiliiiIlIiIi1l1, lIilli1IiIili1lIIiI + lIlIIlIii1I11I1I1IiIl - 1), lIliII1ll1IlIiIIllIli)) lIliII1ll1IlIiIIllIli = (IIiiIIIli1lliIiI1II * lIliII1ll1IlIiIIllIli + 13) % 256 end lIilli1IiIili1lIIiI = lIilli1IiIili1lIIiI + liiII1i1iiIii11i1i1 return Ii1ililll1IiiIl1Ii1 end lIliII1ll1IlIiIIllIli = lIliliII1li1llIii11I1() i111Iilll1lIiIIliI1 = lIliliII1li1llIii11I1() local lIl1iiIlilIili1ii1l1I = {} for lIlIIlIii1I11I1I1IiIl = iiIlI1l1iiil1i1iiI1, lIliliII1li1llIii11I1() do local IiiIiIIii1liIiI1lll = lIliliII1li1llIii11I1() local iiil1iII1I1lIll11Ii = (lIlIIlIii1I11I1I1IiIl - 1) * 2 lIl1iiIlilIili1ii1l1I[iiil1iII1I1lIll11Ii] = ilIIii1IliliiI1iI11(IiiIiIIii1liIiI1lll, 1, 4) lIl1iiIlilIili1ii1l1I[iiil1iII1I1lIll11Ii + 1] = ilIIii1IliliiI1iI11(IiiIiIIii1liIiI1lll, 5, 8) end local function iIi1ilIi11ill11Ii1i() local l1iIIil1111IIIl111i = { nil, nil, {}, {}, {}, {}, nil } lIliliII1li1llIii11I1() Ii11I1IillI11ii1lIi() lIliliII1li1llIii11I1() l1iIIil1111IIIl111i[2] = lIliliII1li1llIii11I1() local Illl1ilIiI1llIIlIli = Ii11I1IillI11ii1lIi() - (#{ 482, 3569, 1803, 5264, 260, 4220, 697, 6487, 3183, 6922, 4305, 1825, 6180, 1891, 1914, 6653, 5706, 4127, 3289, 5783, 3523 } + ll1I1I1illii1iilliI + 133688) local ii1liilii1IIliIlIlI = lIliliII1li1llIii11I1() for lIlIIlIii1I11I1I1IiIl = iiIlI1l1iiil1i1iiI1, Illl1ilIiI1llIIlIli do local IIlI1iIlli1IiIlI1li local IIlIIIlI1II11ll11ll = lIliliII1li1llIii11I1() if IIlIIIlI1II11ll11ll == #{1536} then IIlI1iIlli1IiIlI1li = l1liiI1IiiiIil1iIiI(IllIIlI11lIIIllilii(ii1liilii1IIliIlIlI), #{ 6664, 4037, 692, 53, 500 }) end if IIlIIIlI1II11ll11ll == #{ 3992, 54, 1441, 152, 2471, 4635, 6199, 2245, 5134, 5013, 1668, 106, 3147, 6078, 4975, 238, 6127, 2467, 6476, 1991, 468, 5026, 6188, 2069 } + ll1I1I1illii1iilliI + 65 then IIlI1iIlli1IiIlI1li = lIliliII1li1llIii11I1() + Ii11I1IillI11ii1lIi() + ili11i1IiiIIIli1llI() end if IIlIIIlI1II11ll11ll == #{ 3622, 6428, 308, 6451, 4839, 6767, 3835, 6605, 167, 3851, 3312, 3725, 2445, 4069, 1971, 2034, 6383, 6573, 5642, 4844, 3630, 4464 } + ll1I1I1illii1iilliI + 99 then IIlI1iIlli1IiIlI1li = ili11i1IiiIIIli1llI() end if IIlIIIlI1II11ll11ll == #{ 4426, 5163, 1161, 4495, 4844, 1563, 570, 1786, 4763, 5861, 6273, 6860, 3177, 5780, 4065, 2537, 312, 3983, 4100, 2431 } + ll1I1I1illii1iilliI + -17 then IIlI1iIlli1IiIlI1li = lIliliII1li1llIii11I1() end if IIlIIIlI1II11ll11ll == #{ 5118, 4404, 6505, 2860, 3249, 2079, 2448, 280, 649, 1143, 828, 6354, 3903, 4675, 4129, 6151, 2495, 1541, 4103, 6066, 781 } + ll1I1I1illii1iilliI + 91 then IIlI1iIlli1IiIlI1li = #{ 6866, 3578, 1330, 2878, 5056, 5437, 3603, 5258, 5352, 4081, 6926, 3926, 4350, 4227, 53, 1134, 1054, 3784, 5738, 5904, 3511 } + ll1I1I1illii1iilliI + 111101 == #{ 6866, 3578, 1330, 2878, 5056, 5437, 3603, 5258, 5352, 4081, 6926, 3926, 4350, 4227, 53, 1134, 1054, 3784, 5738, 5904, 3511 } + ll1I1I1illii1iilliI + 111101 end if IIlIIIlI1II11ll11ll == #{ 390, 4643, 6120, 5672, 222 } then IIlI1iIlli1IiIlI1li = ili11i1IiiIIIli1llI() end if IIlIIIlI1II11ll11ll == #{ 6874, 428, 4746, 2695, 3994, 6061, 2557, 2776, 4928, 2252, 3890, 519, 5709, 1259, 5118, 6515, 4133, 5767, 5787, 3880, 5030, 5968, 4907 } + ll1I1I1illii1iilliI + 29 then IIlI1iIlli1IiIlI1li = l1liiI1IiiiIil1iIiI(IllIIlI11lIIIllilii(ii1liilii1IIliIlIlI), #{ 6352, 3065, 4252 }) end if IIlIIIlI1II11ll11ll == #{ 3577, 5653, 3281, 6378, 284, 2749, 1177, 134, 4151, 4795, 469, 4018, 704, 6301, 4133, 206, 4385, 5739, 4311, 4222, 3750, 569, 5580, 2908 } + ll1I1I1illii1iilliI + -25 then IIlI1iIlli1IiIlI1li = #{ 6229, 1966, 2803, 2020, 5854, 3726, 2275, 5774, 3567, 1751, 6504, 4823, 2345, 703, 1642, 4574, 4077, 614, 86, 6686 } + ll1I1I1illii1iilliI + 11698 == #{ 81, 2479, 2017, 5873, 6619, 4799, 2867, 1222, 2630, 1736, 6714, 3792, 2308, 2330, 4914, 4833, 4916, 2119, 6332, 4198, 6854 } + ll1I1I1illii1iilliI + 53154 end if IIlIIIlI1II11ll11ll == #{} then IIlI1iIlli1IiIlI1li = lIliliII1li1llIii11I1() + Ii11I1IillI11ii1lIi() + ili11i1IiiIIIli1llI() end l1iIIil1111IIIl111i[5][lIlIIlIii1I11I1I1IiIl - iiIlI1l1iiil1i1iiI1] = IIlI1iIlli1IiIlI1li end lIliliII1li1llIii11I1() Ii11I1IillI11ii1lIi() l1iIIil1111IIIl111i[1] = lIliliII1li1llIii11I1() lIliliII1li1llIii11I1() lIliliII1li1llIii11I1() Ii11I1IillI11ii1lIi() Ii11I1IillI11ii1lIi() Ii11I1IillI11ii1lIi() Ii11I1IillI11ii1lIi() local l1ii1IIIiI1I1iiiilI = Ii11I1IillI11ii1lIi() - (#{ 6073, 5639, 4201, 6629, 4817, 1512, 4987, 4769, 5496, 2725, 2636, 6349, 545, 5088, 4129, 3295, 6482, 645, 603, 5765, 4539, 1400, 4006 } + ll1I1I1illii1iilliI + 133717) local lIlI1ilIlliiI1ll1lIIi = lIliliII1li1llIii11I1() for lIlIIlIii1I11I1I1IiIl = iiIlI1l1iiil1i1iiI1, l1ii1IIIiI1I1iiiilI do local i1Ili1lIii1iI11II1l = { nil, nil, nil, nil, nil, nil, nil, nil, nil, nil } local IiiIiIIii1liIiI1lll = IliIiii111l1iIIIiII(lIlI1ilIlliiI1ll1lIIi) i1Ili1lIii1iI11II1l[29376] = ilIIii1IliliiI1iI11(IiiIiIIii1liIiI1lll, #{ 3717, 4230, 2292, 1210, 5094, 3299, 1611, 1230, 892, 405, 1653, 3786, 2467, 3405, 6641, 417, 6206, 5947, 3735, 3025, 5861, 2416, 4937, 2716 } + ll1I1I1illii1iilliI + -42, #{ 4084, 6052, 1662, 4844, 3475, 224, 3768, 6809, 6281, 2587, 1371, 44, 1726, 2313, 6438, 3884, 1588, 650, 2493, 4065, 4304 } + ll1I1I1illii1iilliI + -34) i1Ili1lIii1iI11II1l[5] = ilIIii1IliliiI1iI11(IiiIiIIii1liIiI1lll, #{ 5530, 6280, 6774, 3894, 2391, 2045, 1968, 6390, 2034, 2063, 2237, 1517, 6785, 6737, 956, 5781, 6805, 5783, 4867 }, #{ 2289, 6902, 5631, 3406, 6571, 3391, 3660, 858, 53, 377, 5175, 3107, 4463, 4501, 1060, 2909, 1134, 2420, 292, 1534, 3545, 328 } + ll1I1I1illii1iilliI + -41) i1Ili1lIii1iI11II1l[9] = ilIIii1IliliiI1iI11(IiiIiIIii1liIiI1lll, #{3708}, #{ 1910, 541, 6072, 156, 5696, 1465, 703, 2580, 2325, 4222, 5061, 6477, 6464, 5107, 2286, 1780, 4519, 2544 }) i1Ili1lIii1iI11II1l[1] = ilIIii1IliliiI1iI11(IiiIiIIii1liIiI1lll, #{1717}, #{ 5867, 4868, 1231, 2445, 761, 6674, 4442, 524, 6152 }) i1Ili1lIii1iI11II1l[6] = ilIIii1IliliiI1iI11(IiiIiIIii1liIiI1lll, #{ 904, 2459, 3933, 4932, 6301, 2043, 2569, 5071, 542, 4408, 3311, 3933, 3748, 4737, 4512, 6130, 4768, 6321, 4587, 163, 5521, 5761 } + ll1I1I1illii1iilliI + -40, #{ 3786, 969, 1489, 4935, 1375, 3166, 1103, 2639, 3474, 2626, 4238, 2198, 1542, 769, 2876, 5330, 349, 1969, 6088, 1943, 122, 4472, 2126 } + ll1I1I1illii1iilliI + -36) i1Ili1lIii1iI11II1l[8] = ilIIii1IliliiI1iI11(IiiIiIIii1liIiI1lll, #{ 5723, 3316, 314, 4407, 6872, 4563, 4231, 2228, 5248, 3610 }, #{ 5428, 2331, 382, 2667, 779, 4609, 3714, 6026, 5510, 3576, 6153, 2752, 2826, 3280, 737, 5027, 5105, 1623 }) l1iIIil1111IIIl111i[3][lIlIIlIii1I11I1I1IiIl] = i1Ili1lIii1iI11II1l end for lIlIIlIii1I11I1I1IiIl = iiIlI1l1iiil1i1iiI1, l1ii1IIIiI1I1iiiilI do local i1Ili1lIii1iI11II1l = l1iIIil1111IIIl111i[3][lIlIIlIii1I11I1I1IiIl] local liII1Iilliii111iIii = lIl1iiIlilIili1ii1l1I[i1Ili1lIii1iI11II1l[6]] if liII1Iilliii111iIii == #{3324} and i1Ili1lIii1iI11II1l[1] > 255 then i1Ili1lIii1iI11II1l[3] = true i1Ili1lIii1iI11II1l[7] = l1iIIil1111IIIl111i[5][i1Ili1lIii1iI11II1l[1] - 256] end if liII1Iilliii111iIii == #{480, 1034} and i1Ili1lIii1iI11II1l[8] > 255 then i1Ili1lIii1iI11II1l[4] = true i1Ili1lIii1iI11II1l[10] = l1iIIil1111IIIl111i[5][i1Ili1lIii1iI11II1l[8] - 256] end if liII1Iilliii111iIii == #{ 621, 2571, 6590 } then if i1Ili1lIii1iI11II1l[1] > 255 then i1Ili1lIii1iI11II1l[3] = true i1Ili1lIii1iI11II1l[7] = l1iIIil1111IIIl111i[5][i1Ili1lIii1iI11II1l[1] - 256] end if i1Ili1lIii1iI11II1l[8] > 255 then i1Ili1lIii1iI11II1l[4] = true i1Ili1lIii1iI11II1l[10] = l1iIIil1111IIIl111i[5][i1Ili1lIii1iI11II1l[8] - 256] end end if liII1Iilliii111iIii == #{ 1916, 2713, 6280, 6171 } then i1Ili1lIii1iI11II1l[2] = l1iIIil1111IIIl111i[5][i1Ili1lIii1iI11II1l[9]] end end lIliliII1li1llIii11I1() Ii11I1IillI11ii1lIi() lIliliII1li1llIii11I1() lIliliII1li1llIii11I1() Ii11I1IillI11ii1lIi() lIliliII1li1llIii11I1() Ii11I1IillI11ii1lIi() lIliliII1li1llIii11I1() l1iIIil1111IIIl111i[7] = lIliliII1li1llIii11I1() lIliliII1li1llIii11I1() Ii11I1IillI11ii1lIi() Ii11I1IillI11ii1lIi() local Illl1ilIiI1llIIlIli = Ii11I1IillI11ii1lIi() for lIlIIlIii1I11I1I1IiIl = iiIlI1l1iiil1i1iiI1, Illl1ilIiI1llIIlIli do l1iIIil1111IIIl111i[6][lIlIIlIii1I11I1I1IiIl - iiIlI1l1iiil1i1iiI1] = iIi1ilIi11ill11Ii1i() end Ii11I1IillI11ii1lIi() lIliliII1li1llIii11I1() local Illl1ilIiI1llIIlIli = Ii11I1IillI11ii1lIi() for lIlIIlIii1I11I1I1IiIl = iiIlI1l1iiil1i1iiI1, Illl1ilIiI1llIIlIli do l1iIIil1111IIIl111i[4][lIlIIlIii1I11I1I1IiIl] = Ii11I1IillI11ii1lIi() end Ii11I1IillI11ii1lIi() lIliliII1li1llIii11I1() return l1iIIil1111IIIl111i end local function lIlIIIlI1Illl1iil11Ii(l1iIIil1111IIIl111i, ll1111IiiiIlIIlliIi, llII11lliilllli1i1I) local I11I1IliI1IlIli1iiI, lIl1IiI1iiIiiIil1Iil1 = 9, 4 local lIl1ll1IiIIIliIi1I1i1 = l1iIIil1111IIIl111i[3] local IlI11lIiiIillIiIIll = 2 local l1I1illliIiIlil1i1i = l1iIIil1111IIIl111i[6] local l1I1I1ii11lI1iI11lI = l1iIIil1111IIIl111i[7] local iIlI11i11llllI1llii = l1iIIil1111IIIl111i[1] local l1ilIlllilli1Ii11II = 6 local iiliilI1lii1ii1lIIi = l1iIIil1111IIIl111i[4] local i1I1Ii1lIIIlil1l11i = 1 local function lIlii11lIIii1lIIl1iii(...) local IIIi1I1i1liIi1I1I1i = 0 local l1II1ii1l1IIii1iIil = { liII1iilI1lIlIII111({}, 1, iIlI11i11llllI1llii) } local lI1I1liI1Ii11iIIilI = 1 local lIllil1ilillil11lll = {} local II1I11I1iIii111i1l1 = {} local ll1111IiiiIlIIlliIi = liI11li1l1ilIIiII1i() local IlililIli1I11l1l1Il = { ... } local I1liil11lIl1iiiI1ll = #IlililIli1I11l1l1Il - 1 for lIlIIlIii1I11I1I1IiIl = 0, I1liil11lIl1iiiI1ll do if lIlIIlIii1I11I1I1IiIl < l1I1I1ii11lI1iI11lI then l1II1ii1l1IIii1iIil[lIlIIlIii1I11I1I1IiIl] = IlililIli1I11l1l1Il[lIlIIlIii1I11I1I1IiIl + 1] end end local function lIl1ll1llli1l11Il1iIl(...) local lilI1i1iI1i1i1i11i1 = liIIIII1lIlII1ii1ll("#", ...) local IIIiIl1iiI11IIliiil = { ... } return lilI1i1iI1i1i1i11i1, IIIiIl1iiI11IIliiil end local function IiiIi1iiIl1i1iiil1I() while true do local i1iIlIIiliIl11111lI = lIl1ll1IiIIIliIi1I1i1[lI1I1liI1Ii11iIIilI] local lIiiIl1ilIl1llIII1l = i1iIlIIiliIl11111lI[6] lI1I1liI1Ii11iIIilI = lI1I1liI1Ii11iIIilI + 1 if lIiiIl1ilIl1llIII1l < 12 then if lIiiIl1ilIl1llIII1l < 6 then if lIiiIl1ilIl1llIII1l >= 3 then if lIiiIl1ilIl1llIII1l >= 4 then if lIiiIl1ilIl1llIII1l ~= 5 then l1II1ii1l1IIii1iIil[i1iIlIIiliIl11111lI[5]] = llII11lliilllli1i1I[i1iIlIIiliIl11111lI[1]] elseif i1iIlIIiliIl11111lI[8] == 6 then lI1I1liI1Ii11iIIilI = lI1I1liI1Ii11iIIilI - 1 lIl1ll1IiIIIliIi1I1i1[lI1I1liI1Ii11iIIilI] = { [6] = 9, [5] = (i1iIlIIiliIl11111lI[5] - 73) % 256, [1] = (i1iIlIIiliIl11111lI[1] - 73) % 256 } else for lIlIIlIii1I11I1I1IiIl = i1iIlIIiliIl11111lI[5], i1iIlIIiliIl11111lI[1] do l1II1ii1l1IIii1iIil[lIlIIlIii1I11I1I1IiIl] = nil end end elseif not not l1II1ii1l1IIii1iIil[i1iIlIIiliIl11111lI[5]] == (i1iIlIIiliIl11111lI[8] == 0) then lI1I1liI1Ii11iIIilI = lI1I1liI1Ii11iIIilI + 1 end elseif lIiiIl1ilIl1llIII1l >= 1 then if lIiiIl1ilIl1llIII1l == 2 then if i1iIlIIiliIl11111lI[8] == 160 then lI1I1liI1Ii11iIIilI = lI1I1liI1Ii11iIIilI - 1 lIl1ll1IiIIIliIi1I1i1[lI1I1liI1Ii11iIIilI] = { [6] = 16, [5] = (i1iIlIIiliIl11111lI[5] - 129) % 256, [1] = (i1iIlIIiliIl11111lI[1] - 129) % 256 } elseif i1iIlIIiliIl11111lI[8] == 29 then lI1I1liI1Ii11iIIilI = lI1I1liI1Ii11iIIilI - 1 lIl1ll1IiIIIliIi1I1i1[lI1I1liI1Ii11iIIilI] = { [6] = 0, [5] = (i1iIlIIiliIl11111lI[5] - 100) % 256, [8] = (i1iIlIIiliIl11111lI[1] - 100) % 256 } else l1II1ii1l1IIii1iIil[i1iIlIIiliIl11111lI[5]] = #l1II1ii1l1IIii1iIil[i1iIlIIiliIl11111lI[1]] end elseif i1iIlIIiliIl11111lI[8] == 177 then lI1I1liI1Ii11iIIilI = lI1I1liI1Ii11iIIilI - 1 lIl1ll1IiIIIliIi1I1i1[lI1I1liI1Ii11iIIilI] = { [6] = 10, [5] = (i1iIlIIiliIl11111lI[5] - 179) % 256, [1] = (i1iIlIIiliIl11111lI[1] - 179) % 256 } else local IIi1il11llililiiIiI = i1iIlIIiliIl11111lI[5] local Illl1ilIiI1llIIlIli = i1iIlIIiliIl11111lI[1] local l1I1ilIIl1l11il1iil = Illl1ilIiI1llIIlIli > 0 and Illl1ilIiI1llIIlIli - 1 or I1liil11lIl1iiiI1ll - l1I1I1ii11lI1iI11lI if l1I1ilIIl1l11il1iil < 0 then l1I1ilIIl1l11il1iil = -1 end for lIlIIlIii1I11I1I1IiIl = IIi1il11llililiiIiI, IIi1il11llililiiIiI + l1I1ilIIl1l11il1iil do l1II1ii1l1IIii1iIil[lIlIIlIii1I11I1I1IiIl] = IlililIli1I11l1l1Il[l1I1I1ii11lI1iI11lI + (lIlIIlIii1I11I1I1IiIl - IIi1il11llililiiIiI) + 1] end if Illl1ilIiI1llIIlIli == 0 then IIIi1I1i1liIi1I1I1i = IIi1il11llililiiIiI + l1I1ilIIl1l11il1iil for lIlIIlIii1I11I1I1IiIl = IIIi1I1i1liIi1I1I1i + 1, iIlI11i11llllI1llii do l1II1ii1l1IIii1iIil[lIlIIlIii1I11I1I1IiIl] = nil end end end else local IIi1il11llililiiIiI = i1iIlIIiliIl11111lI[5] local iiil1iII1I1lIll11Ii = IIi1il11llililiiIiI + 2 local lI1iIl1iIII1I1lliI1 = { l1II1ii1l1IIii1iIil[IIi1il11llililiiIiI](l1II1ii1l1IIii1iIil[IIi1il11llililiiIiI + 1], l1II1ii1l1IIii1iIil[IIi1il11llililiiIiI + 2]) } for lIlIIlIii1I11I1I1IiIl = 1, i1iIlIIiliIl11111lI[8] do l1II1ii1l1IIii1iIil[iiil1iII1I1lIll11Ii + lIlIIlIii1I11I1I1IiIl] = lI1iIl1iIII1I1lliI1[lIlIIlIii1I11I1I1IiIl] end if l1II1ii1l1IIii1iIil[IIi1il11llililiiIiI + 3] ~= nil then l1II1ii1l1IIii1iIil[IIi1il11llililiiIiI + 2] = l1II1ii1l1IIii1iIil[IIi1il11llililiiIiI + 3] else lI1I1liI1Ii11iIIilI = lI1I1liI1Ii11iIIilI + 1 end end elseif lIiiIl1ilIl1llIII1l < 9 then if lIiiIl1ilIl1llIII1l >= 7 then if lIiiIl1ilIl1llIII1l == 8 then lI1I1liI1Ii11iIIilI = lI1I1liI1Ii11iIIilI + (i1iIlIIiliIl11111lI[9] - ii1IlIIlli1llllll1i) else l1II1ii1l1IIii1iIil[i1iIlIIiliIl11111lI[5]] = i1iIlIIiliIl11111lI[2] end else local lIlIlillI1lii1lIlili1, lilI1i1iI1i1i1i11i1 if i1iIlIIiliIl11111lI[3] then lIlIlillI1lii1lIlili1 = i1iIlIIiliIl11111lI[7] else lIlIlillI1lii1lIlili1 = l1II1ii1l1IIii1iIil[i1iIlIIiliIl11111lI[1]] end if i1iIlIIiliIl11111lI[4] then lilI1i1iI1i1i1i11i1 = i1iIlIIiliIl11111lI[10] else lilI1i1iI1i1i1i11i1 = l1II1ii1l1IIii1iIil[i1iIlIIiliIl11111lI[8]] end if lIlIlillI1lii1lIlili1 < lilI1i1iI1i1i1i11i1 ~= (i1iIlIIiliIl11111lI[5] ~= 0) then lI1I1liI1Ii11iIIilI = lI1I1liI1Ii11iIIilI + 1 end end elseif lIiiIl1ilIl1llIII1l >= 10 then if lIiiIl1ilIl1llIII1l == 11 then local lI1iiIi1Iiii1ilI1il = l1II1ii1l1IIii1iIil[i1iIlIIiliIl11111lI[1]] local lilI1i1iI1i1i1i11i1 if i1iIlIIiliIl11111lI[4] then lilI1i1iI1i1i1i11i1 = i1iIlIIiliIl11111lI[10] else lilI1i1iI1i1i1i11i1 = l1II1ii1l1IIii1iIil[i1iIlIIiliIl11111lI[8]] end l1II1ii1l1IIii1iIil[i1iIlIIiliIl11111lI[5] + 1] = lI1iiIi1Iiii1ilI1il l1II1ii1l1IIii1iIil[i1iIlIIiliIl11111lI[5]] = lI1iiIi1Iiii1ilI1il[lilI1i1iI1i1i1i11i1] else llII11lliilllli1i1I[i1iIlIIiliIl11111lI[1]] = l1II1ii1l1IIii1iIil[i1iIlIIiliIl11111lI[5]] end else l1II1ii1l1IIii1iIil[i1iIlIIiliIl11111lI[5]] = l1II1ii1l1IIii1iIil[i1iIlIIiliIl11111lI[1]] end elseif lIiiIl1ilIl1llIII1l >= 18 then if lIiiIl1ilIl1llIII1l < 21 then if lIiiIl1ilIl1llIII1l >= 19 then if lIiiIl1ilIl1llIII1l ~= 20 then local I1lIiIill1IIIll111i = l1I1illliIiIlil1i1i[i1iIlIIiliIl11111lI[9]] local iiI1I11I1iiIlIIIlll = {} if I1lIiIill1IIIll111i[IlI11lIiiIillIiIIll] > 0 then do local lIll1i11liillliil1lII = {} iiI1I11I1iiIlIIIlll = lI1lIl1iilI1iiIIiii({}, { __index = function(IIIiIl1iiI11IIliiil, lIlillll1IIIiI11i1IIi) local iiiIIiIiIilil1liIiI = lIll1i11liillliil1lII[lIlillll1IIIiI11i1IIi] return iiiIIiIiIilil1liIiI[1][iiiIIiIiIilil1liIiI[2]] end, __newindex = function(IIIiIl1iiI11IIliiil, lIlillll1IIIiI11i1IIi, IlII11iIiil1Iii1i1I) local iiiIIiIiIilil1liIiI = lIll1i11liillliil1lII[lIlillll1IIIiI11i1IIi] iiiIIiIiIilil1liIiI[1][iiiIIiIiIilil1liIiI[2]] = IlII11iIiil1Iii1i1I end }) for lIlIIlIii1I11I1I1IiIl = 1, I1lIiIill1IIIll111i[IlI11lIiiIillIiIIll] do local iIlIiIiIiillIilllii = lIl1ll1IiIIIliIi1I1i1[lI1I1liI1Ii11iIIilI] if iIlIiIiIiillIilllii[l1ilIlllilli1Ii11II] == I11I1IliI1IlIli1iiI then lIll1i11liillliil1lII[lIlIIlIii1I11I1I1IiIl - 1] = { l1II1ii1l1IIii1iIil, iIlIiIiIiillIilllii[i1I1Ii1lIIIlil1l11i] } elseif iIlIiIiIiillIilllii[l1ilIlllilli1Ii11II] == lIl1IiI1iiIiiIil1Iil1 then lIll1i11liillliil1lII[lIlIIlIii1I11I1I1IiIl - 1] = { llII11lliilllli1i1I, iIlIiIiIiillIilllii[i1I1Ii1lIIIlil1l11i] } end lI1I1liI1Ii11iIIilI = lI1I1liI1Ii11iIIilI + 1 end if not lIllil1ilillil11lll[l1II1ii1l1IIii1iIil] then lIllil1ilillil11lll[l1II1ii1l1IIii1iIil] = {lIll1i11liillliil1lII} else Il1ll11l1IIiiI1liii(lIllil1ilillil11lll[l1II1ii1l1IIii1iIil], lIll1i11liillliil1lII) end end end local lIl1l11IlilIII1iIii1l = lIlIIIlI1Illl1iil11Ii(I1lIiIill1IIIll111i, ll1111IiiiIlIIlliIi, iiI1I11I1iiIlIIIlll) l1II1ii1l1IIii1iIil[i1iIlIIiliIl11111lI[5]] = lIl1l11IlilIII1iIii1l else local lilI1i1iI1i1i1i11i1 if i1iIlIIiliIl11111lI[4] then lilI1i1iI1i1i1i11i1 = i1iIlIIiliIl11111lI[10] else lilI1i1iI1i1i1i11i1 = l1II1ii1l1IIii1iIil[i1iIlIIiliIl11111lI[8]] end l1II1ii1l1IIii1iIil[i1iIlIIiliIl11111lI[5]] = l1II1ii1l1IIii1iIil[i1iIlIIiliIl11111lI[1]][lilI1i1iI1i1i1i11i1] end else ll1111IiiiIlIIlliIi[i1iIlIIiliIl11111lI[2]] = l1II1ii1l1IIii1iIil[i1iIlIIiliIl11111lI[5]] end elseif lIiiIl1ilIl1llIII1l >= 23 then if lIiiIl1ilIl1llIII1l == 24 then local lIlIlillI1lii1lIlili1, lilI1i1iI1i1i1i11i1 if i1iIlIIiliIl11111lI[3] then lIlIlillI1lii1lIlili1 = i1iIlIIiliIl11111lI[7] else lIlIlillI1lii1lIlili1 = l1II1ii1l1IIii1iIil[i1iIlIIiliIl11111lI[1]] end if i1iIlIIiliIl11111lI[4] then lilI1i1iI1i1i1i11i1 = i1iIlIIiliIl11111lI[10] else lilI1i1iI1i1i1i11i1 = l1II1ii1l1IIii1iIil[i1iIlIIiliIl11111lI[8]] end if lIlIlillI1lii1lIlili1 == lilI1i1iI1i1i1i11i1 ~= (i1iIlIIiliIl11111lI[5] ~= 0) then lI1I1liI1Ii11iIIilI = lI1I1liI1Ii11iIIilI + 1 end else l1II1ii1l1IIii1iIil[i1iIlIIiliIl11111lI[5]] = ll1111IiiiIlIIlliIi[i1iIlIIiliIl11111lI[2]] end elseif lIiiIl1ilIl1llIII1l == 22 then local IIi1il11llililiiIiI = i1iIlIIiliIl11111lI[5] local IlililIli1I11l1l1Il = i1iIlIIiliIl11111lI[1] local lIliI1I1llI11lllI11iI = i1iIlIIiliIl11111lI[8] local II111lIlii11l1Il111, I1I1lilllI1i1iiIili, IiiIi1iiIl1i1iiil1I if IlililIli1I11l1l1Il ~= 1 then if IlililIli1I11l1l1Il ~= 0 then I1I1lilllI1i1iiIili = IIi1il11llililiiIiI + IlililIli1I11l1l1Il - 1 else I1I1lilllI1i1iiIili = IIIi1I1i1liIi1I1I1i end I1I1lilllI1i1iiIili, II111lIlii11l1Il111 = lIl1ll1llli1l11Il1iIl(l1II1ii1l1IIii1iIil[IIi1il11llililiiIiI](liII1iilI1lIlIII111(l1II1ii1l1IIii1iIil, IIi1il11llililiiIiI + 1, I1I1lilllI1i1iiIili))) else I1I1lilllI1i1iiIili, II111lIlii11l1Il111 = lIl1ll1llli1l11Il1iIl(l1II1ii1l1IIii1iIil[IIi1il11llililiiIiI]()) end if lIliI1I1llI11lllI11iI ~= 1 then if lIliI1I1llI11lllI11iI ~= 0 then I1I1lilllI1i1iiIili = IIi1il11llililiiIiI + lIliI1I1llI11lllI11iI - 2 IIIi1I1i1liIi1I1I1i = I1I1lilllI1i1iiIili + 1 else I1I1lilllI1i1iiIili = I1I1lilllI1i1iiIili + IIi1il11llililiiIiI - 1 IIIi1I1i1liIi1I1I1i = I1I1lilllI1i1iiIili end IiiIi1iiIl1i1iiil1I = 0 for lIlIIlIii1I11I1I1IiIl = IIi1il11llililiiIiI, I1I1lilllI1i1iiIili do IiiIi1iiIl1i1iiil1I = IiiIi1iiIl1i1iiil1I + 1 l1II1ii1l1IIii1iIil[lIlIIlIii1I11I1I1IiIl] = II111lIlii11l1Il111[IiiIi1iiIl1i1iiil1I] end else IIIi1I1i1liIi1I1I1i = IIi1il11llililiiIiI - 1 end for lIlIIlIii1I11I1I1IiIl = IIIi1I1i1liIi1I1I1i + 1, iIlI11i11llllI1llii do l1II1ii1l1IIii1iIil[lIlIIlIii1I11I1I1IiIl] = nil end else local lIlIlillI1lii1lIlili1, lilI1i1iI1i1i1i11i1 if i1iIlIIiliIl11111lI[3] then lIlIlillI1lii1lIlili1 = i1iIlIIiliIl11111lI[7] else lIlIlillI1lii1lIlili1 = l1II1ii1l1IIii1iIil[i1iIlIIiliIl11111lI[1]] end if i1iIlIIiliIl11111lI[4] then lilI1i1iI1i1i1i11i1 = i1iIlIIiliIl11111lI[10] else lilI1i1iI1i1i1i11i1 = l1II1ii1l1IIii1iIil[i1iIlIIiliIl11111lI[8]] end l1II1ii1l1IIii1iIil[i1iIlIIiliIl11111lI[5]] = lIlIlillI1lii1lIlili1 * lilI1i1iI1i1i1i11i1 end elseif lIiiIl1ilIl1llIII1l >= 15 then if lIiiIl1ilIl1llIII1l < 16 then local lIlIlillI1lii1lIlili1, lilI1i1iI1i1i1i11i1 if i1iIlIIiliIl11111lI[3] then lIlIlillI1lii1lIlili1 = i1iIlIIiliIl11111lI[7] else lIlIlillI1lii1lIlili1 = l1II1ii1l1IIii1iIil[i1iIlIIiliIl11111lI[1]] end if i1iIlIIiliIl11111lI[4] then lilI1i1iI1i1i1i11i1 = i1iIlIIiliIl11111lI[10] else lilI1i1iI1i1i1i11i1 = l1II1ii1l1IIii1iIil[i1iIlIIiliIl11111lI[8]] end if lIlIlillI1lii1lIlili1 <= lilI1i1iI1i1i1i11i1 ~= (i1iIlIIiliIl11111lI[5] ~= 0) then lI1I1liI1Ii11iIIilI = lI1I1liI1Ii11iIIilI + 1 end elseif lIiiIl1ilIl1llIII1l == 17 then local lIlIlillI1lii1lIlili1, lilI1i1iI1i1i1i11i1 if i1iIlIIiliIl11111lI[3] then lIlIlillI1lii1lIlili1 = i1iIlIIiliIl11111lI[7] else lIlIlillI1lii1lIlili1 = l1II1ii1l1IIii1iIil[i1iIlIIiliIl11111lI[1]] end if i1iIlIIiliIl11111lI[4] then lilI1i1iI1i1i1i11i1 = i1iIlIIiliIl11111lI[10] else lilI1i1iI1i1i1i11i1 = l1II1ii1l1IIii1iIil[i1iIlIIiliIl11111lI[8]] end l1II1ii1l1IIii1iIil[i1iIlIIiliIl11111lI[5]][lIlIlillI1lii1lIlili1] = lilI1i1iI1i1i1i11i1 elseif i1iIlIIiliIl11111lI[8] == 12 then lI1I1liI1Ii11iIIilI = lI1I1liI1Ii11iIIilI - 1 lIl1ll1IiIIIliIi1I1i1[lI1I1liI1Ii11iIIilI] = { [6] = 4, [5] = (i1iIlIIiliIl11111lI[5] - 124) % 256, [1] = (i1iIlIIiliIl11111lI[1] - 124) % 256 } elseif i1iIlIIiliIl11111lI[8] == 250 then lI1I1liI1Ii11iIIilI = lI1I1liI1Ii11iIIilI - 1 lIl1ll1IiIIIliIi1I1i1[lI1I1liI1Ii11iIIilI] = { [6] = 3, [5] = (i1iIlIIiliIl11111lI[5] - 26) % 256, [8] = (i1iIlIIiliIl11111lI[1] - 26) % 256 } else lIllil1ilillil11lll[l1II1ii1l1IIii1iIil] = nil local IIi1il11llililiiIiI = i1iIlIIiliIl11111lI[5] local ill1IiliIi1lliliI1i = i1iIlIIiliIl11111lI[1] if ill1IiliIi1lliliI1i == 1 then return true end local I1I1lilllI1i1iiIili = IIi1il11llililiiIiI + ill1IiliIi1lliliI1i - 2 if ill1IiliIi1lliliI1i == 0 then I1I1lilllI1i1iiIili = IIIi1I1i1liIi1I1I1i end return true, IIi1il11llililiiIiI, I1I1lilllI1i1iiIili end elseif lIiiIl1ilIl1llIII1l >= 13 then if lIiiIl1ilIl1llIII1l == 14 then l1II1ii1l1IIii1iIil[i1iIlIIiliIl11111lI[5]] = { liII1iilI1lIlIII111(II1ill1iIlli1111I1i, 1, i1iIlIIiliIl11111lI[1] == 0 and 255 or i1iIlIIiliIl11111lI[1]) } else l1II1ii1l1IIii1iIil[i1iIlIIiliIl11111lI[5]] = i1iIlIIiliIl11111lI[1] ~= 0 if i1iIlIIiliIl11111lI[8] ~= 0 then lI1I1liI1Ii11iIIilI = lI1I1liI1Ii11iIIilI + 1 end end else local lIlIlillI1lii1lIlili1, lilI1i1iI1i1i1i11i1 if i1iIlIIiliIl11111lI[3] then lIlIlillI1lii1lIlili1 = i1iIlIIiliIl11111lI[7] else lIlIlillI1lii1lIlili1 = l1II1ii1l1IIii1iIil[i1iIlIIiliIl11111lI[1]] end if i1iIlIIiliIl11111lI[4] then lilI1i1iI1i1i1i11i1 = i1iIlIIiliIl11111lI[10] else lilI1i1iI1i1i1i11i1 = l1II1ii1l1IIii1iIil[i1iIlIIiliIl11111lI[8]] end l1II1ii1l1IIii1iIil[i1iIlIIiliIl11111lI[5]] = lIlIlillI1lii1lIlili1 + lilI1i1iI1i1i1i11i1 end end end local lIl1lill11ll1Il1Il1, Ii1ililll1IiiIl1Ii1, lI11Il1I1Iillll1i1l, iIlIIlIliilll1liII1 = i1i1llIii11I1iIlIil(IiiIi1iiIl1i1iiil1I) if lIl1lill11ll1Il1Il1 then if lI11Il1I1Iillll1i1l then return liII1iilI1lIlIII111(l1II1ii1l1IIii1iIil, lI11Il1I1Iillll1i1l, iIlIIlIliilll1liII1) end else llliII1II1iI1I1iIi1("Luraph Script:" .. (iiliilI1lii1ii1lIIi[lI1I1liI1Ii11iIIilI - 1] or "") .. ": " .. lIlIIIi1lil1I111liiiI(Ii1ililll1IiiIl1Ii1), 0) end end lIlII11i1ilI1lIliIiiI(lIlii11lIIii1lIIl1iii, ll1111IiiiIlIIlliIi) return lIlii11lIIii1lIIl1iii end local ilIilllll1Iilillli1 = iIi1ilIi11ill11Ii1i() return lIlIIIlI1Illl1iil11Ii(ilIilllll1Iilillli1, ll1111IiiiIlIIlliIi)() end l111iIIIllIll1IllliI11li1l1ilIIiII1i()) 