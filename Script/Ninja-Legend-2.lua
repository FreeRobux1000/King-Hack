local lIllIiIllilIli1ll1i1I = assert local li111ii1I1llii11Il1 = select local lllII1ll1IlI1iI1Il1 = tonumber local lIlIiiIi1i1l1IlIiIlli = unpack local lIll1lIlII11iiliIi1il = pcall local ii11IIIilll11i11iil = setfenv local IilIliillIilIlIllIi = setmetatable local IIl1lllililIIlIlIi1 = type local lIlliI11Il1iilIl1iIII = getfenv local i1I1iiilli1I1IIll1I = tostring local Illl1IIlI1lIi11liiI = error local lIliII1Iili1llIi1Il11 = string.sub local IiliiIiiiI1iIIiIi1I = string.byte local l1111ili1lI1Il1iIi1 = string.char local liIilII1l11i1IlIIiI = string.rep local lIIiIil1l1IlI1liili = string.gsub local iIi1l1ll1iIl11i11il = string.match local lIllii1lIIIllI1llIliI = table.insert local lIliiiIiIIil1IIiIIlli = IiliiIiiiI1iIIiIi1I(";", 1) local lIilii11lIII1Iill11, ll11111liIII1iiiIli = #{2248}, #{ 1505, 3332, 1122, 4519, 4978, 3719, 899, 3314, 2428, 3162, 881, 919, 6060, 4875, 5883, 5876, 4094, 6910, 5375, 556, 516, 2104 } + lIliiiIiIIil1IIiIIlli + 130990 local illliIlIllIl1iIIIll = {} local iliII1illii11Ii1I11 = 1 local I11i1lI11IiIiil11ll, i1llIl1i1i1IilIIlI1 local function IiIliiIIIII1i1l1I1l(i11l1IliiilIIiII11l, I1Ii1IIIllilIIllI1i) local I11ll1lil11l111li1i i11l1IliiilIIiII11l = lIIiIil1l1IlI1liili(lIliII1Iili1llIi1Il11(i11l1IliiilIIiII11l, 5), "..", function(IlIiI1lI11IlI1I1lli) if IiliiIiiiI1iIIiIi1I(IlIiI1lI11IlI1I1lli, 2) == 72 then I11ll1lil11l111li1i = lllII1ll1IlI1iI1Il1(lIliII1Iili1llIi1Il11(IlIiI1lI11IlI1I1lli, 1, 1)) return "" else local lIlill11llIlllI1iilli = l1111ili1lI1Il1iIi1(lllII1ll1IlI1iI1Il1(IlIiI1lI11IlI1I1lli, 16)) if I11ll1lil11l111li1i then local lIllIi11Il1lIlil1lili = liIilII1l11i1IlIIiI(lIlill11llIlllI1iilli, I11ll1lil11l111li1i) I11ll1lil11l111li1i = nil return lIllIi11Il1lIlil1lili else return lIlill11llIlllI1iilli end end end) local function lIlIlliIIllli11IliiIi() local lIlii1ll11Ili111llii1 = IiliiIiiiI1iIIiIi1I(i11l1IliiilIIiII11l, iliII1illii11Ii1I11, iliII1illii11Ii1I11) iliII1illii11Ii1I11 = iliII1illii11Ii1I11 + 1 return lIlii1ll11Ili111llii1 end local function liliIlIiI1lIi1Iii11() local lIlii1ll11Ili111llii1, lIlill11llIlllI1iilli, lIllIi11Il1lIlil1lili, lIlIi1I1i1iIIiiilli1l = IiliiIiiiI1iIIiIi1I(i11l1IliiilIIiII11l, iliII1illii11Ii1I11, iliII1illii11Ii1I11 + 3) iliII1illii11Ii1I11 = iliII1illii11Ii1I11 + 4 return lIlIi1I1i1iIIiiilli1l * 16777216 + lIllIi11Il1lIlil1lili * 65536 + lIlill11llIlllI1iilli * 256 + lIlii1ll11Ili111llii1 end local function ll1lIii1i11IIli1ilI(lIlIiIlIl1iiII1i1i1iI, iIili1iiIiiill11l11, iIlliIiiil1iil11Il1) if iIlliIiiil1iil11Il1 then local lIliIilI1i1iiii1llIll, llII1lillIlillIIl1I = 0, 0 for IIIII1l1ilIiI1IiIIi = iIili1iiIiiill11l11, iIlliIiiil1iil11Il1 do lIliIilI1i1iiii1llIll = lIliIilI1i1iiii1llIll + 2 ^ llII1lillIlillIIl1I * ll1lIii1i11IIli1ilI(lIlIiIlIl1iiII1i1i1iI, IIIII1l1ilIiI1IiIIi) llII1lillIlillIIl1I = llII1lillIlillIIl1I + 1 end return lIliIilI1i1iiii1llIll else local ililIiiI1Iii1l1I1Il = 2 ^ (iIili1iiIiiill11l11 - 1) return ililIiiI1Iii1l1I1Il <= lIlIiIlIl1iiII1i1i1iI % (ililIiiI1Iii1l1I1Il + ililIiiI1Iii1l1I1Il) and 1 or 0 end end local function llIili1iIiliiIii1lI() local lIlii1ll11Ili111llii1, lIlill11llIlllI1iilli = liliIlIiI1lIi1Iii11(), liliIlIiI1lIi1Iii11() if lIlii1ll11Ili111llii1 == 0 and lIlill11llIlllI1iilli == 0 then return 0 end return (-2 * ll1lIii1i11IIli1ilI(lIlill11llIlllI1iilli, 32) + 1) * 2 ^ (ll1lIii1i11IIli1ilI(lIlill11llIlllI1iilli, 21, 31) - 1023) * ((ll1lIii1i11IIli1ilI(lIlill11llIlllI1iilli, 1, 20) * 4294967296 + lIlii1ll11Ili111llii1) / 4503599627370496 + 1) end local I1iIIiIilIlil1ii11l = bit or bit32 local illIiIiil1I1ll1IiiI = I1iIIiIilIlil1ii11l and I1iIIiIilIlil1ii11l.bxor or function(lIlii1ll11Ili111llii1, lIlill11llIlllI1iilli) local II1IiiI1li111IlIi1l = 1 local lIllIi11Il1lIlil1lili = 0 while lIlii1ll11Ili111llii1 > 0 and lIlill11llIlllI1iilli > 0 do local III1liiI1Il1lIl1iil = lIlii1ll11Ili111llii1 % 2 local l111IiII1Ii11ililil = lIlill11llIlllI1iilli % 2 if III1liiI1Il1lIl1iil ~= l111IiII1Ii11ililil then lIllIi11Il1lIlil1lili = lIllIi11Il1lIlil1lili + II1IiiI1li111IlIi1l end lIlii1ll11Ili111llii1 = (lIlii1ll11Ili111llii1 - III1liiI1Il1lIl1iil) / 2 lIlill11llIlllI1iilli = (lIlill11llIlllI1iilli - l111IiII1Ii11ililil) / 2 II1IiiI1li111IlIi1l = II1IiiI1li111IlIi1l * 2 end if lIlii1ll11Ili111llii1 < lIlill11llIlllI1iilli then lIlii1ll11Ili111llii1 = lIlill11llIlllI1iilli end while lIlii1ll11Ili111llii1 > 0 do local III1liiI1Il1lIl1iil = lIlii1ll11Ili111llii1 % 2 if III1liiI1Il1lIl1iil > 0 then lIllIi11Il1lIlil1lili = lIllIi11Il1lIlil1lili + II1IiiI1li111IlIi1l end lIlii1ll11Ili111llii1 = (lIlii1ll11Ili111llii1 - III1liiI1Il1lIl1iil) / 2 II1IiiI1li111IlIi1l = II1IiiI1li111IlIi1l * 2 end return lIllIi11Il1lIlil1lili end local function IIiIlllIlIiIi111i1l(IlIllII1il1l1lIii11) local lIlli11IIi1lI1li1iIl1 = { IiliiIiiiI1iIIiIi1I(i11l1IliiilIIiII11l, iliII1illii11Ii1I11, iliII1illii11Ii1I11 + 3) } iliII1illii11Ii1I11 = iliII1illii11Ii1I11 + 4 local lIlii1ll11Ili111llii1 = illIiIiil1I1ll1IiiI(lIlli11IIi1lI1li1iIl1[1], i1llIl1i1i1IilIIlI1) local lIlill11llIlllI1iilli = illIiIiil1I1ll1IiiI(lIlli11IIi1lI1li1iIl1[2], i1llIl1i1i1IilIIlI1) local lIllIi11Il1lIlil1lili = illIiIiil1I1ll1IiiI(lIlli11IIi1lI1li1iIl1[3], i1llIl1i1i1IilIIlI1) local lIlIi1I1i1iIIiiilli1l = illIiIiil1I1ll1IiiI(lIlli11IIi1lI1li1iIl1[4], i1llIl1i1i1IilIIlI1) i1llIl1i1i1IilIIlI1 = (213 * i1llIl1i1i1IilIIlI1 + IlIllII1il1l1lIii11) % 256 return lIlIi1I1i1iIIiiilli1l * 16777216 + lIllIi11Il1lIlil1lili * 65536 + lIlill11llIlllI1iilli * 256 + lIlii1ll11Ili111llii1 end local function lIlIIl111lIi11iIililI(lil1llIl1i1liIliiIi) local lIIiIi1li1iiii1iIiI = liliIlIiI1lIi1Iii11() local lIlii11II1I1iiIiiilII = "" for IIIII1l1ilIiI1IiIIi = lIilii11lIII1Iill11, lIIiIi1li1iiii1iIiI do lIlii11II1I1iiIiiilII = lIlii11II1I1iiIiiilII .. l1111ili1lI1Il1iIi1(illIiIiil1I1ll1IiiI(IiliiIiiiI1iIIiIi1I(i11l1IliiilIIiII11l, iliII1illii11Ii1I11 + IIIII1l1ilIiI1IiIIi - 1), I11i1lI11IiIiil11ll)) I11i1lI11IiIiil11ll = (lil1llIl1i1liIliiIi * I11i1lI11IiIiil11ll + 243) % 256 end iliII1illii11Ii1I11 = iliII1illii11Ii1I11 + lIIiIi1li1iiii1iIiI return lIlii11II1I1iiIiiilII end I11i1lI11IiIiil11ll = lIlIlliIIllli11IliiIi() i1llIl1i1i1IilIIlI1 = lIlIlliIIllli11IliiIi() local ll1illIliil1iliIlIl = {} for IIIII1l1ilIiI1IiIIi = lIilii11lIII1Iill11, lIlIlliIIllli11IliiIi() do local iliIl1I1liIi1l1lll1 = lIlIlliIIllli11IliiIi() local IlIIl1lllliIii1II1l = (IIIII1l1ilIiI1IiIIi - 1) * 2 ll1illIliil1iliIlIl[IlIIl1lllliIii1II1l] = ll1lIii1i11IIli1ilI(iliIl1I1liIi1l1lll1, 1, 4) ll1illIliil1iliIlIl[IlIIl1lllliIii1II1l + 1] = ll1lIii1i11IIli1ilI(iliIl1I1liIi1l1lll1, 5, 8) end local function lIllII1II1iIIl1l1ilI1() local lIII1111ii1I11IiliI = { nil, nil, {}, {}, {}, nil, {} } lIlIlliIIllli11IliiIi() local lIl1IllIIilliiIil1l1i = liliIlIiI1lIi1Iii11() for IIIII1l1ilIiI1IiIIi = lIilii11lIII1Iill11, lIl1IllIIilliiIil1l1i do lIII1111ii1I11IiliI[3][IIIII1l1ilIiI1IiIIi] = liliIlIiI1lIi1Iii11() end local iilliiIiillli1IIllI = liliIlIiI1lIi1Iii11() - (#{ 3759, 2625, 2517, 3330, 6287, 3098, 3459, 4751, 2214, 3091, 1715, 2254, 2128, 5831, 3376, 48, 6676, 4338, 5356, 3416, 246, 3757, 1374 } + lIliiiIiIIil1IIiIIlli + 133629) local li1lllli1iIlIill1lI = lIlIlliIIllli11IliiIi() for IIIII1l1ilIiI1IiIIi = lIilii11lIII1Iill11, iilliiIiillli1IIllI do local IiIIlIIlIliIlil11II = { nil, nil, nil, nil, nil, nil, nil, nil, nil, nil } local iliIl1I1liIi1l1lll1 = IIiIlllIlIiIi111i1l(li1lllli1iIlIill1lI) IiIIlIIlIliIlil11II[58843] = ll1lIii1i11IIli1ilI(iliIl1I1liIi1l1lll1, #{ 5292, 2788, 1044, 763, 2599, 2795, 3236, 5843, 3156, 5889 }, #{ 4531, 1593, 1990, 1178, 5952, 4957, 6670, 2991, 2314, 2913, 3300, 1404, 1577, 5351, 4040, 4889, 3266, 499 }) IiIIlIIlIliIlil11II[10] = ll1lIii1i11IIli1ilI(iliIl1I1liIi1l1lll1, #{ 1611, 4062, 4421, 5885, 4174, 4738, 4819, 1071, 6104, 2981, 4727, 6764, 2820, 6611, 5330, 5504, 4362, 3859, 4661 }, #{ 419, 3696, 1987, 5872, 2798, 2734, 6063, 3963, 3198, 3788, 2851, 4067, 4767, 1087, 6781, 5549, 5386, 2607, 2280, 5839, 1029 } + lIliiiIiIIil1IIiIIlli + -54) IiIIlIIlIliIlil11II[6] = ll1lIii1i11IIli1ilI(iliIl1I1liIi1l1lll1, #{ 5890, 5307, 6211, 5248, 3104, 6621, 4727, 5537, 5844, 286 }, #{ 113, 699, 3488, 220, 5340, 628, 5611, 4784, 4577, 1083, 4616, 4783, 3363, 3296, 6673, 6151, 2367, 5832 }) IiIIlIIlIliIlil11II[7] = ll1lIii1i11IIli1ilI(iliIl1I1liIi1l1lll1, #{71}, #{ 1599, 6603, 1628, 766, 5254, 112, 4291, 2197, 749, 6216, 3766, 891, 6417, 1, 2939, 371, 6371, 1593 }) IiIIlIIlIliIlil11II[8] = ll1lIii1i11IIli1ilI(iliIl1I1liIi1l1lll1, #{ 6562, 4265, 2303, 3943, 1327, 6558, 3618, 1425, 2700, 1460, 6891, 3025, 6652, 5660, 2268, 4587, 6690, 844, 6144, 6736, 293, 4428 } + lIliiiIiIIil1IIiIIlli + -54, #{ 1641, 5268, 4864, 2193, 4589, 5311, 3217, 2349, 6208, 2582, 642, 818, 6152, 2550, 6771, 517, 4713, 594, 930, 1684 } + lIliiiIiIIil1IIiIIlli + -47) IiIIlIIlIliIlil11II[9] = ll1lIii1i11IIli1ilI(iliIl1I1liIi1l1lll1, #{3132}, #{ 873, 937, 2115, 3346, 1468, 4433, 1923, 1078, 6042 }) IiIIlIIlIliIlil11II[96694] = ll1lIii1i11IIli1ilI(iliIl1I1liIi1l1lll1, #{ 5909, 3354, 1354, 6109, 1529, 2296, 495, 350, 4450, 4047, 3274, 1994, 5237, 340, 3054, 1286, 2289, 2143, 2237 }, #{ 31, 3445, 5582, 6876, 6177, 4184, 3436, 1824, 5514, 555, 5759, 4858, 4622, 930, 2151, 4601, 1685, 5838, 1961, 5533 } + lIliiiIiIIil1IIiIIlli + -53) lIII1111ii1I11IiliI[5][IIIII1l1ilIiI1IiIIi] = IiIIlIIlIliIlil11II end lIII1111ii1I11IiliI[1] = lIlIlliIIllli11IliiIi() lIlIlliIIllli11IliiIi() liliIlIiI1lIi1Iii11() local lIl1IllIIilliiIil1l1i = liliIlIiI1lIi1Iii11() - (#{ 4127, 2482, 603, 1434, 5590, 6502, 3350, 1543, 5728, 6830, 4483, 1948, 5425, 3115, 2741, 3407, 3005, 3199, 4308, 1129 } + lIliiiIiIIil1IIiIIlli + 133640) local ill1l11li1Ii1Il1iII = lIlIlliIIllli11IliiIi() for IIIII1l1ilIiI1IiIIi = lIilii11lIII1Iill11, lIl1IllIIilliiIil1l1i do local liiliii1iIIliI1Ii1i local IIl1lllililIIlIlIi1 = lIlIlliIIllli11IliiIi() if IIl1lllililIIlIlIi1 == #{ 4584, 6166, 5760, 3977, 1672, 820, 5075, 6135, 5894, 3430, 572, 2306, 6468, 179, 5251, 4041, 6464, 4853, 4960, 2611 } + lIliiiIiIIil1IIiIIlli + 99 then liiliii1iIIliI1Ii1i = lIliII1Iili1llIi1Il11(lIlIIl111lIi11iIililI(ill1l11li1Ii1Il1iII), #{ 4742, 710, 1772 }) end if IIl1lllililIIlIlIi1 == #{ 1775, 2688, 3322, 1610, 315, 4228, 2612, 4169, 4381, 5451, 4671, 3852, 132, 6721, 972, 4287, 4448, 6149, 1720, 6759 } + lIliiiIiIIil1IIiIIlli + -3 then liiliii1iIIliI1Ii1i = lIlIlliIIllli11IliiIi() + liliIlIiI1lIi1Iii11() + llIili1iIiliiIii1lI() end if IIl1lllililIIlIlIi1 == #{ 6551, 4003, 457, 4422, 876, 2015, 6570, 2343, 6088, 1393, 4002, 140, 6156, 2985, 1611, 6922, 1933, 3405, 3222, 2040 } + lIliiiIiIIil1IIiIIlli + 129 then liiliii1iIIliI1Ii1i = llIili1iIiliiIii1lI() end if IIl1lllililIIlIlIi1 == #{ 3471, 5766, 2560, 2907, 5311, 630, 6686, 5229, 6152, 5055, 3981, 289, 605, 84, 3458 } then liiliii1iIIliI1Ii1i = lIliII1Iili1llIi1Il11(lIlIIl111lIi11iIililI(ill1l11li1Ii1Il1iII), #{ 4742, 710, 1772 }) end if IIl1lllililIIlIlIi1 == #{ 6132, 3493, 1689, 591, 1773, 5500, 3375, 4490, 1523, 1815, 2950, 6123, 697, 4005, 4042, 1304, 4922, 769, 3022, 2702, 2603, 6250, 6616, 4242 } + lIliiiIiIIil1IIiIIlli + -17 then liiliii1iIIliI1Ii1i = #{ 5337, 4680, 5352, 191, 1336, 5299, 4716, 452, 6124, 3951, 3516, 6618, 4094, 735, 288, 663, 722, 6410, 3358, 5903, 938 } + lIliiiIiIIil1IIiIIlli + 20139 == #{ 911, 5078, 3632, 5619, 1858, 6045, 4386, 139, 2978, 1634, 38, 5361, 4599, 182, 867, 3986, 4450, 3682, 74, 3205, 2709, 6169 } + lIliiiIiIIil1IIiIIlli + 37611 end if IIl1lllililIIlIlIi1 == #{ 2552, 2614, 3660, 4532, 1223, 1646, 2553, 3648, 5575 } then liiliii1iIIliI1Ii1i = lIliII1Iili1llIi1Il11(lIlIIl111lIi11iIililI(ill1l11li1Ii1Il1iII), #{ 4759, 2613, 2781, 2233, 357 }) end if IIl1lllililIIlIlIi1 == #{ 2934, 2202, 786, 1455, 223, 812, 1894, 5702, 3180, 4387, 1940, 5338, 944, 2118, 6277, 3168, 4053, 1749, 2553, 1535 } + lIliiiIiIIil1IIiIIlli + -18 then liiliii1iIIliI1Ii1i = lIlIlliIIllli11IliiIi() end if IIl1lllililIIlIlIi1 == #{ 1166, 6337, 6933, 6715, 4263, 3599, 4010, 1686, 6546, 1525, 5926, 3420, 5095, 460, 6944, 3517, 3749, 5168, 5568, 3146, 388, 1036, 1271, 6923 } + lIliiiIiIIil1IIiIIlli + 160 then liiliii1iIIliI1Ii1i = #{ 1925, 651, 3665, 6626, 6626, 3713, 5879, 6463, 2544, 2025, 4946, 192, 1628, 217, 4206, 6390, 5404, 3040, 972, 3065 } + lIliiiIiIIil1IIiIIlli + 90893 == #{ 1925, 651, 3665, 6626, 6626, 3713, 5879, 6463, 2544, 2025, 4946, 192, 1628, 217, 4206, 6390, 5404, 3040, 972, 3065 } + lIliiiIiIIil1IIiIIlli + 90893 end if IIl1lllililIIlIlIi1 == #{ 5831, 5311, 3017, 2928, 2805, 5934, 1486, 2350, 3493, 198, 1638, 2454, 907, 4260, 2696, 3823, 3590, 466, 4451, 6517, 324 } then liiliii1iIIliI1Ii1i = lIliII1Iili1llIi1Il11(lIlIIl111lIi11iIililI(#{ 2080, 5068, 4262, 6035, 2960, 2040, 790, 665, 2827, 489, 4075, 3261, 461, 3786, 1877, 5434, 1994, 5786, 761, 6159, 960, 1762 } + lIliiiIiIIil1IIiIIlli + 39), #{2050}) end lIII1111ii1I11IiliI[4][IIIII1l1ilIiI1IiIIi - lIilii11lIII1Iill11] = liiliii1iIIliI1Ii1i end for IIIII1l1ilIiI1IiIIi = lIilii11lIII1Iill11, iilliiIiillli1IIllI do local IiIIlIIlIliIlil11II = lIII1111ii1I11IiliI[5][IIIII1l1ilIiI1IiIIi] local IlI11l1lIII11Ii1lIi = ll1illIliil1iliIlIl[IiIIlIIlIliIlil11II[8]] if IlI11l1lIII11Ii1lIi == #{ 4021, 5221, 3294 } then if IiIIlIIlIliIlil11II[9] > 255 then IiIIlIIlIliIlil11II[2] = true IiIIlIIlIliIlil11II[5] = lIII1111ii1I11IiliI[4][IiIIlIIlIliIlil11II[9] - 256] end if IiIIlIIlIliIlil11II[6] > 255 then IiIIlIIlIliIlil11II[4] = true IiIIlIIlIliIlil11II[1] = lIII1111ii1I11IiliI[4][IiIIlIIlIliIlil11II[6] - 256] end end if IlI11l1lIII11Ii1lIi == #{4496, 5065} and IiIIlIIlIliIlil11II[6] > 255 then IiIIlIIlIliIlil11II[4] = true IiIIlIIlIliIlil11II[1] = lIII1111ii1I11IiliI[4][IiIIlIIlIliIlil11II[6] - 256] end if IlI11l1lIII11Ii1lIi == #{ 4196, 6470, 2344, 1044 } then IiIIlIIlIliIlil11II[3] = lIII1111ii1I11IiliI[4][IiIIlIIlIliIlil11II[7]] end if IlI11l1lIII11Ii1lIi == #{2231} and IiIIlIIlIliIlil11II[9] > 255 then IiIIlIIlIliIlil11II[2] = true IiIIlIIlIliIlil11II[5] = lIII1111ii1I11IiliI[4][IiIIlIIlIliIlil11II[9] - 256] end end lIII1111ii1I11IiliI[6] = lIlIlliIIllli11IliiIi() lIII1111ii1I11IiliI[2] = lIlIlliIIllli11IliiIi() local lIl1IllIIilliiIil1l1i = liliIlIiI1lIi1Iii11() for IIIII1l1ilIiI1IiIIi = lIilii11lIII1Iill11, lIl1IllIIilliiIil1l1i do lIII1111ii1I11IiliI[7][IIIII1l1ilIiI1IiIIi - lIilii11lIII1Iill11] = lIllII1II1iIIl1l1ilI1() end liliIlIiI1lIi1Iii11() return lIII1111ii1I11IiliI end local function IiIIll1i1IllIil1Ii1(lIII1111ii1I11IiliI, I1Ii1IIIllilIIllI1i, IlI1IIl1lili111Iiil) local iIiIIIIIIliIiI1ilII, lIl1IllIIill1lIliIl1l = 21, 7 local i11l1i1iIl1111ilIiI = lIII1111ii1I11IiliI[5] local lii1lIIllIll1I1li1l = 6 local lIli1IlI11iiiIiilllll = lIII1111ii1I11IiliI[7] local lIliIiil1iiIlllil1lII = lIII1111ii1I11IiliI[2] local I1III11IliIlI1ill1l = lIII1111ii1I11IiliI[1] local I1iIiIll11111IIII1l = 8 local i1li1ll1IliIIiiil1I = lIII1111ii1I11IiliI[3] local lllIiII1I1III1Ili1i = 9 local function IIIliIIi1Ill1II1Ili(...) local liIIlI1il1iIi11i11I = 0 local lIllI1II111Il1Ilil1ii = { lIlIiiIi1i1l1IlIiIlli({}, 1, I1III11IliIlI1ill1l) } local lIl1ill11i1ilIIlllIi1 = 1 local lIllillIIi1I1IliIlliI = {} local lIlI1lliI1liIilIillIi = {} local I1Ii1IIIllilIIllI1i = lIlliI11Il1iilIl1iIII() local lIlIiil1lilIIl11iliii = { ... } local iiiiIIll1lIiIIIl111 = #lIlIiil1lilIIl11iliii - 1 for IIIII1l1ilIiI1IiIIi = 0, iiiiIIll1lIiIIIl111 do if IIIII1l1ilIiI1IiIIi < lIliIiil1iiIlllil1lII then lIllI1II111Il1Ilil1ii[IIIII1l1ilIiI1IiIIi] = lIlIiil1lilIIl11iliii[IIIII1l1ilIiI1IiIIi + 1] end end local function ililiiiiIlIl1Il1lI1(...) local lIllIi11Il1lIlil1lili = li111ii1I1llii11Il1("#", ...) local iil1lllI11I1iI1il1l = { ... } return lIllIi11Il1lIlil1lili, iil1lllI11I1iI1il1l end local function liIl1IIi1liIIIiiII1() while true do local ii1IIl1i11liIl1lIil = i11l1i1iIl1111ilIiI[lIl1ill11i1ilIIlllIi1] local lIl1lIliIIIiI1lIIl1l1 = ii1IIl1i11liIl1lIil[8] lIl1ill11i1ilIIlllIi1 = lIl1ill11i1ilIIlllIi1 + 1 if lIl1lIliIIIiI1lIIl1l1 < 11 then if lIl1lIliIIIiI1lIIl1l1 >= 5 then if lIl1lIliIIIiI1lIIl1l1 < 8 then if lIl1lIliIIIiI1lIIl1l1 >= 6 then if lIl1lIliIIIiI1lIIl1l1 == 7 then lIllI1II111Il1Ilil1ii[ii1IIl1i11liIl1lIil[10]] = IlI1IIl1lili111Iiil[ii1IIl1i11liIl1lIil[9]] else local iI1iIii1lilliI1l1li = ii1IIl1i11liIl1lIil[10] local lIlIiil1lilIIl11iliii = ii1IIl1i11liIl1lIil[9] local iIiIlI1iiiIillii1Il = ii1IIl1i11liIl1lIil[6] local lIl1IlIliii1iii11llii, IIIi11IlllI1iil1llI, liIl1IIi1liIIIiiII1 if lIlIiil1lilIIl11iliii ~= 1 then if lIlIiil1lilIIl11iliii ~= 0 then IIIi11IlllI1iil1llI = iI1iIii1lilliI1l1li + lIlIiil1lilIIl11iliii - 1 else IIIi11IlllI1iil1llI = liIIlI1il1iIi11i11I end IIIi11IlllI1iil1llI, lIl1IlIliii1iii11llii = ililiiiiIlIl1Il1lI1(lIllI1II111Il1Ilil1ii[iI1iIii1lilliI1l1li](lIlIiiIi1i1l1IlIiIlli(lIllI1II111Il1Ilil1ii, iI1iIii1lilliI1l1li + 1, IIIi11IlllI1iil1llI))) else IIIi11IlllI1iil1llI, lIl1IlIliii1iii11llii = ililiiiiIlIl1Il1lI1(lIllI1II111Il1Ilil1ii[iI1iIii1lilliI1l1li]()) end if iIiIlI1iiiIillii1Il ~= 1 then if iIiIlI1iiiIillii1Il ~= 0 then IIIi11IlllI1iil1llI = iI1iIii1lilliI1l1li + iIiIlI1iiiIillii1Il - 2 liIIlI1il1iIi11i11I = IIIi11IlllI1iil1llI + 1 else IIIi11IlllI1iil1llI = IIIi11IlllI1iil1llI + iI1iIii1lilliI1l1li - 1 liIIlI1il1iIi11i11I = IIIi11IlllI1iil1llI end liIl1IIi1liIIIiiII1 = 0 for IIIII1l1ilIiI1IiIIi = iI1iIii1lilliI1l1li, IIIi11IlllI1iil1llI do liIl1IIi1liIIIiiII1 = liIl1IIi1liIIIiiII1 + 1 lIllI1II111Il1Ilil1ii[IIIII1l1ilIiI1IiIIi] = lIl1IlIliii1iii11llii[liIl1IIi1liIIIiiII1] end else liIIlI1il1iIi11i11I = iI1iIii1lilliI1l1li - 1 end for IIIII1l1ilIiI1IiIIi = liIIlI1il1iIi11i11I + 1, I1III11IliIlI1ill1l do lIllI1II111Il1Ilil1ii[IIIII1l1ilIiI1IiIIi] = nil end end else local lIlill11llIlllI1iilli, lIllIi11Il1lIlil1lili if ii1IIl1i11liIl1lIil[2] then lIlill11llIlllI1iilli = ii1IIl1i11liIl1lIil[5] else lIlill11llIlllI1iilli = lIllI1II111Il1Ilil1ii[ii1IIl1i11liIl1lIil[9]] end if ii1IIl1i11liIl1lIil[4] then lIllIi11Il1lIlil1lili = ii1IIl1i11liIl1lIil[1] else lIllIi11Il1lIlil1lili = lIllI1II111Il1Ilil1ii[ii1IIl1i11liIl1lIil[6]] end lIllI1II111Il1Ilil1ii[ii1IIl1i11liIl1lIil[10]] = lIlill11llIlllI1iilli * lIllIi11Il1lIlil1lili end elseif lIl1lIliIIIiI1lIIl1l1 >= 9 then if lIl1lIliIIIiI1lIIl1l1 == 10 then local IlIIl1lllliIii1II1l = (ii1IIl1i11liIl1lIil[6] - 1) * 50 local lI1IlIi1i1Il1lI1Ii1 = ii1IIl1i11liIl1lIil[9] if lI1IlIi1i1Il1lI1Ii1 == 0 then lI1IlIi1i1Il1lI1Ii1 = liIIlI1il1iIi11i11I - ii1IIl1i11liIl1lIil[10] end for IIIII1l1ilIiI1IiIIi = 1, lI1IlIi1i1Il1lI1Ii1 do lIllI1II111Il1Ilil1ii[ii1IIl1i11liIl1lIil[10]][IlIIl1lllliIii1II1l + IIIII1l1ilIiI1IiIIi] = lIllI1II111Il1Ilil1ii[ii1IIl1i11liIl1lIil[10] + IIIII1l1ilIiI1IiIIi] end else lIllI1II111Il1Ilil1ii[ii1IIl1i11liIl1lIil[10]] = { lIlIiiIi1i1l1IlIiIlli(illliIlIllIl1iIIIll, 1, ii1IIl1i11liIl1lIil[9] == 0 and 255 or ii1IIl1i11liIl1lIil[9]) } end elseif ii1IIl1i11liIl1lIil[6] == 15 then lIl1ill11i1ilIIlllIi1 = lIl1ill11i1ilIIlllIi1 - 1 i11l1i1iIl1111ilIiI[lIl1ill11i1ilIIlllIi1] = { [8] = 7, [10] = (ii1IIl1i11liIl1lIil[10] - 172) % 256, [9] = (ii1IIl1i11liIl1lIil[9] - 172) % 256 } else local iI1iIii1lilliI1l1li = ii1IIl1i11liIl1lIil[10] local lIl1IllIIilliiIil1l1i = ii1IIl1i11liIl1lIil[9] local IiIl1lIiIIlIliilI1i = lIl1IllIIilliiIil1l1i > 0 and lIl1IllIIilliiIil1l1i - 1 or iiiiIIll1lIiIIIl111 - lIliIiil1iiIlllil1lII if IiIl1lIiIIlIliilI1i < 0 then IiIl1lIiIIlIliilI1i = -1 end for IIIII1l1ilIiI1IiIIi = iI1iIii1lilliI1l1li, iI1iIii1lilliI1l1li + IiIl1lIiIIlIliilI1i do lIllI1II111Il1Ilil1ii[IIIII1l1ilIiI1IiIIi] = lIlIiil1lilIIl11iliii[lIliIiil1iiIlllil1lII + (IIIII1l1ilIiI1IiIIi - iI1iIii1lilliI1l1li) + 1] end if lIl1IllIIilliiIil1l1i == 0 then liIIlI1il1iIi11i11I = iI1iIii1lilliI1l1li + IiIl1lIiIIlIliilI1i for IIIII1l1ilIiI1IiIIi = liIIlI1il1iIi11i11I + 1, I1III11IliIlI1ill1l do lIllI1II111Il1Ilil1ii[IIIII1l1ilIiI1IiIIi] = nil end end end elseif lIl1lIliIIIiI1lIIl1l1 >= 2 then if lIl1lIliIIIiI1lIIl1l1 >= 3 then if lIl1lIliIIIiI1lIIl1l1 ~= 4 then if ii1IIl1i11liIl1lIil[6] == 213 then lIl1ill11i1ilIIlllIi1 = lIl1ill11i1ilIIlllIi1 - 1 i11l1i1iIl1111ilIiI[lIl1ill11i1ilIIlllIi1] = { [8] = 18, [10] = (ii1IIl1i11liIl1lIil[10] - 142) % 256, [9] = (ii1IIl1i11liIl1lIil[9] - 142) % 256 } else lIllI1II111Il1Ilil1ii[ii1IIl1i11liIl1lIil[10]] = #lIllI1II111Il1Ilil1ii[ii1IIl1i11liIl1lIil[9]] end else local Iilil1l11i11II1I11I = lIli1IlI11iiiIiilllll[ii1IIl1i11liIl1lIil[7]] local li1Il1IliI1llIiIIl1 = {} if Iilil1l11i11II1I11I[lii1lIIllIll1I1li1l] > 0 then do local iI11Ii1l1liIllI1Iil = {} li1Il1IliI1llIiIIl1 = IilIliillIilIlIllIi({}, { __index = function(iil1lllI11I1iI1il1l, lliii1lIiII1IlI1IlI) local iliiiiilI1IliiIi1ll = iI11Ii1l1liIllI1Iil[lliii1lIiII1IlI1IlI] return iliiiiilI1IliiIi1ll[1][iliiiiilI1IliiIi1ll[2]] end, __newindex = function(iil1lllI11I1iI1il1l, lliii1lIiII1IlI1IlI, l1lli1l1II11iIil11i) local iliiiiilI1IliiIi1ll = iI11Ii1l1liIllI1Iil[lliii1lIiII1IlI1IlI] iliiiiilI1IliiIi1ll[1][iliiiiilI1IliiIi1ll[2]] = l1lli1l1II11iIil11i end }) for IIIII1l1ilIiI1IiIIi = 1, Iilil1l11i11II1I11I[lii1lIIllIll1I1li1l] do local liI11ili1II1IiiIill = i11l1i1iIl1111ilIiI[lIl1ill11i1ilIIlllIi1] if liI11ili1II1IiiIill[I1iIiIll11111IIII1l] == iIiIIIIIIliIiI1ilII then iI11Ii1l1liIllI1Iil[IIIII1l1ilIiI1IiIIi - 1] = { lIllI1II111Il1Ilil1ii, liI11ili1II1IiiIill[lllIiII1I1III1Ili1i] } elseif liI11ili1II1IiiIill[I1iIiIll11111IIII1l] == lIl1IllIIill1lIliIl1l then iI11Ii1l1liIllI1Iil[IIIII1l1ilIiI1IiIIi - 1] = { IlI1IIl1lili111Iiil, liI11ili1II1IiiIill[lllIiII1I1III1Ili1i] } end lIl1ill11i1ilIIlllIi1 = lIl1ill11i1ilIIlllIi1 + 1 end if not lIllillIIi1I1IliIlliI[lIllI1II111Il1Ilil1ii] then lIllillIIi1I1IliIlliI[lIllI1II111Il1Ilil1ii] = {iI11Ii1l1liIllI1Iil} else lIllii1lIIIllI1llIliI(lIllillIIi1I1IliIlliI[lIllI1II111Il1Ilil1ii], iI11Ii1l1liIllI1Iil) end end end local lIIll1IiIIlll1li1li = IiIIll1i1IllIil1Ii1(Iilil1l11i11II1I11I, I1Ii1IIIllilIIllI1i, li1Il1IliI1llIiIIl1) lIllI1II111Il1Ilil1ii[ii1IIl1i11liIl1lIil[10]] = lIIll1IiIIlll1li1li end else lIllI1II111Il1Ilil1ii[ii1IIl1i11liIl1lIil[10]] = ii1IIl1i11liIl1lIil[9] ~= 0 if ii1IIl1i11liIl1lIil[6] ~= 0 then lIl1ill11i1ilIIlllIi1 = lIl1ill11i1ilIIlllIi1 + 1 end end elseif lIl1lIliIIIiI1lIIl1l1 ~= 1 then lIl1ill11i1ilIIlllIi1 = lIl1ill11i1ilIIlllIi1 + (ii1IIl1i11liIl1lIil[7] - ll11111liIII1iiiIli) else lIllillIIi1I1IliIlliI[lIllI1II111Il1Ilil1ii] = nil local iI1iIii1lilliI1l1li = ii1IIl1i11liIl1lIil[10] local lIi1II1Ilil1lIIIl1I = ii1IIl1i11liIl1lIil[9] if lIi1II1Ilil1lIIIl1I == 1 then return true end local IIIi11IlllI1iil1llI = iI1iIii1lilliI1l1li + lIi1II1Ilil1lIIIl1I - 2 if lIi1II1Ilil1lIIIl1I == 0 then IIIi11IlllI1iil1llI = liIIlI1il1iIi11i11I end return true, iI1iIii1lilliI1l1li, IIIi11IlllI1iil1llI end elseif lIl1lIliIIIiI1lIIl1l1 < 16 then if lIl1lIliIIIiI1lIIl1l1 < 13 then if lIl1lIliIIIiI1lIIl1l1 == 12 then lIllI1II111Il1Ilil1ii[ii1IIl1i11liIl1lIil[10]] = I1Ii1IIIllilIIllI1i[ii1IIl1i11liIl1lIil[3]] else local lIlill11llIlllI1iilli, lIllIi11Il1lIlil1lili if ii1IIl1i11liIl1lIil[2] then lIlill11llIlllI1iilli = ii1IIl1i11liIl1lIil[5] else lIlill11llIlllI1iilli = lIllI1II111Il1Ilil1ii[ii1IIl1i11liIl1lIil[9]] end if ii1IIl1i11liIl1lIil[4] then lIllIi11Il1lIlil1lili = ii1IIl1i11liIl1lIil[1] else lIllIi11Il1lIlil1lili = lIllI1II111Il1Ilil1ii[ii1IIl1i11liIl1lIil[6]] end lIllI1II111Il1Ilil1ii[ii1IIl1i11liIl1lIil[10]][lIlill11llIlllI1iilli] = lIllIi11Il1lIlil1lili end elseif lIl1lIliIIIiI1lIIl1l1 < 14 then I1Ii1IIIllilIIllI1i[ii1IIl1i11liIl1lIil[3]] = lIllI1II111Il1Ilil1ii[ii1IIl1i11liIl1lIil[10]] elseif lIl1lIliIIIiI1lIIl1l1 ~= 15 then local lIllIi11Il1lIlil1lili if ii1IIl1i11liIl1lIil[4] then lIllIi11Il1lIlil1lili = ii1IIl1i11liIl1lIil[1] else lIllIi11Il1lIlil1lili = lIllI1II111Il1Ilil1ii[ii1IIl1i11liIl1lIil[6]] end lIllI1II111Il1Ilil1ii[ii1IIl1i11liIl1lIil[10]] = lIllI1II111Il1Ilil1ii[ii1IIl1i11liIl1lIil[9]][lIllIi11Il1lIlil1lili] elseif not not lIllI1II111Il1Ilil1ii[ii1IIl1i11liIl1lIil[10]] == (ii1IIl1i11liIl1lIil[6] == 0) then lIl1ill11i1ilIIlllIi1 = lIl1ill11i1ilIIlllIi1 + 1 end elseif lIl1lIliIIIiI1lIIl1l1 >= 19 then if lIl1lIliIIIiI1lIIl1l1 >= 20 then if lIl1lIliIIIiI1lIIl1l1 ~= 21 then lIllI1II111Il1Ilil1ii[ii1IIl1i11liIl1lIil[10]] = ii1IIl1i11liIl1lIil[3] elseif ii1IIl1i11liIl1lIil[6] == 104 then lIl1ill11i1ilIIlllIi1 = lIl1ill11i1ilIIlllIi1 - 1 i11l1i1iIl1111ilIiI[lIl1ill11i1ilIIlllIi1] = { [8] = 1, [10] = (ii1IIl1i11liIl1lIil[10] - 115) % 256, [9] = (ii1IIl1i11liIl1lIil[9] - 115) % 256 } elseif ii1IIl1i11liIl1lIil[6] == 141 then lIl1ill11i1ilIIlllIi1 = lIl1ill11i1ilIIlllIi1 - 1 i11l1i1iIl1111ilIiI[lIl1ill11i1ilIIlllIi1] = { [8] = 19, [10] = (ii1IIl1i11liIl1lIil[10] - 6) % 256, [6] = (ii1IIl1i11liIl1lIil[9] - 6) % 256 } else lIllI1II111Il1Ilil1ii[ii1IIl1i11liIl1lIil[10]] = lIllI1II111Il1Ilil1ii[ii1IIl1i11liIl1lIil[9]] end elseif ii1IIl1i11liIl1lIil[9] == 70 then lIl1ill11i1ilIIlllIi1 = lIl1ill11i1ilIIlllIi1 - 1 i11l1i1iIl1111ilIiI[lIl1ill11i1ilIIlllIi1] = { [8] = 21, [10] = (ii1IIl1i11liIl1lIil[10] - 56) % 256, [9] = (ii1IIl1i11liIl1lIil[6] - 56) % 256 } else local iI1iIii1lilliI1l1li = ii1IIl1i11liIl1lIil[10] local IlIIl1lllliIii1II1l = iI1iIii1lilliI1l1li + 2 local iIiIIIl1liIi1lIliil = { lIllI1II111Il1Ilil1ii[iI1iIii1lilliI1l1li](lIllI1II111Il1Ilil1ii[iI1iIii1lilliI1l1li + 1], lIllI1II111Il1Ilil1ii[iI1iIii1lilliI1l1li + 2]) } for IIIII1l1ilIiI1IiIIi = 1, ii1IIl1i11liIl1lIil[6] do lIllI1II111Il1Ilil1ii[IlIIl1lllliIii1II1l + IIIII1l1ilIiI1IiIIi] = iIiIIIl1liIi1lIliil[IIIII1l1ilIiI1IiIIi] end if lIllI1II111Il1Ilil1ii[iI1iIii1lilliI1l1li + 3] ~= nil then lIllI1II111Il1Ilil1ii[iI1iIii1lilliI1l1li + 2] = lIllI1II111Il1Ilil1ii[iI1iIii1lilliI1l1li + 3] else lIl1ill11i1ilIIlllIi1 = lIl1ill11i1ilIIlllIi1 + 1 end end elseif lIl1lIliIIIiI1lIIl1l1 < 17 then local lIlill11llIlllI1iilli, lIllIi11Il1lIlil1lili if ii1IIl1i11liIl1lIil[2] then lIlill11llIlllI1iilli = ii1IIl1i11liIl1lIil[5] else lIlill11llIlllI1iilli = lIllI1II111Il1Ilil1ii[ii1IIl1i11liIl1lIil[9]] end if ii1IIl1i11liIl1lIil[4] then lIllIi11Il1lIlil1lili = ii1IIl1i11liIl1lIil[1] else lIllIi11Il1lIlil1lili = lIllI1II111Il1Ilil1ii[ii1IIl1i11liIl1lIil[6]] end if lIlill11llIlllI1iilli == lIllIi11Il1lIlil1lili ~= (ii1IIl1i11liIl1lIil[10] ~= 0) then lIl1ill11i1ilIIlllIi1 = lIl1ill11i1ilIIlllIi1 + 1 end elseif lIl1lIliIIIiI1lIIl1l1 ~= 18 then local li1lI1ii1iIlIiIiIi1 = lIllI1II111Il1Ilil1ii[ii1IIl1i11liIl1lIil[9]] local lIllIi11Il1lIlil1lili if ii1IIl1i11liIl1lIil[4] then lIllIi11Il1lIlil1lili = ii1IIl1i11liIl1lIil[1] else lIllIi11Il1lIlil1lili = lIllI1II111Il1Ilil1ii[ii1IIl1i11liIl1lIil[6]] end lIllI1II111Il1Ilil1ii[ii1IIl1i11liIl1lIil[10] + 1] = li1lI1ii1iIlIiIiIi1 lIllI1II111Il1Ilil1ii[ii1IIl1i11liIl1lIil[10]] = li1lI1ii1iIlIiIiIi1[lIllIi11Il1lIlil1lili] elseif ii1IIl1i11liIl1lIil[6] == 167 then lIl1ill11i1ilIIlllIi1 = lIl1ill11i1ilIIlllIi1 - 1 i11l1i1iIl1111ilIiI[lIl1ill11i1ilIIlllIi1] = { [8] = 15, [10] = (ii1IIl1i11liIl1lIil[10] - 83) % 256, [6] = (ii1IIl1i11liIl1lIil[9] - 83) % 256 } else IlI1IIl1lili111Iiil[ii1IIl1i11liIl1lIil[9]] = lIllI1II111Il1Ilil1ii[ii1IIl1i11liIl1lIil[10]] end end end local l1Il11l111iI1iliiil, lIlii11II1I1iiIiiilII, lliiIi1lliI11lI1iIi, llIIil1ii1ilIl1lIiI = lIll1lIlII11iiliIi1il(liIl1IIi1liIIIiiII1) if l1Il11l111iI1iliiil then if lliiIi1lliI11lI1iIi then return lIlIiiIi1i1l1IlIiIlli(lIllI1II111Il1Ilil1ii, lliiIi1lliI11lI1iIi, llIIil1ii1ilIl1lIiI) end else Illl1IIlI1lIi11liiI("Luraph Script:" .. (i1li1ll1IliIIiiil1I[lIl1ill11i1ilIIlllIi1 - 1] or "") .. ": " .. i1I1iiilli1I1IIll1I(lIlii11II1I1iiIiiilII), 0) end end ii11IIIilll11i11iil(IIIliIIi1Ill1II1Ili, I1Ii1IIIllilIIllI1i) return IIIliIIi1Ill1II1Ili end local Ii1lllIll1l1liIi11i = lIllII1II1iIIl1l1ilI1() return IiIIll1i1IllIil1Ii1(Ii1lllIll1l1liIi11i, I1Ii1IIIllilIIllI1i)() end IiIliiIIIII1i1l1I1llIlliI11Il1iilIl1iIII()) 