local lliiII1llll11IiillI = assert local lIli1Ii11l1i1i11il1lI = select local I1ili1i1IIl1II11l11 = tonumber local ilIill1IiIIilillI1I = unpack local II1l1I111Illl1l1IiI = pcall local iI1Ili11lliI1l1IIi1 = setfenv local lIllI1i1iI1IiiiIIIlii = setmetatable local Il1111I11I1111IIii1 = type local I1iIIli1i1lI1I1l1li = getfenv local Ill1i1liIlI11iIil1I = tostring local II1iliil1lil1llIl1i = error local liIlIli11lIiI111iiI = string.sub local IiI11ll1lii11iIllIl = string.byte local liii11lII11iII111iI = string.char local il1li1lI1ill11ilIlI = string.rep local lIllIlli111lIi111IIIi = string.gsub local I111ii1il1l1II1IIil = string.match local liii1liIlilIiIIIiiI = table.insert local lllIilI1iIlIi1I1iII = IiI11ll1lii11iIllIl("a", 1) local ilIiil1liIlllli1ill, lIlI111iIil11l111Iiil = #{4447}, #{ 302, 6943, 1757, 125, 44, 4471, 5504, 4644, 4335, 5676, 3369, 1350, 4388, 6690, 2270, 5593, 428, 1670, 5620, 5832, 6423, 1596, 626, 2159 } + lllIilI1iIlIi1I1iII + 130950 local IliiII1IiIl11i1iiiI = {} local II1lII1IIIilIi11i11 = 1 local iIII1IIii1I1iIlIiil, li11IiliiiiilIIIiii local function liI1IIIil1lIl1IlI1l(IlilliI1Il1lI11lIli, lIliilIli1Ii1l1I1l111) local IiIillllI111iIl1IIl IlilliI1Il1lI11lIli = lIllIlli111lIi111IIIi(liIlIli11lIiI111iiI(IlilliI1Il1lI11lIli, 5), "..", function(lIiIi11lllIIi1iIii1) if IiI11ll1lii11iIllIl(lIiIi11lllIIi1iIii1, 2) == 72 then IiIillllI111iIl1IIl = I1ili1i1IIl1II11l11(liIlIli11lIiI111iiI(lIiIi11lllIIi1iIii1, 1, 1)) return "" else local lIIiIiiIiIl1iIIi1il = liii11lII11iII111iI(I1ili1i1IIl1II11l11(lIiIi11lllIIi1iIii1, 16)) if IiIillllI111iIl1IIl then local II11I1111IIIliI1Iil = il1li1lI1ill11ilIlI(lIIiIiiIiIl1iIIi1il, IiIillllI111iIl1IIl) IiIillllI111iIl1IIl = nil return II11I1111IIIliI1Iil else return lIIiIiiIiIl1iIIi1il end end end) local function lIlil111lIiIi11il11Il() local ll11il1111l1iliIIII = IiI11ll1lii11iIllIl(IlilliI1Il1lI11lIli, II1lII1IIIilIi11i11, II1lII1IIIilIi11i11) II1lII1IIIilIi11i11 = II1lII1IIIilIi11i11 + 1 return ll11il1111l1iliIIII end local function i11l1II1iliilliI1Ii() local ll11il1111l1iliIIII, lIIiIiiIiIl1iIIi1il, II11I1111IIIliI1Iil, lIliIlIiili1ll1lIIl1I = IiI11ll1lii11iIllIl(IlilliI1Il1lI11lIli, II1lII1IIIilIi11i11, II1lII1IIIilIi11i11 + 3) II1lII1IIIilIi11i11 = II1lII1IIIilIi11i11 + 4 return lIliIlIiili1ll1lIIl1I * 16777216 + II11I1111IIIliI1Iil * 65536 + lIIiIiiIiIl1iIIi1il * 256 + ll11il1111l1iliIIII end local function i11i1Iil11Illl1iIil(lIl1II1llili111iiliiI, ll1lllIiii11iIlll11, lIl1i11ilI1lIIllIIi1I) if lIl1i11ilI1lIIllIIi1I then local iIiI1I1iiIli1ill1il, ilI1I1iI1IlIl1iilIl = 0, 0 for lIlli1Il1lI1liII1i1Il = ll1lllIiii11iIlll11, lIl1i11ilI1lIIllIIi1I do iIiI1I1iiIli1ill1il = iIiI1I1iiIli1ill1il + 2 ^ ilI1I1iI1IlIl1iilIl * i11i1Iil11Illl1iIil(lIl1II1llili111iiliiI, lIlli1Il1lI1liII1i1Il) ilI1I1iI1IlIl1iilIl = ilI1I1iI1IlIl1iilIl + 1 end return iIiI1I1iiIli1ill1il else local lIl11IIiiIIi1111II1ii = 2 ^ (ll1lllIiii11iIlll11 - 1) return lIl11IIiiIIi1111II1ii <= lIl1II1llili111iiliiI % (lIl11IIiiIIi1111II1ii + lIl11IIiiIIi1111II1ii) and 1 or 0 end end local function lIl1iIi11IIiIi11IlIli() local ll11il1111l1iliIIII, lIIiIiiIiIl1iIIi1il = i11l1II1iliilliI1Ii(), i11l1II1iliilliI1Ii() if ll11il1111l1iliIIII == 0 and lIIiIiiIiIl1iIIi1il == 0 then return 0 end return (-2 * i11i1Iil11Illl1iIil(lIIiIiiIiIl1iIIi1il, 32) + 1) * 2 ^ (i11i1Iil11Illl1iIil(lIIiIiiIiIl1iIIi1il, 21, 31) - 1023) * ((i11i1Iil11Illl1iIil(lIIiIiiIiIl1iIIi1il, 1, 20) * 4294967296 + ll11il1111l1iliIIII) / 4503599627370496 + 1) end local lIll1ii11illil111Iil1 = bit or bit32 local l1l1ll1iIIiIiiIiIli = lIll1ii11illil111Iil1 and lIll1ii11illil111Iil1.bxor or function(ll11il1111l1iliIIII, lIIiIiiIiIl1iIIi1il) local ii11ili11iIll1lilII = 1 local II11I1111IIIliI1Iil = 0 while ll11il1111l1iliIIII > 0 and lIIiIiiIiIl1iIIi1il > 0 do local Ill1iiIiII11Ii1l1I1 = ll11il1111l1iliIIII % 2 local llil1I1lliIl11llil1 = lIIiIiiIiIl1iIIi1il % 2 if Ill1iiIiII11Ii1l1I1 ~= llil1I1lliIl11llil1 then II11I1111IIIliI1Iil = II11I1111IIIliI1Iil + ii11ili11iIll1lilII end ll11il1111l1iliIIII = (ll11il1111l1iliIIII - Ill1iiIiII11Ii1l1I1) / 2 lIIiIiiIiIl1iIIi1il = (lIIiIiiIiIl1iIIi1il - llil1I1lliIl11llil1) / 2 ii11ili11iIll1lilII = ii11ili11iIll1lilII * 2 end if ll11il1111l1iliIIII < lIIiIiiIiIl1iIIi1il then ll11il1111l1iliIIII = lIIiIiiIiIl1iIIi1il end while ll11il1111l1iliIIII > 0 do local Ill1iiIiII11Ii1l1I1 = ll11il1111l1iliIIII % 2 if Ill1iiIiII11Ii1l1I1 > 0 then II11I1111IIIliI1Iil = II11I1111IIIliI1Iil + ii11ili11iIll1lilII end ll11il1111l1iliIIII = (ll11il1111l1iliIIII - Ill1iiIiII11Ii1l1I1) / 2 ii11ili11iIll1lilII = ii11ili11iIll1lilII * 2 end return II11I1111IIIliI1Iil end local function lIll1ilIil1l11i1li1II(lIliIi1Iil1Il1i1l1ili) local li11i11I1I1iIlili1l = { IiI11ll1lii11iIllIl(IlilliI1Il1lI11lIli, II1lII1IIIilIi11i11, II1lII1IIIilIi11i11 + 3) } II1lII1IIIilIi11i11 = II1lII1IIIilIi11i11 + 4 local ll11il1111l1iliIIII = l1l1ll1iIIiIiiIiIli(li11i11I1I1iIlili1l[1], li11IiliiiiilIIIiii) local lIIiIiiIiIl1iIIi1il = l1l1ll1iIIiIiiIiIli(li11i11I1I1iIlili1l[2], li11IiliiiiilIIIiii) local II11I1111IIIliI1Iil = l1l1ll1iIIiIiiIiIli(li11i11I1I1iIlili1l[3], li11IiliiiiilIIIiii) local lIliIlIiili1ll1lIIl1I = l1l1ll1iIIiIiiIiIli(li11i11I1I1iIlili1l[4], li11IiliiiiilIIIiii) li11IiliiiiilIIIiii = (197 * li11IiliiiiilIIIiii + lIliIi1Iil1Il1i1l1ili) % 256 return lIliIlIiili1ll1lIIl1I * 16777216 + II11I1111IIIliI1Iil * 65536 + lIIiIiiIiIl1iIIi1il * 256 + ll11il1111l1iliIIII end local function IiIIlIiII1ili1II11i(i1iI1lI11iIIlIIiIIl) local lIl1I1i1iil1lI1Iliill = i11l1II1iliilliI1Ii() local ii1lli111il1ii1llIi = "" for lIlli1Il1lI1liII1i1Il = ilIiil1liIlllli1ill, lIl1I1i1iil1lI1Iliill do ii1lli111il1ii1llIi = ii1lli111il1ii1llIi .. liii11lII11iII111iI(l1l1ll1iIIiIiiIiIli(IiI11ll1lii11iIllIl(IlilliI1Il1lI11lIli, II1lII1IIIilIi11i11 + lIlli1Il1lI1liII1i1Il - 1), iIII1IIii1I1iIlIiil)) iIII1IIii1I1iIlIiil = (i1iI1lI11iIIlIIiIIl * iIII1IIii1I1iIlIiil + 177) % 256 end II1lII1IIIilIi11i11 = II1lII1IIIilIi11i11 + lIl1I1i1iil1lI1Iliill return ii1lli111il1ii1llIi end iIII1IIii1I1iIlIiil = lIlil111lIiIi11il11Il() li11IiliiiiilIIIiii = lIlil111lIiIi11il11Il() local l11I1Iii1Il1I1iIi1I = {} for lIlli1Il1lI1liII1i1Il = ilIiil1liIlllli1ill, lIlil111lIiIi11il11Il() do local ilIIi1lIli1iil11iii = lIlil111lIiIi11il11Il() local lIl1liiillliIll111IIl = (lIlli1Il1lI1liII1i1Il - 1) * 2 l11I1Iii1Il1I1iIi1I[lIl1liiillliIll111IIl] = i11i1Iil11Illl1iIil(ilIIi1lIli1iil11iii, 1, 4) l11I1Iii1Il1I1iIi1I[lIl1liiillliIll111IIl + 1] = i11i1Iil11Illl1iIil(ilIIi1lIli1iil11iii, 5, 8) end local function iii1I1i1l1iIiIiI1ii() local lIl1li1IllI1lIi1ilIiI = { nil, nil, {}, {}, {}, {}, nil } local iiililiI1lliilliIII = i11l1II1iliilliI1Ii() for lIlli1Il1lI1liII1i1Il = ilIiil1liIlllli1ill, iiililiI1lliilliIII do lIl1li1IllI1lIi1ilIiI[6][lIlli1Il1lI1liII1i1Il - ilIiil1liIlllli1ill] = iii1I1i1l1iIiIiI1ii() end i11l1II1iliilliI1Ii() lIl1li1IllI1lIi1ilIiI[7] = lIlil111lIiIi11il11Il() lIlil111lIiIi11il11Il() i11l1II1iliilliI1Ii() i11l1II1iliilliI1Ii() i11l1II1iliilliI1Ii() lIlil111lIiIi11il11Il() lIl1li1IllI1lIi1ilIiI[1] = lIlil111lIiIi11il11Il() local lIiIIllllIi1IIlI1i1 = i11l1II1iliilliI1Ii() - (#{ 481, 6355, 4297, 5999, 3483, 2999, 1155, 6903, 1722, 2013, 1869, 4701, 4735, 4025, 5698, 6412, 2369, 331, 4469, 5937, 5236, 1284, 4431 } + lllIilI1iIlIi1I1iII + 133655) local il1l1iliI11l11I1Il1 = lIlil111lIiIi11il11Il() for lIlli1Il1lI1liII1i1Il = ilIiil1liIlllli1ill, lIiIIllllIi1IIlI1i1 do local I11ilii1l1liil1ll1l = { nil, nil, nil, nil, nil, nil, nil, nil, nil, nil } local ilIIi1lIli1iil11iii = lIll1ilIil1l11i1li1II(il1l1iliI11l11I1Il1) I11ilii1l1liil1ll1l[76076] = i11i1Iil11Illl1iIil(ilIIi1lIli1iil11iii, #{ 2246, 5713, 2004, 2470, 3519, 2406, 658, 1225, 321, 1612 }, #{ 1247, 2100, 734, 6811, 1287, 1606, 2149, 1856, 820, 407, 4829, 3164, 414, 4509, 2686, 1656, 2303, 3963 }) I11ilii1l1liil1ll1l[10] = i11i1Iil11Illl1iIil(ilIIi1lIli1iil11iii, #{ 2260, 3372, 6822, 91, 6501, 5827, 791, 6638, 5507, 715, 1355, 6584, 6816, 4926, 3489, 4310, 6577, 5416, 3285, 1464, 700 } + lllIilI1iIlIi1I1iII + -91, #{ 408, 3161, 1573, 4481, 2194, 3392, 3313, 4796, 2356, 1158, 4854, 1819, 1357, 6155, 197, 4494, 4875, 2935, 1410, 5812 } + lllIilI1iIlIi1I1iII + -85) I11ilii1l1liil1ll1l[3] = i11i1Iil11Illl1iIil(ilIIi1lIli1iil11iii, #{ 1369, 1145, 4347, 1967, 2994, 3587, 2867, 3079, 5953, 5764, 647, 2550, 2055, 2497, 3109, 5939, 2057, 6859, 4561 }, #{ 1437, 4930, 2971, 1271, 5190, 3532, 2206, 4453, 3360, 4469, 1617, 1505, 1881, 4571, 2698, 1911, 5110, 2662, 6122, 5357 } + lllIilI1iIlIi1I1iII + -91) I11ilii1l1liil1ll1l[6] = i11i1Iil11Illl1iIil(ilIIi1lIli1iil11iii, #{4724}, #{ 2395, 2269, 6114, 4252, 6657, 1759, 3025, 6116, 1012, 5603, 1665, 539, 1501, 5594, 4230, 2556, 944, 2532 }) I11ilii1l1liil1ll1l[5] = i11i1Iil11Illl1iIil(ilIIi1lIli1iil11iii, #{ 3365, 3714, 5648, 3287, 936, 3937, 6764, 4968, 4185, 1893 }, #{ 1657, 1800, 212, 6482, 3648, 2064, 2319, 2685, 4522, 4732, 529, 4115, 2730, 3990, 5054, 5736, 4250, 5647 }) I11ilii1l1liil1ll1l[1] = i11i1Iil11Illl1iIil(ilIIi1lIli1iil11iii, #{4840}, #{ 2626, 196, 2858, 1565, 6732, 1304, 5889, 3334, 4855 }) lIl1li1IllI1lIi1ilIiI[5][lIlli1Il1lI1liII1i1Il] = I11ilii1l1liil1ll1l end lIlil111lIiIi11il11Il() lIlil111lIiIi11il11Il() lIl1li1IllI1lIi1ilIiI[2] = lIlil111lIiIi11il11Il() local iiililiI1lliilliIII = i11l1II1iliilliI1Ii() for lIlli1Il1lI1liII1i1Il = ilIiil1liIlllli1ill, iiililiI1lliilliIII do lIl1li1IllI1lIi1ilIiI[4][lIlli1Il1lI1liII1i1Il] = i11l1II1iliilliI1Ii() end local iiililiI1lliilliIII = i11l1II1iliilliI1Ii() - (#{ 4602, 6746, 1066, 438, 2187, 5007, 1465, 3904, 3231, 4326, 6524, 440, 6214, 6133, 1044, 2500, 5501, 1512, 3592, 5925, 5294, 2177 } + lllIilI1iIlIi1I1iII + 133668) local Iiill1Ill1IIIII1lil = lIlil111lIiIi11il11Il() for lIlli1Il1lI1liII1i1Il = ilIiil1liIlllli1ill, iiililiI1lliilliIII do local l1ll11IlIliIi1lI11l local Il1111I11I1111IIii1 = lIlil111lIiIi11il11Il() if Il1111I11I1111IIii1 == #{ 6867, 1090, 3439, 6603, 6763, 3347, 1784, 3750, 2317, 2877, 2580, 4393, 1176, 6167, 474, 1688, 2082, 6487, 1146, 613 } + lllIilI1iIlIi1I1iII + 71 then l1ll11IlIliIi1lI11l = lIlil111lIiIi11il11Il() + i11l1II1iliilliI1Ii() + lIl1iIi11IIiIi11IlIli() end if Il1111I11I1111IIii1 == #{ 5110, 2428, 6240, 2293, 1141, 960, 5571, 311, 1109, 6494, 4180, 4174, 3707, 5134, 2248, 4180, 4618, 3262, 5726, 1923, 347 } + lllIilI1iIlIi1I1iII + 13 then l1ll11IlIliIi1lI11l = lIlil111lIiIi11il11Il() + i11l1II1iliilliI1Ii() + lIl1iIi11IIiIi11IlIli() end if Il1111I11I1111IIii1 == #{ 5351, 3576, 5490, 1638, 3386, 4681, 2908, 459, 2032, 595, 5148, 308, 5004, 5489, 6144, 5889, 3884, 5933, 993, 5179, 6245 } + lllIilI1iIlIi1I1iII + -36 then l1ll11IlIliIi1lI11l = lIlil111lIiIi11il11Il() + i11l1II1iliilliI1Ii() + lIl1iIi11IIiIi11IlIli() end if Il1111I11I1111IIii1 == #{ 6708, 5246, 1075, 1200, 6462, 4199, 3387, 6878, 4163, 979, 4120, 614, 5727, 4870, 4674, 4166, 331, 1138, 4299, 1220, 6832, 2189, 5880, 673 } + lllIilI1iIlIi1I1iII + 71 then l1ll11IlIliIi1lI11l = #{ 6766, 6558, 3867, 5235, 6050, 5878, 4327, 4304, 5962, 5911, 5959, 6797, 6183, 2378, 1563, 4112, 1295, 4660, 4545, 1008, 1778, 2671, 3132, 660 } + lllIilI1iIlIi1I1iII + 66073 == #{ 6766, 6558, 3867, 5235, 6050, 5878, 4327, 4304, 5962, 5911, 5959, 6797, 6183, 2378, 1563, 4112, 1295, 4660, 4545, 1008, 1778, 2671, 3132, 660 } + lllIilI1iIlIi1I1iII + 66073 end if Il1111I11I1111IIii1 == #{ 3470, 1807, 4514, 5044, 4546, 6296, 4536, 2676, 1049, 18, 2402, 1259, 5712, 2747, 1112, 4571, 6549, 877, 1770, 5258, 6224, 6960, 6853 } + lllIilI1iIlIi1I1iII + 56 then l1ll11IlIliIi1lI11l = lIl1iIi11IIiIi11IlIli() end if Il1111I11I1111IIii1 == #{ 5282, 4138, 4191, 6218, 5367, 5313, 5968, 6049, 3499, 4650, 53, 1195, 2765, 724, 4340, 5755, 4923, 1248, 5737, 1756 } + lllIilI1iIlIi1I1iII + 42 then l1ll11IlIliIi1lI11l = liIlIli11lIiI111iiI(IiIIlIiII1ili1II11i(Iiill1Ill1IIIII1lil), #{ 1530, 4962, 6020, 1303, 2609, 3798 }) end if Il1111I11I1111IIii1 == #{ 3328, 5459, 2747, 3282, 22, 5572, 5313, 1718, 1703, 1961, 5406, 4145, 2680, 4271, 4186, 1016, 1197, 990, 688, 1610, 6455, 5883, 2988 } + lllIilI1iIlIi1I1iII + 44 then l1ll11IlIliIi1lI11l = lIl1iIi11IIiIi11IlIli() end if Il1111I11I1111IIii1 == #{ 3777, 3703, 5943, 5975, 6711, 5114, 3992, 3640, 4518, 4081, 5653, 3585, 3737, 2813, 1792, 4588, 3553, 6284, 2534, 957, 2119, 1785 } + lllIilI1iIlIi1I1iII + 45 then l1ll11IlIliIi1lI11l = lIl1iIi11IIiIi11IlIli() + lIl1iIi11IIiIi11IlIli() end if Il1111I11I1111IIii1 == #{ 3580, 2004, 4666, 1823, 5479, 5203, 2408, 2315, 1824, 304, 3194, 1792, 6738, 3856, 856, 798, 1059, 3478, 1883, 471, 1596, 2381, 2374, 3227 } + lllIilI1iIlIi1I1iII + 50 then l1ll11IlIliIi1lI11l = #{ 4142, 4231, 1859, 499, 3046, 3723, 3618, 4700, 2968, 4840, 1957, 1631, 5250, 1043, 3054, 6115, 4883, 2172, 3515, 6485, 5742, 3016, 4493 } + lllIilI1iIlIi1I1iII + 38495 == #{ 5325, 5078, 2578, 5849, 3459, 5378, 4298, 5834, 1839, 52, 3931, 5301, 2080, 4708, 6003, 3464, 2413, 2006, 6230, 3215 } + lllIilI1iIlIi1I1iII + 43794 end lIl1li1IllI1lIi1ilIiI[3][lIlli1Il1lI1liII1i1Il - ilIiil1liIlllli1ill] = l1ll11IlIliIi1lI11l end for lIlli1Il1lI1liII1i1Il = ilIiil1liIlllli1ill, lIiIIllllIi1IIlI1i1 do local I11ilii1l1liil1ll1l = lIl1li1IllI1lIi1ilIiI[5][lIlli1Il1lI1liII1i1Il] local IlIliI11ii1lIIiI1ii = l11I1Iii1Il1I1iIi1I[I11ilii1l1liil1ll1l[10]] if IlIliI11ii1lIIiI1ii == #{ 3198, 1705, 348 } then if I11ilii1l1liil1ll1l[1] > 255 then I11ilii1l1liil1ll1l[9] = true I11ilii1l1liil1ll1l[8] = lIl1li1IllI1lIi1ilIiI[3][I11ilii1l1liil1ll1l[1] - 256] end if I11ilii1l1liil1ll1l[5] > 255 then I11ilii1l1liil1ll1l[7] = true I11ilii1l1liil1ll1l[2] = lIl1li1IllI1lIi1ilIiI[3][I11ilii1l1liil1ll1l[5] - 256] end end if IlIliI11ii1lIIiI1ii == #{1379} and I11ilii1l1liil1ll1l[1] > 255 then I11ilii1l1liil1ll1l[9] = true I11ilii1l1liil1ll1l[8] = lIl1li1IllI1lIi1ilIiI[3][I11ilii1l1liil1ll1l[1] - 256] end if IlIliI11ii1lIIiI1ii == #{ 6373, 6473, 3686, 6125 } then I11ilii1l1liil1ll1l[4] = lIl1li1IllI1lIi1ilIiI[3][I11ilii1l1liil1ll1l[6]] end if IlIliI11ii1lIIiI1ii == #{1320, 545} and I11ilii1l1liil1ll1l[5] > 255 then I11ilii1l1liil1ll1l[7] = true I11ilii1l1liil1ll1l[2] = lIl1li1IllI1lIi1ilIiI[3][I11ilii1l1liil1ll1l[5] - 256] end end return lIl1li1IllI1lIi1ilIiI end local function liIIii111i1iliiIil1(lIl1li1IllI1lIi1ilIiI, lIliilIli1Ii1l1I1l111, i1iill1iIilIIIil1II) local Iii1iIl1ili1lilIllI, ll1iIIIi11IIlIIIIiI = 9, 11 local lIliI1il1li1Il1II1Iil = lIl1li1IllI1lIi1ilIiI[5] local iI1l1Ii1liliIIlI1II = 7 local I1IliiliII1iIillIII = lIl1li1IllI1lIi1ilIiI[6] local lIl1i11lIlii1iI1li1iI = lIl1li1IllI1lIi1ilIiI[2] local lIl111II1i1lII1l1IIIl = lIl1li1IllI1lIi1ilIiI[1] local IlIilI111111Ii1IIIi = 10 local IIlil1ii1lIIlIl1i1i = lIl1li1IllI1lIi1ilIiI[4] local lIllliI1II1iIli1iIiiI = 1 local function lIliiI1Ii111lI11iIi1I(...) local l11iilIlI1IliIIiiii = 0 local IIli1ii1lil11II1IlI = { ilIill1IiIIilillI1I({}, 1, lIl111II1i1lII1l1IIIl) } local lIll1i11iIiIi1iI1lI1i = 1 local I1IIiilIlIlllIil1lI = {} local iIi1iiIllili11lill1 = {} local lIliilIli1Ii1l1I1l111 = I1iIIli1i1lI1I1l1li() local lIlIIiiili11l1iiII1il = { ... } local IiIlII1liI1iIllIIi1 = #lIlIIiiili11l1iiII1il - 1 for lIlli1Il1lI1liII1i1Il = 0, IiIlII1liI1iIllIIi1 do if lIlli1Il1lI1liII1i1Il < lIl1i11lIlii1iI1li1iI then IIli1ii1lil11II1IlI[lIlli1Il1lI1liII1i1Il] = lIlIIiiili11l1iiII1il[lIlli1Il1lI1liII1i1Il + 1] end end local function li1l1i11I1llil1I11i(...) local II11I1111IIIliI1Iil = lIli1Ii11l1i1i11il1lI("#", ...) local llliiill1liillI1iil = { ... } return II11I1111IIIliI1Iil, llliiill1liillI1iil end local function Iliiiiii1IIiIi1li11() while true do local lI1iiiIIiI1i11i1iII = lIliI1il1li1Il1II1Iil[lIll1i11iIiIi1iI1lI1i] local IlI11lIiiiliiIi1I1I = lI1iiiIIiI1i11i1iII[10] lIll1i11iIiIi1iI1lI1i = lIll1i11iIiIi1iI1lI1i + 1 if IlI11lIiiiliiIi1I1I < 11 then if IlI11lIiiiliiIi1I1I >= 5 then if IlI11lIiiiliiIi1I1I >= 8 then if IlI11lIiiiliiIi1I1I < 9 then local lIliIi1i1ii11II11iiiI = I1IliiliII1iIillIII[lI1iiiIIiI1i11i1iII[6]] local lIII1liiIiiIIlIi1Ii = {} if lIliIi1i1ii11II11iiiI[iI1l1Ii1liliIIlI1II] > 0 then do local iililllI1i1i1liIIil = {} lIII1liiIiiIIlIi1Ii = lIllI1i1iI1IiiiIIIlii({}, { __index = function(llliiill1liillI1iil, IIII111iiIi1Iiiiili) local lIli11iiIiIi11liII1 = iililllI1i1i1liIIil[IIII111iiIi1Iiiiili] return lIli11iiIiIi11liII1[1][lIli11iiIiIi11liII1[2]] end, __newindex = function(llliiill1liillI1iil, IIII111iiIi1Iiiiili, llli1Ii1iiIll1i1i11) local lIli11iiIiIi11liII1 = iililllI1i1i1liIIil[IIII111iiIi1Iiiiili] lIli11iiIiIi11liII1[1][lIli11iiIiIi11liII1[2]] = llli1Ii1iiIll1i1i11 end }) for lIlli1Il1lI1liII1i1Il = 1, lIliIi1i1ii11II11iiiI[iI1l1Ii1liliIIlI1II] do local lllIl1IilIi1Il11l1l = lIliI1il1li1Il1II1Iil[lIll1i11iIiIi1iI1lI1i] if lllIl1IilIi1Il11l1l[IlIilI111111Ii1IIIi] == Iii1iIl1ili1lilIllI then iililllI1i1i1liIIil[lIlli1Il1lI1liII1i1Il - 1] = { IIli1ii1lil11II1IlI, lllIl1IilIi1Il11l1l[lIllliI1II1iIli1iIiiI] } elseif lllIl1IilIi1Il11l1l[IlIilI111111Ii1IIIi] == ll1iIIIi11IIlIIIIiI then iililllI1i1i1liIIil[lIlli1Il1lI1liII1i1Il - 1] = { i1iill1iIilIIIil1II, lllIl1IilIi1Il11l1l[lIllliI1II1iIli1iIiiI] } end lIll1i11iIiIi1iI1lI1i = lIll1i11iIiIi1iI1lI1i + 1 end if not I1IIiilIlIlllIil1lI[IIli1ii1lil11II1IlI] then I1IIiilIlIlllIil1lI[IIli1ii1lil11II1IlI] = {iililllI1i1i1liIIil} else liii1liIlilIiIIIiiI(I1IIiilIlIlllIil1lI[IIli1ii1lil11II1IlI], iililllI1i1i1liIIil) end end end local l1lIi1lii1ii11ilil1 = liIIii111i1iliiIil1(lIliIi1i1ii11II11iiiI, lIliilIli1Ii1l1I1l111, lIII1liiIiiIIlIi1Ii) IIli1ii1lil11II1IlI[lI1iiiIIiI1i11i1iII[3]] = l1lIi1lii1ii11ilil1 elseif IlI11lIiiiliiIi1I1I ~= 10 then IIli1ii1lil11II1IlI[lI1iiiIIiI1i11i1iII[3]] = IIli1ii1lil11II1IlI[lI1iiiIIiI1i11i1iII[1]] elseif lI1iiiIIiI1i11i1iII[5] == 239 then lIll1i11iIiIi1iI1lI1i = lIll1i11iIiIi1iI1lI1i - 1 lIliI1il1li1Il1II1Iil[lIll1i11iIiIi1iI1lI1i] = { [10] = 11, [3] = (lI1iiiIIiI1i11i1iII[3] - 120) % 256, [1] = (lI1iiiIIiI1i11i1iII[1] - 120) % 256 } elseif lI1iiiIIiI1i11i1iII[5] == 101 then lIll1i11iIiIi1iI1lI1i = lIll1i11iIiIi1iI1lI1i - 1 lIliI1il1li1Il1II1Iil[lIll1i11iIiIi1iI1lI1i] = { [10] = 17, [3] = (lI1iiiIIiI1i11i1iII[3] - 60) % 256, [5] = (lI1iiiIIiI1i11i1iII[1] - 60) % 256 } else local iiIi1I1li1lIIiI1Iil = lI1iiiIIiI1i11i1iII[3] local iiililiI1lliilliIII = lI1iiiIIiI1i11i1iII[1] local lIl1iiiI1llI11li1ilII = iiililiI1lliilliIII > 0 and iiililiI1lliilliIII - 1 or IiIlII1liI1iIllIIi1 - lIl1i11lIlii1iI1li1iI if lIl1iiiI1llI11li1ilII < 0 then lIl1iiiI1llI11li1ilII = -1 end for lIlli1Il1lI1liII1i1Il = iiIi1I1li1lIIiI1Iil, iiIi1I1li1lIIiI1Iil + lIl1iiiI1llI11li1ilII do IIli1ii1lil11II1IlI[lIlli1Il1lI1liII1i1Il] = lIlIIiiili11l1iiII1il[lIl1i11lIlii1iI1li1iI + (lIlli1Il1lI1liII1i1Il - iiIi1I1li1lIIiI1Iil) + 1] end if iiililiI1lliilliIII == 0 then l11iilIlI1IliIIiiii = iiIi1I1li1lIIiI1Iil + lIl1iiiI1llI11li1ilII for lIlli1Il1lI1liII1i1Il = l11iilIlI1IliIIiiii + 1, lIl111II1i1lII1l1IIIl do IIli1ii1lil11II1IlI[lIlli1Il1lI1liII1i1Il] = nil end end end elseif IlI11lIiiiliiIi1I1I >= 6 then if IlI11lIiiiliiIi1I1I == 7 then local lIl1liiillliIll111IIl = (lI1iiiIIiI1i11i1iII[5] - 1) * 50 local lIIlii1llIllIIl1ili = lI1iiiIIiI1i11i1iII[1] if lIIlii1llIllIIl1ili == 0 then lIIlii1llIllIIl1ili = l11iilIlI1IliIIiiii - lI1iiiIIiI1i11i1iII[3] end for lIlli1Il1lI1liII1i1Il = 1, lIIlii1llIllIIl1ili do IIli1ii1lil11II1IlI[lI1iiiIIiI1i11i1iII[3]][lIl1liiillliIll111IIl + lIlli1Il1lI1liII1i1Il] = IIli1ii1lil11II1IlI[lI1iiiIIiI1i11i1iII[3] + lIlli1Il1lI1liII1i1Il] end else local iiIi1I1li1lIIiI1Iil = lI1iiiIIiI1i11i1iII[3] local lIlIIiiili11l1iiII1il = lI1iiiIIiI1i11i1iII[1] local lIl1iii1IiIlI1i1liIlI = lI1iiiIIiI1i11i1iII[5] local IIlliiIIiilIIii1il1, lIlII11iIIi11l1I1IIi1, Iliiiiii1IIiIi1li11 if lIlIIiiili11l1iiII1il ~= 1 then if lIlIIiiili11l1iiII1il ~= 0 then lIlII11iIIi11l1I1IIi1 = iiIi1I1li1lIIiI1Iil + lIlIIiiili11l1iiII1il - 1 else lIlII11iIIi11l1I1IIi1 = l11iilIlI1IliIIiiii end lIlII11iIIi11l1I1IIi1, IIlliiIIiilIIii1il1 = li1l1i11I1llil1I11i(IIli1ii1lil11II1IlI[iiIi1I1li1lIIiI1Iil](ilIill1IiIIilillI1I(IIli1ii1lil11II1IlI, iiIi1I1li1lIIiI1Iil + 1, lIlII11iIIi11l1I1IIi1))) else lIlII11iIIi11l1I1IIi1, IIlliiIIiilIIii1il1 = li1l1i11I1llil1I11i(IIli1ii1lil11II1IlI[iiIi1I1li1lIIiI1Iil]()) end if lIl1iii1IiIlI1i1liIlI ~= 1 then if lIl1iii1IiIlI1i1liIlI ~= 0 then lIlII11iIIi11l1I1IIi1 = iiIi1I1li1lIIiI1Iil + lIl1iii1IiIlI1i1liIlI - 2 l11iilIlI1IliIIiiii = lIlII11iIIi11l1I1IIi1 + 1 else lIlII11iIIi11l1I1IIi1 = lIlII11iIIi11l1I1IIi1 + iiIi1I1li1lIIiI1Iil - 1 l11iilIlI1IliIIiiii = lIlII11iIIi11l1I1IIi1 end Iliiiiii1IIiIi1li11 = 0 for lIlli1Il1lI1liII1i1Il = iiIi1I1li1lIIiI1Iil, lIlII11iIIi11l1I1IIi1 do Iliiiiii1IIiIi1li11 = Iliiiiii1IIiIi1li11 + 1 IIli1ii1lil11II1IlI[lIlli1Il1lI1liII1i1Il] = IIlliiIIiilIIii1il1[Iliiiiii1IIiIi1li11] end else l11iilIlI1IliIIiiii = iiIi1I1li1lIIiI1Iil - 1 end for lIlli1Il1lI1liII1i1Il = l11iilIlI1IliIIiiii + 1, lIl111II1i1lII1l1IIIl do IIli1ii1lil11II1IlI[lIlli1Il1lI1liII1i1Il] = nil end end else IIli1ii1lil11II1IlI[lI1iiiIIiI1i11i1iII[3]] = lI1iiiIIiI1i11i1iII[1] ~= 0 if lI1iiiIIiI1i11i1iII[5] ~= 0 then lIll1i11iIiIi1iI1lI1i = lIll1i11iIiIi1iI1lI1i + 1 end end elseif IlI11lIiiiliiIi1I1I >= 2 then if IlI11lIiiiliiIi1I1I >= 3 then if IlI11lIiiiliiIi1I1I ~= 4 then I1IIiilIlIlllIil1lI[IIli1ii1lil11II1IlI] = nil local iiIi1I1li1lIIiI1Iil = lI1iiiIIiI1i11i1iII[3] local lIllI11II1ii1I11iiil1 = lI1iiiIIiI1i11i1iII[1] if lIllI11II1ii1I11iiil1 == 1 then return true end local lIlII11iIIi11l1I1IIi1 = iiIi1I1li1lIIiI1Iil + lIllI11II1ii1I11iiil1 - 2 if lIllI11II1ii1I11iiil1 == 0 then lIlII11iIIi11l1I1IIi1 = l11iilIlI1IliIIiiii end return true, iiIi1I1li1lIIiI1Iil, lIlII11iIIi11l1I1IIi1 else local lIIiIiiIiIl1iIIi1il, II11I1111IIIliI1Iil if lI1iiiIIiI1i11i1iII[9] then lIIiIiiIiIl1iIIi1il = lI1iiiIIiI1i11i1iII[8] else lIIiIiiIiIl1iIIi1il = IIli1ii1lil11II1IlI[lI1iiiIIiI1i11i1iII[1]] end if lI1iiiIIiI1i11i1iII[7] then II11I1111IIIliI1Iil = lI1iiiIIiI1i11i1iII[2] else II11I1111IIIliI1Iil = IIli1ii1lil11II1IlI[lI1iiiIIiI1i11i1iII[5]] end IIli1ii1lil11II1IlI[lI1iiiIIiI1i11i1iII[3]] = lIIiIiiIiIl1iIIi1il * II11I1111IIIliI1Iil end else local lIIiIiiIiIl1iIIi1il, II11I1111IIIliI1Iil if lI1iiiIIiI1i11i1iII[9] then lIIiIiiIiIl1iIIi1il = lI1iiiIIiI1i11i1iII[8] else lIIiIiiIiIl1iIIi1il = IIli1ii1lil11II1IlI[lI1iiiIIiI1i11i1iII[1]] end if lI1iiiIIiI1i11i1iII[7] then II11I1111IIIliI1Iil = lI1iiiIIiI1i11i1iII[2] else II11I1111IIIliI1Iil = IIli1ii1lil11II1IlI[lI1iiiIIiI1i11i1iII[5]] end if lIIiIiiIiIl1iIIi1il == II11I1111IIIliI1Iil ~= (lI1iiiIIiI1i11i1iII[3] ~= 0) then lIll1i11iIiIi1iI1lI1i = lIll1i11iIiIi1iI1lI1i + 1 end end elseif IlI11lIiiiliiIi1I1I ~= 1 then lIll1i11iIiIi1iI1lI1i = lIll1i11iIiIi1iI1lI1i + (lI1iiiIIiI1i11i1iII[6] - lIlI111iIil11l111Iiil) elseif lI1iiiIIiI1i11i1iII[5] == 128 then lIll1i11iIiIi1iI1lI1i = lIll1i11iIiIi1iI1lI1i - 1 lIliI1il1li1Il1II1Iil[lIll1i11iIiIi1iI1lI1i] = { [10] = 9, [3] = (lI1iiiIIiI1i11i1iII[3] - 156) % 256, [1] = (lI1iiiIIiI1i11i1iII[1] - 156) % 256 } else local ii111i1Iii111liI1l1 = lI1iiiIIiI1i11i1iII[3] local lIll1l1lI11lIl1ill1li = {} for Ii1liiI111111I1IlI1, iililllI1i1i1liIIil in pairs(I1IIiilIlIlllIil1lI[IIli1ii1lil11II1IlI]) do for Ii1liiI111111I1IlI1, lIli11iiIiIi11liII1 in pairs(iililllI1i1i1liIIil) do if lIli11iiIiIi11liII1[1] == IIli1ii1lil11II1IlI and ii111i1Iii111liI1l1 <= lIli11iiIiIi11liII1[2] then local Ilil11llIIiiIilIiII = lIli11iiIiIi11liII1[2] if not lIll1l1lI11lIl1ill1li[Ilil11llIIiiIilIiII] then liIIii111i1iliiIil1(iIi1iiIllili11lill1, IIli1ii1lil11II1IlI[Ilil11llIIiiIilIiII]) lIll1l1lI11lIl1ill1li[Ilil11llIIiiIilIiII] = #iIi1iiIllili11lill1 end lIli11iiIiIi11liII1[1] = iIi1iiIllili11lill1 lIli11iiIiIi11liII1[2] = lIll1l1lI11lIl1ill1li[Ilil11llIIiiIilIiII] end end end end elseif IlI11lIiiiliiIi1I1I >= 16 then if IlI11lIiiiliiIi1I1I >= 19 then if IlI11lIiiiliiIi1I1I >= 20 then if IlI11lIiiiliiIi1I1I ~= 21 then IIli1ii1lil11II1IlI[lI1iiiIIiI1i11i1iII[3]] = lIliilIli1Ii1l1I1l111[lI1iiiIIiI1i11i1iII[4]] else i1iill1iIilIIIil1II[lI1iiiIIiI1i11i1iII[1]] = IIli1ii1lil11II1IlI[lI1iiiIIiI1i11i1iII[3]] end else IIli1ii1lil11II1IlI[lI1iiiIIiI1i11i1iII[3]] = { ilIill1IiIIilillI1I(IliiII1IiIl11i1iiiI, 1, lI1iiiIIiI1i11i1iII[1] == 0 and 255 or lI1iiiIIiI1i11i1iII[1]) } end elseif IlI11lIiiiliiIi1I1I < 17 then local II11I1111IIIliI1Iil if lI1iiiIIiI1i11i1iII[7] then II11I1111IIIliI1Iil = lI1iiiIIiI1i11i1iII[2] else II11I1111IIIliI1Iil = IIli1ii1lil11II1IlI[lI1iiiIIiI1i11i1iII[5]] end IIli1ii1lil11II1IlI[lI1iiiIIiI1i11i1iII[3]] = IIli1ii1lil11II1IlI[lI1iiiIIiI1i11i1iII[1]][II11I1111IIIliI1Iil] elseif IlI11lIiiiliiIi1I1I ~= 18 then if not not IIli1ii1lil11II1IlI[lI1iiiIIiI1i11i1iII[3]] == (lI1iiiIIiI1i11i1iII[5] == 0) then lIll1i11iIiIi1iI1lI1i = lIll1i11iIiIi1iI1lI1i + 1 end else local lIlili1Iil1IIl11iilii = IIli1ii1lil11II1IlI[lI1iiiIIiI1i11i1iII[1]] local II11I1111IIIliI1Iil if lI1iiiIIiI1i11i1iII[7] then II11I1111IIIliI1Iil = lI1iiiIIiI1i11i1iII[2] else II11I1111IIIliI1Iil = IIli1ii1lil11II1IlI[lI1iiiIIiI1i11i1iII[5]] end IIli1ii1lil11II1IlI[lI1iiiIIiI1i11i1iII[3] + 1] = lIlili1Iil1IIl11iilii IIli1ii1lil11II1IlI[lI1iiiIIiI1i11i1iII[3]] = lIlili1Iil1IIl11iilii[II11I1111IIIliI1Iil] end elseif IlI11lIiiiliiIi1I1I >= 13 then if IlI11lIiiiliiIi1I1I < 14 then local lIIiIiiIiIl1iIIi1il, II11I1111IIIliI1Iil if lI1iiiIIiI1i11i1iII[9] then lIIiIiiIiIl1iIIi1il = lI1iiiIIiI1i11i1iII[8] else lIIiIiiIiIl1iIIi1il = IIli1ii1lil11II1IlI[lI1iiiIIiI1i11i1iII[1]] end if lI1iiiIIiI1i11i1iII[7] then II11I1111IIIliI1Iil = lI1iiiIIiI1i11i1iII[2] else II11I1111IIIliI1Iil = IIli1ii1lil11II1IlI[lI1iiiIIiI1i11i1iII[5]] end IIli1ii1lil11II1IlI[lI1iiiIIiI1i11i1iII[3]][lIIiIiiIiIl1iIIi1il] = II11I1111IIIliI1Iil elseif IlI11lIiiiliiIi1I1I == 15 then if lI1iiiIIiI1i11i1iII[1] == 165 then lIll1i11iIiIi1iI1lI1i = lIll1i11iIiIi1iI1lI1i - 1 lIliI1il1li1Il1II1Iil[lIll1i11iIiIi1iI1lI1i] = { [10] = 21, [3] = (lI1iiiIIiI1i11i1iII[3] - 78) % 256, [1] = (lI1iiiIIiI1i11i1iII[5] - 78) % 256 } else local iiIi1I1li1lIIiI1Iil = lI1iiiIIiI1i11i1iII[3] local lIl1liiillliIll111IIl = iiIi1I1li1lIIiI1Iil + 2 local iii1IIi1Ii11iI1iIiI = { IIli1ii1lil11II1IlI[iiIi1I1li1lIIiI1Iil](IIli1ii1lil11II1IlI[iiIi1I1li1lIIiI1Iil + 1], IIli1ii1lil11II1IlI[iiIi1I1li1lIIiI1Iil + 2]) } for lIlli1Il1lI1liII1i1Il = 1, lI1iiiIIiI1i11i1iII[5] do IIli1ii1lil11II1IlI[lIl1liiillliIll111IIl + lIlli1Il1lI1liII1i1Il] = iii1IIi1Ii11iI1iIiI[lIlli1Il1lI1liII1i1Il] end if IIli1ii1lil11II1IlI[iiIi1I1li1lIIiI1Iil + 3] ~= nil then IIli1ii1lil11II1IlI[iiIi1I1li1lIIiI1Iil + 2] = IIli1ii1lil11II1IlI[iiIi1I1li1lIIiI1Iil + 3] else lIll1i11iIiIi1iI1lI1i = lIll1i11iIiIi1iI1lI1i + 1 end end else lIliilIli1Ii1l1I1l111[lI1iiiIIiI1i11i1iII[4]] = IIli1ii1lil11II1IlI[lI1iiiIIiI1i11i1iII[3]] end elseif IlI11lIiiiliiIi1I1I == 12 then IIli1ii1lil11II1IlI[lI1iiiIIiI1i11i1iII[3]] = lI1iiiIIiI1i11i1iII[4] elseif lI1iiiIIiI1i11i1iII[5] == 109 then lIll1i11iIiIi1iI1lI1i = lIll1i11iIiIi1iI1lI1i - 1 lIliI1il1li1Il1II1Iil[lIll1i11iIiIi1iI1lI1i] = { [10] = 3, [3] = (lI1iiiIIiI1i11i1iII[3] - 13) % 256, [1] = (lI1iiiIIiI1i11i1iII[1] - 13) % 256 } elseif lI1iiiIIiI1i11i1iII[5] == 159 then lIll1i11iIiIi1iI1lI1i = lIll1i11iIiIi1iI1lI1i - 1 lIliI1il1li1Il1II1Iil[lIll1i11iIiIi1iI1lI1i] = { [10] = 15, [3] = (lI1iiiIIiI1i11i1iII[3] - 153) % 256, [5] = (lI1iiiIIiI1i11i1iII[1] - 153) % 256 } else IIli1ii1lil11II1IlI[lI1iiiIIiI1i11i1iII[3]] = i1iill1iIilIIIil1II[lI1iiiIIiI1i11i1iII[1]] end end end local iiIlIIIi1illIill1ii, ii1lli111il1ii1llIi, ii111i1Iii111liI1l1, lI1lI1lI1Ili11ll1iI = II1l1I111Illl1l1IiI(Iliiiiii1IIiIi1li11) if iiIlIIIi1illIill1ii then if ii111i1Iii111liI1l1 then return ilIill1IiIIilillI1I(IIli1ii1lil11II1IlI, ii111i1Iii111liI1l1, lI1lI1lI1Ili11ll1iI) end else II1iliil1lil1llIl1i("Luraph Script:" .. (IIlil1ii1lIIlIl1i1i[lIll1i11iIiIi1iI1lI1i - 1] or "") .. ": " .. Ill1i1liIlI11iIil1I(ii1lli111il1ii1llIi), 0) end end iI1Ili11lliI1l1IIi1(lIliiI1Ii111lI11iIi1I, lIliilIli1Ii1l1I1l111) return lIliiI1Ii111lI11iIi1I end local lIll1l1lI11lIl1ill1li = iii1I1i1l1iIiIiI1ii() return liIIii111i1iliiIil1(lIll1l1lI11lIl1ill1li, lIliilIli1Ii1l1I1l111)() end liI1IIIil1lIl1IlI1l("LPH!", I1iIIli1i1lI1I1l1li()) 