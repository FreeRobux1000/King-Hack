local il111liiIiiI11liili = assert local IIl1lIl1i1il1iIIl1i = select local iI1Il1lii11IliliI1i = tonumber local III11l1ilIIi1i1i11l = unpack local lIlI1IliilIi1lllII11i = pcall local lIllI1IiI1I1IlliII11i = setfenv local I1llI1III111ll1iii1 = setmetatable local lliI1I1IIIIIIii1iIl = type local lliIllllll1Il1iIIi1 = getfenv local iI11Il1IlI1l1li1IIi = tostring local ll1i1Iiliii11illlii = error local llI1IiI1llliliiI11i = string.sub local lIliIlll1I1iliIiII111 = string.byte local lIliIiiI1il11l1llil1i = string.char local lIlIIlI1illilIIIi1lll = string.rep local lil1iI1i11111ilIliI = string.gsub local i1lliIiIii1ililIilI = string.match local iiIl1liii1IliliI11l = table.insert local II1Ii1iIiilIiI1il11 = lIliIlll1I1iliIiII111("r", 1) local l1I1Iii111ilil1I11l, ll1ll1ii1li11lilill = #{3723}, #{ 2577, 370, 6020, 1526, 673, 4757, 4585, 2003, 1675, 917, 3466, 6038, 4409, 3231, 2891, 6196, 3352, 5469, 4611, 526, 722 } + II1Ii1iIiilIiI1il11 + 130936 local lIll1111iiiIl1iii11I1 = {} local Il1Ii1liIIliiliII1l = 1 local lIlIIlIllIilIli1iiI, lIl11II1I1iiiIil1lI1I local function lIllIillIil11IliIIli1(iIiilIIlIIiil1iii1l, lIlIIIllIl1IllilIilli) local lIlIilIIl1lIlll1I1III iIiilIIlIIiil1iii1l = lil1iI1i11111ilIliI(llI1IiI1llliliiI11i(iIiilIIlIIiil1iii1l, 5), "..", function(II1l1llIiI11il1iI1I) if lIliIlll1I1iliIiII111(II1l1llIiI11il1iI1I, 2) == 72 then lIlIilIIl1lIlll1I1III = iI1Il1lii11IliliI1i(llI1IiI1llliliiI11i(II1l1llIiI11il1iI1I, 1, 1)) return "" else local ililllIl1iI11iiIlIl = lIliIiiI1il11l1llil1i(iI1Il1lii11IliliI1i(II1l1llIiI11il1iI1I, 16)) if lIlIilIIl1lIlll1I1III then local llilII11liilliIiIIi = lIlIIlI1illilIIIi1lll(ililllIl1iI11iiIlIl, lIlIilIIl1lIlll1I1III) lIlIilIIl1lIlll1I1III = nil return llilII11liilliIiIIi else return ililllIl1iI11iiIlIl end end end) local function IIIiII1I1l1llIIl1II() local llI1ii1IilliI1Ill1l = lIliIlll1I1iliIiII111(iIiilIIlIIiil1iii1l, Il1Ii1liIIliiliII1l, Il1Ii1liIIliiliII1l) Il1Ii1liIIliiliII1l = Il1Ii1liIIliiliII1l + 1 return llI1ii1IilliI1Ill1l end local function i1Il11IiiII11IIlI11() local llI1ii1IilliI1Ill1l, ililllIl1iI11iiIlIl, llilII11liilliIiIIi, l1l111i1lll1I1ii11l = lIliIlll1I1iliIiII111(iIiilIIlIIiil1iii1l, Il1Ii1liIIliiliII1l, Il1Ii1liIIliiliII1l + 3) Il1Ii1liIIliiliII1l = Il1Ii1liIIliiliII1l + 4 return l1l111i1lll1I1ii11l * 16777216 + llilII11liilliIiIIi * 65536 + ililllIl1iI11iiIlIl * 256 + llI1ii1IilliI1Ill1l end local function lIlli1i1liiIIIlliIIlI(iIlIlillIIlIiiiI1li, lIllIIl11il1lII1II1ll, liIlI11lilII1llI1I1) if liIlI11lilII1llI1I1 then local iliilII11Iliii1ilII, lIlIiii1IlIIlI1II1IiI = 0, 0 for ii1IIlIIIlli1iliil1 = lIllIIl11il1lII1II1ll, liIlI11lilII1llI1I1 do iliilII11Iliii1ilII = iliilII11Iliii1ilII + 2 ^ lIlIiii1IlIIlI1II1IiI * lIlli1i1liiIIIlliIIlI(iIlIlillIIlIiiiI1li, ii1IIlIIIlli1iliil1) lIlIiii1IlIIlI1II1IiI = lIlIiii1IlIIlI1II1IiI + 1 end return iliilII11Iliii1ilII else local lIl1ll111IIIIil1l1l11 = 2 ^ (lIllIIl11il1lII1II1ll - 1) return lIl1ll111IIIIil1l1l11 <= iIlIlillIIlIiiiI1li % (lIl1ll111IIIIil1l1l11 + lIl1ll111IIIIil1l1l11) and 1 or 0 end end local function lIllll1iI1iIl1IIlllii() local llI1ii1IilliI1Ill1l, ililllIl1iI11iiIlIl = i1Il11IiiII11IIlI11(), i1Il11IiiII11IIlI11() if llI1ii1IilliI1Ill1l == 0 and ililllIl1iI11iiIlIl == 0 then return 0 end return (-2 * lIlli1i1liiIIIlliIIlI(ililllIl1iI11iiIlIl, 32) + 1) * 2 ^ (lIlli1i1liiIIIlliIIlI(ililllIl1iI11iiIlIl, 21, 31) - 1023) * ((lIlli1i1liiIIIlliIIlI(ililllIl1iI11iiIlIl, 1, 20) * 4294967296 + llI1ii1IilliI1Ill1l) / 4503599627370496 + 1) end local lIiiI11IlI1IillIlII = bit or bit32 local llllii1lili1llII1II = lIiiI11IlI1IillIlII and lIiiI11IlI1IillIlII.bxor or function(llI1ii1IilliI1Ill1l, ililllIl1iI11iiIlIl) local l1llililI1lIii1Ilil = 1 local llilII11liilliIiIIi = 0 while llI1ii1IilliI1Ill1l > 0 and ililllIl1iI11iiIlIl > 0 do local lIl1I1iliiIIilllilliI = llI1ii1IilliI1Ill1l % 2 local Il1ilII1lii1111iIl1 = ililllIl1iI11iiIlIl % 2 if lIl1I1iliiIIilllilliI ~= Il1ilII1lii1111iIl1 then llilII11liilliIiIIi = llilII11liilliIiIIi + l1llililI1lIii1Ilil end llI1ii1IilliI1Ill1l = (llI1ii1IilliI1Ill1l - lIl1I1iliiIIilllilliI) / 2 ililllIl1iI11iiIlIl = (ililllIl1iI11iiIlIl - Il1ilII1lii1111iIl1) / 2 l1llililI1lIii1Ilil = l1llililI1lIii1Ilil * 2 end if llI1ii1IilliI1Ill1l < ililllIl1iI11iiIlIl then llI1ii1IilliI1Ill1l = ililllIl1iI11iiIlIl end while llI1ii1IilliI1Ill1l > 0 do local lIl1I1iliiIIilllilliI = llI1ii1IilliI1Ill1l % 2 if lIl1I1iliiIIilllilliI > 0 then llilII11liilliIiIIi = llilII11liilliIiIIi + l1llililI1lIii1Ilil end llI1ii1IilliI1Ill1l = (llI1ii1IilliI1Ill1l - lIl1I1iliiIIilllilliI) / 2 l1llililI1lIii1Ilil = l1llililI1lIii1Ilil * 2 end return llilII11liilliIiIIi end local function l1I1lIlllIliI1iIiI1(I1lliIi1IIl1i1Iii11) local Ii11l1Ii1Ii11Iliill = { lIliIlll1I1iliIiII111(iIiilIIlIIiil1iii1l, Il1Ii1liIIliiliII1l, Il1Ii1liIIliiliII1l + 3) } Il1Ii1liIIliiliII1l = Il1Ii1liIIliiliII1l + 4 local llI1ii1IilliI1Ill1l = llllii1lili1llII1II(Ii11l1Ii1Ii11Iliill[1], lIl11II1I1iiiIil1lI1I) local ililllIl1iI11iiIlIl = llllii1lili1llII1II(Ii11l1Ii1Ii11Iliill[2], lIl11II1I1iiiIil1lI1I) local llilII11liilliIiIIi = llllii1lili1llII1II(Ii11l1Ii1Ii11Iliill[3], lIl11II1I1iiiIil1lI1I) local l1l111i1lll1I1ii11l = llllii1lili1llII1II(Ii11l1Ii1Ii11Iliill[4], lIl11II1I1iiiIil1lI1I) lIl11II1I1iiiIil1lI1I = (181 * lIl11II1I1iiiIil1lI1I + I1lliIi1IIl1i1Iii11) % 256 return l1l111i1lll1I1ii11l * 16777216 + llilII11liilliIiIIi * 65536 + ililllIl1iI11iiIlIl * 256 + llI1ii1IilliI1Ill1l end local function i1l1ll1ililIllIi111(iilII1liiliIl11Il1i) local lIl1iiIiI1I111I1iII1l = i1Il11IiiII11IIlI11() local lIl1I1I1lll1iiI1I1il1 = "" for ii1IIlIIIlli1iliil1 = l1I1Iii111ilil1I11l, lIl1iiIiI1I111I1iII1l do lIl1I1I1lll1iiI1I1il1 = lIl1I1I1lll1iiI1I1il1 .. lIliIiiI1il11l1llil1i(llllii1lili1llII1II(lIliIlll1I1iliIiII111(iIiilIIlIIiil1iii1l, Il1Ii1liIIliiliII1l + ii1IIlIIIlli1iliil1 - 1), lIlIIlIllIilIli1iiI)) lIlIIlIllIilIli1iiI = (iilII1liiliIl11Il1i * lIlIIlIllIilIli1iiI + 73) % 256 end Il1Ii1liIIliiliII1l = Il1Ii1liIIliiliII1l + lIl1iiIiI1I111I1iII1l return lIl1I1I1lll1iiI1I1il1 end lIlIIlIllIilIli1iiI = IIIiII1I1l1llIIl1II() lIl11II1I1iiiIil1lI1I = IIIiII1I1l1llIIl1II() local IilIil11I1lllliilI1 = {} for ii1IIlIIIlli1iliil1 = l1I1Iii111ilil1I11l, IIIiII1I1l1llIIl1II() do local ii1iIi1illllIIIilIi = IIIiII1I1l1llIIl1II() local iii11lI11i1lI1111I1 = (ii1IIlIIIlli1iliil1 - 1) * 2 IilIil11I1lllliilI1[iii11lI11i1lI1111I1] = lIlli1i1liiIIIlliIIlI(ii1iIi1illllIIIilIi, 1, 4) IilIil11I1lllliilI1[iii11lI11i1lI1111I1 + 1] = lIlli1i1liiIIIlliIIlI(ii1iIi1illllIIIilIi, 5, 8) end local function iiiil1l111iIiIl1lIl() local il1i1i11lIIIli11IIi = { {}, nil, nil, {}, {}, nil, {} } IIIiII1I1l1llIIl1II() il1i1i11lIIIli11IIi[3] = IIIiII1I1l1llIIl1II() il1i1i11lIIIli11IIi[2] = IIIiII1I1l1llIIl1II() local IIlI1IlIlili11Ili11 = i1Il11IiiII11IIlI11() for ii1IIlIIIlli1iliil1 = l1I1Iii111ilil1I11l, IIlI1IlIlili11Ili11 do il1i1i11lIIIli11IIi[7][ii1IIlIIIlli1iliil1 - l1I1Iii111ilil1I11l] = iiiil1l111iIiIl1lIl() end il1i1i11lIIIli11IIi[6] = IIIiII1I1l1llIIl1II() IIIiII1I1l1llIIl1II() local IIlI1IlIlili11Ili11 = i1Il11IiiII11IIlI11() - (#{ 1046, 2339, 1929, 4113, 6112, 819, 4967, 115, 3073, 514, 5898, 1434, 1469, 4017, 2537, 777, 951, 3697, 1605, 3458 } + II1Ii1iIiilIiI1il11 + 133571) local lIIilIII1IiilIIIiIl = IIIiII1I1l1llIIl1II() for ii1IIlIIIlli1iliil1 = l1I1Iii111ilil1I11l, IIlI1IlIlili11Ili11 do local li1Il1ilIiI1iI1iiii local lliI1I1IIIIIIii1iIl = IIIiII1I1l1llIIl1II() if lliI1I1IIIIIIii1iIl == #{ 4997, 5249, 6628, 5596, 4539, 2411, 5933, 318, 1243, 5341, 3457, 5907, 6109, 155, 3056, 5223, 17, 30, 5368, 2939, 4330, 1962, 5186 } + II1Ii1iIiilIiI1il11 + 7 then li1Il1ilIiI1iI1iiii = i1Il11IiiII11IIlI11() end if lliI1I1IIIIIIii1iIl == #{ 2598, 5637, 6778, 3419, 4062, 6078, 2992, 305, 1816, 1356, 1193, 1679, 4169, 6433, 4563, 153, 1536, 4377, 2773, 91, 6913, 4082, 6911, 814 } + II1Ii1iIiilIiI1il11 + -59 then li1Il1ilIiI1iI1iiii = llI1IiI1llliliiI11i(i1l1ll1ililIllIi111(#{ 3900, 3428, 3735, 6850, 5214, 6490, 1008, 995, 1131, 5757, 6111, 2623, 483, 3661, 1430, 5227, 3609, 1756, 2462, 827, 2391, 6577, 6273 } + II1Ii1iIiilIiI1il11 + -17), #{6744, 307}) end if lliI1I1IIIIIIii1iIl == #{ 1235, 5519, 734, 656, 3454, 5883, 4024, 5326, 2429, 750, 6627, 4005, 1446, 4496, 473, 5495, 4803, 4743, 3946, 3545, 5964 } + II1Ii1iIiilIiI1il11 + 115 then li1Il1ilIiI1iI1iiii = llI1IiI1llliliiI11i(i1l1ll1ililIllIi111(lIIilIII1IiilIIIiIl), #{ 1590, 308, 2852, 2446, 3209 }) end if lliI1I1IIIIIIii1iIl == #{ 847, 747, 6288, 749, 6705, 378, 972, 2810, 5831, 869, 469, 1910, 3177, 3582, 6903, 193, 2596, 391, 4409, 6387, 2117, 3796 } + II1Ii1iIiilIiI1il11 + -45 then li1Il1ilIiI1iI1iiii = lIllll1iI1iIl1IIlllii() + lIllll1iI1iIl1IIlllii() end if lliI1I1IIIIIIii1iIl == #{ 586, 2366, 3509, 6765, 2825, 6034, 5085, 1524, 6636, 894, 691, 229, 37, 4670, 2411, 5635, 1466, 5194, 792, 5899, 11, 6703, 6383 } + II1Ii1iIiilIiI1il11 + 1 then li1Il1ilIiI1iI1iiii = lIllll1iI1iIl1IIlllii() end if lliI1I1IIIIIIii1iIl == #{ 664, 1529, 941, 4616, 6319, 5087, 5937, 6462, 4892, 5638, 4587, 4939, 5698, 1575, 653, 1051, 5849, 541, 631, 6875, 6949, 1394 } + II1Ii1iIiilIiI1il11 + -93 then li1Il1ilIiI1iI1iiii = #{ 2788, 5267, 4853, 3155, 2516, 1283, 2026, 2051, 456, 789, 3829, 4668, 2818, 2797, 3747, 4250, 751, 80, 6262, 2064 } + II1Ii1iIiilIiI1il11 + 82014 == #{ 6524, 785, 826, 5593, 5691, 1912, 3283, 798, 1354, 6145, 1604, 807, 2393, 539, 2247, 1749, 5888, 475, 4154, 2319, 6895, 63, 2834 } + II1Ii1iIiilIiI1il11 + 26067 end if lliI1I1IIIIIIii1iIl == #{ 5147, 1018, 3019, 133, 3787, 2808, 1865, 6031, 4676, 791, 3610, 5036, 4080, 6886, 1167, 6087, 4833, 4261, 3841, 6470, 6517, 2693, 5159, 4572 } + II1Ii1iIiilIiI1il11 + 110 then li1Il1ilIiI1iI1iiii = #{ 5865, 1067, 265, 291, 1932, 567, 5555, 6539, 2982, 6423, 57, 6317, 2261, 4143, 5653, 1175, 2249, 6796, 2908, 4728, 3883 } + II1Ii1iIiilIiI1il11 + 50032 == #{ 5865, 1067, 265, 291, 1932, 567, 5555, 6539, 2982, 6423, 57, 6317, 2261, 4143, 5653, 1175, 2249, 6796, 2908, 4728, 3883 } + II1Ii1iIiilIiI1il11 + 50032 end if lliI1I1IIIIIIii1iIl == #{ 507, 477, 722, 2942, 3760, 3297, 5261, 3511, 5122, 3676, 3053, 4629, 4299, 1076, 1239, 5044, 815, 1916, 6533, 5817, 877 } + II1Ii1iIiilIiI1il11 + -87 then li1Il1ilIiI1iI1iiii = lIllll1iI1iIl1IIlllii() end if lliI1I1IIIIIIii1iIl == #{ 5384, 3054, 183, 4295, 5436, 6329, 6430, 4003, 162, 6426, 6930, 3903, 2671, 3269, 3889, 6449, 1553, 3452, 6962, 2589, 4504, 1275 } + II1Ii1iIiilIiI1il11 + 59 then li1Il1ilIiI1iI1iiii = IIIiII1I1l1llIIl1II() + i1Il11IiiII11IIlI11() + lIllll1iI1iIl1IIlllii() end il1i1i11lIIIli11IIi[5][ii1IIlIIIlli1iliil1 - l1I1Iii111ilil1I11l] = li1Il1ilIiI1iI1iiii end local IIlI1IlIlili11Ili11 = i1Il11IiiII11IIlI11() for ii1IIlIIIlli1iliil1 = l1I1Iii111ilil1I11l, IIlI1IlIlili11Ili11 do il1i1i11lIIIli11IIi[1][ii1IIlIIIlli1iliil1] = i1Il11IiiII11IIlI11() end i1Il11IiiII11IIlI11() local lilIll111iiI1li1li1 = i1Il11IiiII11IIlI11() - (#{ 4485, 6313, 536, 5358, 3402, 2899, 4586, 1974, 4261, 6547, 955, 700, 4314, 4964, 1895, 1136, 5141, 1647, 2862, 2931, 1176, 854 } + II1Ii1iIiilIiI1il11 + 133574) local liIll1IliliIIIlIiil = IIIiII1I1l1llIIl1II() for ii1IIlIIIlli1iliil1 = l1I1Iii111ilil1I11l, lilIll111iiI1li1li1 do local l1II1ll1i1iilIiilil = { nil, nil, nil, nil, nil, nil, nil, nil, nil, nil } local ii1iIi1illllIIIilIi = l1I1lIlllIliI1iIiI1(liIll1IliliIIIlIiil) l1II1ll1i1iilIiilil[51366] = lIlli1i1liiIIIlliIIlI(ii1iIi1illllIIIilIi, #{3433}, #{ 2362, 4499, 3083, 4254, 6628, 4435, 3003, 3007, 4382 }) l1II1ll1i1iilIiilil[6] = lIlli1i1liiIIIlliIIlI(ii1iIi1illllIIIilIi, #{5058}, #{ 5430, 1369, 266, 2350, 4742, 1851, 743, 2269, 1952 }) l1II1ll1i1iilIiilil[9] = lIlli1i1liiIIIlliIIlI(ii1iIi1illllIIIilIi, #{2680}, #{ 3293, 1310, 4204, 2857, 3494, 6718, 170, 4041, 5433, 2910, 4672, 1717, 354, 667, 6423, 1946, 853, 998 }) l1II1ll1i1iilIiilil[1] = lIlli1i1liiIIIlliIIlI(ii1iIi1illllIIIilIi, #{ 2621, 2172, 4964, 4646, 4201, 3143, 1270, 2597, 391, 4791, 319, 2983, 6108, 4012, 2118, 5567, 6928, 6095, 876 }, #{ 3656, 1655, 4587, 6147, 204, 3418, 4182, 4518, 3775, 146, 880, 1111, 1675, 2458, 178, 2236, 6647, 4296, 227, 2527, 5256 } + II1Ii1iIiilIiI1il11 + -109) l1II1ll1i1iilIiilil[4] = lIlli1i1liiIIIlliIIlI(ii1iIi1illllIIIilIi, #{ 5892, 367, 3234, 3265, 2294, 2709, 5363, 811, 3854, 1461, 5979, 2648, 841, 6805, 5544, 5409, 2100, 1659, 5306, 5667, 2778, 316 } + II1Ii1iIiilIiI1il11 + -109, #{ 2470, 73, 2785, 3391, 4027, 5775, 973, 2597, 398, 2166, 5681, 6925, 2690, 2437, 6308, 3884, 1445, 765, 4199, 255, 3015, 3022 } + II1Ii1iIiilIiI1il11 + -104) l1II1ll1i1iilIiilil[3] = lIlli1i1liiIIIlliIIlI(ii1iIi1illllIIIilIi, #{ 5724, 986, 1920, 6040, 916, 3247, 5215, 1832, 818, 2160 }, #{ 1818, 2416, 3111, 2238, 6381, 5621, 2503, 4353, 5525, 4708, 2181, 6756, 6774, 5595, 3154, 3109, 4131, 2831 }) il1i1i11lIIIli11IIi[4][ii1IIlIIIlli1iliil1] = l1II1ll1i1iilIiilil end for ii1IIlIIIlli1iliil1 = l1I1Iii111ilil1I11l, lilIll111iiI1li1li1 do local l1II1ll1i1iilIiilil = il1i1i11lIIIli11IIi[4][ii1IIlIIIlli1iliil1] local ll1lill1liiii1i1i11 = IilIil11I1lllliilI1[l1II1ll1i1iilIiilil[4]] if ll1lill1liiii1i1i11 == #{ 3122, 6122, 4386, 1098 } then l1II1ll1i1iilIiilil[2] = il1i1i11lIIIli11IIi[5][l1II1ll1i1iilIiilil[9]] end if ll1lill1liiii1i1i11 == #{4721, 1110} and l1II1ll1i1iilIiilil[3] > 255 then l1II1ll1i1iilIiilil[7] = true l1II1ll1i1iilIiilil[8] = il1i1i11lIIIli11IIi[5][l1II1ll1i1iilIiilil[3] - 256] end if ll1lill1liiii1i1i11 == #{ 568, 1816, 5419 } then if l1II1ll1i1iilIiilil[6] > 255 then l1II1ll1i1iilIiilil[10] = true l1II1ll1i1iilIiilil[5] = il1i1i11lIIIli11IIi[5][l1II1ll1i1iilIiilil[6] - 256] end if l1II1ll1i1iilIiilil[3] > 255 then l1II1ll1i1iilIiilil[7] = true l1II1ll1i1iilIiilil[8] = il1i1i11lIIIli11IIi[5][l1II1ll1i1iilIiilil[3] - 256] end end if ll1lill1liiii1i1i11 == #{5873} and l1II1ll1i1iilIiilil[6] > 255 then l1II1ll1i1iilIiilil[10] = true l1II1ll1i1iilIiilil[5] = il1i1i11lIIIli11IIi[5][l1II1ll1i1iilIiilil[6] - 256] end end i1Il11IiiII11IIlI11() return il1i1i11lIIIli11IIi end local function II1III11iIiiii1ll1l(il1i1i11lIIIli11IIi, lIlIIIllIl1IllilIilli, i1iIl1il11lIiiliIii) local iIililIl1iIiIiIlI11, IiIIilIilIIIllli1i1 = 16, 15 local lIl1i1i11i11I1llilI1I = il1i1i11lIIIli11IIi[4] local lIllli1IlI1ii11Ill11I = 3 local ll1Il11l1llliI1l1l1 = il1i1i11lIIIli11IIi[7] local lIl1IIi1I1lIil11iliii = il1i1i11lIIIli11IIi[6] local lIliliII1iIIlI111IIIi = il1i1i11lIIIli11IIi[2] local Ill11ll1IiIIII1i1il = 4 local l1Ii1Ii1IiiIiIlli1I = il1i1i11lIIIli11IIi[1] local IlliI11llliiIIlIIII = 6 local function lIl11l1li1lilll1lIlil(...) local Iil1I1il1IlIiIl1lll = 0 local li11Ii1llII1iiI1lII = { III11l1ilIIi1i1i11l({}, 1, lIliliII1iIIlI111IIIi) } local Iii1llI1llIII1il1Il = 1 local lli1lII1i1iliilIlII = {} local IlllliIliIiI11lIlII = {} local lIlIIIllIl1IllilIilli = lliIllllll1Il1iIIi1() local lIll11IiIlilIi1i11il1 = { ... } local lIl1I11i1l1IiIIIIiI11 = #lIll11IiIlilIi1i11il1 - 1 for ii1IIlIIIlli1iliil1 = 0, lIl1I11i1l1IiIIIIiI11 do if ii1IIlIIIlli1iliil1 < lIl1IIi1I1lIil11iliii then li11Ii1llII1iiI1lII[ii1IIlIIIlli1iliil1] = lIll11IiIlilIi1i11il1[ii1IIlIIIlli1iliil1 + 1] end end local function IIlllIIlliiIIl1liIi(...) local llilII11liilliIiIIi = IIl1lIl1i1il1iIIl1i("#", ...) local lIlIIll11liilli1IliIl = { ... } return llilII11liilliIiIIi, lIlIIll11liilli1IliIl end local function lilii1llIIIIIll1Iii() while true do local i1IIi1lIIl111lli11l = lIl1i1i11i11I1llilI1I[Iii1llI1llIII1il1Il] local lIli1iII111ill1iiI11l = i1IIi1lIIl111lli11l[4] Iii1llI1llIII1il1Il = Iii1llI1llIII1il1Il + 1 if lIli1iII111ill1iiI11l >= 11 then if lIli1iII111ill1iiI11l >= 17 then if lIli1iII111ill1iiI11l < 20 then if lIli1iII111ill1iiI11l < 18 then local llilII11liilliIiIIi if i1IIi1lIIl111lli11l[7] then llilII11liilliIiIIi = i1IIi1lIIl111lli11l[8] else llilII11liilliIiIIi = li11Ii1llII1iiI1lII[i1IIi1lIIl111lli11l[3]] end li11Ii1llII1iiI1lII[i1IIi1lIIl111lli11l[1]] = li11Ii1llII1iiI1lII[i1IIi1lIIl111lli11l[6]][llilII11liilliIiIIi] elseif lIli1iII111ill1iiI11l ~= 19 then if i1IIi1lIIl111lli11l[3] == 252 then Iii1llI1llIII1il1Il = Iii1llI1llIII1il1Il - 1 lIl1i1i11i11I1llilI1I[Iii1llI1llIII1il1Il] = { [4] = 16, [1] = (i1IIi1lIIl111lli11l[1] - 28) % 256, [6] = (i1IIi1lIIl111lli11l[6] - 28) % 256 } else li11Ii1llII1iiI1lII[i1IIi1lIIl111lli11l[1]] = #li11Ii1llII1iiI1lII[i1IIi1lIIl111lli11l[6]] end elseif not not li11Ii1llII1iiI1lII[i1IIi1lIIl111lli11l[1]] == (i1IIi1lIIl111lli11l[3] == 0) then Iii1llI1llIII1il1Il = Iii1llI1llIII1il1Il + 1 end elseif lIli1iII111ill1iiI11l < 21 then local ililllIl1iI11iiIlIl, llilII11liilliIiIIi if i1IIi1lIIl111lli11l[10] then ililllIl1iI11iiIlIl = i1IIi1lIIl111lli11l[5] else ililllIl1iI11iiIlIl = li11Ii1llII1iiI1lII[i1IIi1lIIl111lli11l[6]] end if i1IIi1lIIl111lli11l[7] then llilII11liilliIiIIi = i1IIi1lIIl111lli11l[8] else llilII11liilliIiIIi = li11Ii1llII1iiI1lII[i1IIi1lIIl111lli11l[3]] end li11Ii1llII1iiI1lII[i1IIi1lIIl111lli11l[1]][ililllIl1iI11iiIlIl] = llilII11liilliIiIIi elseif lIli1iII111ill1iiI11l ~= 22 then local iii11lI11i1lI1111I1 = (i1IIi1lIIl111lli11l[3] - 1) * 50 local i1IiillilIlI11IIliI = i1IIi1lIIl111lli11l[6] if i1IiillilIlI11IIliI == 0 then i1IiillilIlI11IIliI = Iil1I1il1IlIiIl1lll - i1IIi1lIIl111lli11l[1] end for ii1IIlIIIlli1iliil1 = 1, i1IiillilIlI11IIliI do li11Ii1llII1iiI1lII[i1IIi1lIIl111lli11l[1]][iii11lI11i1lI1111I1 + ii1IIlIIIlli1iliil1] = li11Ii1llII1iiI1lII[i1IIi1lIIl111lli11l[1] + ii1IIlIIIlli1iliil1] end else lIlIIIllIl1IllilIilli[i1IIi1lIIl111lli11l[2]] = li11Ii1llII1iiI1lII[i1IIi1lIIl111lli11l[1]] end elseif lIli1iII111ill1iiI11l < 14 then if lIli1iII111ill1iiI11l < 12 then local ililllIl1iI11iiIlIl, llilII11liilliIiIIi if i1IIi1lIIl111lli11l[10] then ililllIl1iI11iiIlIl = i1IIi1lIIl111lli11l[5] else ililllIl1iI11iiIlIl = li11Ii1llII1iiI1lII[i1IIi1lIIl111lli11l[6]] end if i1IIi1lIIl111lli11l[7] then llilII11liilliIiIIi = i1IIi1lIIl111lli11l[8] else llilII11liilliIiIIi = li11Ii1llII1iiI1lII[i1IIi1lIIl111lli11l[3]] end li11Ii1llII1iiI1lII[i1IIi1lIIl111lli11l[1]] = ililllIl1iI11iiIlIl * llilII11liilliIiIIi elseif lIli1iII111ill1iiI11l == 13 then li11Ii1llII1iiI1lII[i1IIi1lIIl111lli11l[1]] = lIlIIIllIl1IllilIilli[i1IIi1lIIl111lli11l[2]] elseif i1IIi1lIIl111lli11l[6] == 224 then Iii1llI1llIII1il1Il = Iii1llI1llIII1il1Il - 1 lIl1i1i11i11I1llilI1I[Iii1llI1llIII1il1Il] = { [4] = 15, [1] = (i1IIi1lIIl111lli11l[1] - 211) % 256, [6] = (i1IIi1lIIl111lli11l[3] - 211) % 256 } elseif i1IIi1lIIl111lli11l[6] == 25 then Iii1llI1llIII1il1Il = Iii1llI1llIII1il1Il - 1 lIl1i1i11i11I1llilI1I[Iii1llI1llIII1il1Il] = { [4] = 19, [1] = (i1IIi1lIIl111lli11l[1] - 20) % 256, [3] = (i1IIi1lIIl111lli11l[3] - 20) % 256 } else local lIlII1I1II11liIlII11I = i1IIi1lIIl111lli11l[1] local iii11lI11i1lI1111I1 = lIlII1I1II11liIlII11I + 2 local lilili1llIli1iii111 = { li11Ii1llII1iiI1lII[lIlII1I1II11liIlII11I](li11Ii1llII1iiI1lII[lIlII1I1II11liIlII11I + 1], li11Ii1llII1iiI1lII[lIlII1I1II11liIlII11I + 2]) } for ii1IIlIIIlli1iliil1 = 1, i1IIi1lIIl111lli11l[3] do li11Ii1llII1iiI1lII[iii11lI11i1lI1111I1 + ii1IIlIIIlli1iliil1] = lilili1llIli1iii111[ii1IIlIIIlli1iliil1] end if li11Ii1llII1iiI1lII[lIlII1I1II11liIlII11I + 3] ~= nil then li11Ii1llII1iiI1lII[lIlII1I1II11liIlII11I + 2] = li11Ii1llII1iiI1lII[lIlII1I1II11liIlII11I + 3] else Iii1llI1llIII1il1Il = Iii1llI1llIII1il1Il + 1 end end elseif lIli1iII111ill1iiI11l < 15 then li11Ii1llII1iiI1lII[i1IIi1lIIl111lli11l[1]] = { III11l1ilIIi1i1i11l(lIll1111iiiIl1iii11I1, 1, i1IIi1lIIl111lli11l[6] == 0 and 255 or i1IIi1lIIl111lli11l[6]) } elseif lIli1iII111ill1iiI11l == 16 then if i1IIi1lIIl111lli11l[3] == 59 then Iii1llI1llIII1il1Il = Iii1llI1llIII1il1Il - 1 lIl1i1i11i11I1llilI1I[Iii1llI1llIII1il1Il] = { [4] = 12, [1] = (i1IIi1lIIl111lli11l[1] - 140) % 256, [3] = (i1IIi1lIIl111lli11l[6] - 140) % 256 } else li11Ii1llII1iiI1lII[i1IIi1lIIl111lli11l[1]] = li11Ii1llII1iiI1lII[i1IIi1lIIl111lli11l[6]] end else li11Ii1llII1iiI1lII[i1IIi1lIIl111lli11l[1]] = i1iIl1il11lIiiliIii[i1IIi1lIIl111lli11l[6]] end elseif lIli1iII111ill1iiI11l < 5 then if lIli1iII111ill1iiI11l >= 2 then if lIli1iII111ill1iiI11l < 3 then local lIlII1I1II11liIlII11I = i1IIi1lIIl111lli11l[1] local lIll11IiIlilIi1i11il1 = i1IIi1lIIl111lli11l[6] local iiI11lllI1iilIIiiIl = i1IIi1lIIl111lli11l[3] local lIl1IlIlI1IIll1IlI1iI, I11ii1ii1IliiiIIIi1, lilii1llIIIIIll1Iii if lIll11IiIlilIi1i11il1 ~= 1 then if lIll11IiIlilIi1i11il1 ~= 0 then I11ii1ii1IliiiIIIi1 = lIlII1I1II11liIlII11I + lIll11IiIlilIi1i11il1 - 1 else I11ii1ii1IliiiIIIi1 = Iil1I1il1IlIiIl1lll end I11ii1ii1IliiiIIIi1, lIl1IlIlI1IIll1IlI1iI = IIlllIIlliiIIl1liIi(li11Ii1llII1iiI1lII[lIlII1I1II11liIlII11I](III11l1ilIIi1i1i11l(li11Ii1llII1iiI1lII, lIlII1I1II11liIlII11I + 1, I11ii1ii1IliiiIIIi1))) else I11ii1ii1IliiiIIIi1, lIl1IlIlI1IIll1IlI1iI = IIlllIIlliiIIl1liIi(li11Ii1llII1iiI1lII[lIlII1I1II11liIlII11I]()) end if iiI11lllI1iilIIiiIl ~= 1 then if iiI11lllI1iilIIiiIl ~= 0 then I11ii1ii1IliiiIIIi1 = lIlII1I1II11liIlII11I + iiI11lllI1iilIIiiIl - 2 Iil1I1il1IlIiIl1lll = I11ii1ii1IliiiIIIi1 + 1 else I11ii1ii1IliiiIIIi1 = I11ii1ii1IliiiIIIi1 + lIlII1I1II11liIlII11I - 1 Iil1I1il1IlIiIl1lll = I11ii1ii1IliiiIIIi1 end lilii1llIIIIIll1Iii = 0 for ii1IIlIIIlli1iliil1 = lIlII1I1II11liIlII11I, I11ii1ii1IliiiIIIi1 do lilii1llIIIIIll1Iii = lilii1llIIIIIll1Iii + 1 li11Ii1llII1iiI1lII[ii1IIlIIIlli1iliil1] = lIl1IlIlI1IIll1IlI1iI[lilii1llIIIIIll1Iii] end else Iil1I1il1IlIiIl1lll = lIlII1I1II11liIlII11I - 1 end for ii1IIlIIIlli1iliil1 = Iil1I1il1IlIiIl1lll + 1, lIliliII1iIIlI111IIIi do li11Ii1llII1iiI1lII[ii1IIlIIIlli1iliil1] = nil end elseif lIli1iII111ill1iiI11l == 4 then if i1IIi1lIIl111lli11l[3] == 186 then Iii1llI1llIII1il1Il = Iii1llI1llIII1il1Il - 1 lIl1i1i11i11I1llilI1I[Iii1llI1llIII1il1Il] = { [4] = 9, [1] = (i1IIi1lIIl111lli11l[1] - 121) % 256, [6] = (i1IIi1lIIl111lli11l[6] - 121) % 256 } else local I1Ii1iiii1i11ii11li = i1IIi1lIIl111lli11l[1] local lIlIIiii11lll11lIIlii = {} for IiIIIil1ill1lii1111, l1i11i1Ill1IIii11l1 in pairs(lli1lII1i1iliilIlII[li11Ii1llII1iiI1lII]) do for IiIIIil1ill1lii1111, iIIiiIlIIliliIi111i in pairs(l1i11i1Ill1IIii11l1) do if iIIiiIlIIliliIi111i[1] == li11Ii1llII1iiI1lII and I1Ii1iiii1i11ii11li <= iIIiiIlIIliliIi111i[2] then local iiiiIIlili1IiI11l11 = iIIiiIlIIliliIi111i[2] if not lIlIIiii11lll11lIIlii[iiiiIIlili1IiI11l11] then II1III11iIiiii1ll1l(IlllliIliIiI11lIlII, li11Ii1llII1iiI1lII[iiiiIIlili1IiI11l11]) lIlIIiii11lll11lIIlii[iiiiIIlili1IiI11l11] = #IlllliIliIiI11lIlII end iIIiiIlIIliliIi111i[1] = IlllliIliIiI11lIlII iIIiiIlIIliliIi111i[2] = lIlIIiii11lll11lIIlii[iiiiIIlili1IiI11l11] end end end end else li11Ii1llII1iiI1lII[i1IIi1lIIl111lli11l[1]] = i1IIi1lIIl111lli11l[6] ~= 0 if i1IIi1lIIl111lli11l[3] ~= 0 then Iii1llI1llIII1il1Il = Iii1llI1llIII1il1Il + 1 end end elseif lIli1iII111ill1iiI11l ~= 1 then local i1iiIlIIIIl1IIlii1I = ll1Il11l1llliI1l1l1[i1IIi1lIIl111lli11l[9]] local lIIIIli11l1IiIlIiIi = {} if i1iiIlIIIIl1IIlii1I[lIllli1IlI1ii11Ill11I] > 0 then do local l1i11i1Ill1IIii11l1 = {} lIIIIli11l1IiIlIiIi = I1llI1III111ll1iii1({}, { __index = function(lIlIIll11liilli1IliIl, lIli1I1l111IiiIi1il) local iIIiiIlIIliliIi111i = l1i11i1Ill1IIii11l1[lIli1I1l111IiiIi1il] return iIIiiIlIIliliIi111i[1][iIIiiIlIIliliIi111i[2]] end, __newindex = function(lIlIIll11liilli1IliIl, lIli1I1l111IiiIi1il, lIliIiillilIlIIiIIIIi) local iIIiiIlIIliliIi111i = l1i11i1Ill1IIii11l1[lIli1I1l111IiiIi1il] iIIiiIlIIliliIi111i[1][iIIiiIlIIliliIi111i[2]] = lIliIiillilIlIIiIIIIi end }) for ii1IIlIIIlli1iliil1 = 1, i1iiIlIIIIl1IIlii1I[lIllli1IlI1ii11Ill11I] do local I1iil1iIllil1lliI11 = lIl1i1i11i11I1llilI1I[Iii1llI1llIII1il1Il] if I1iil1iIllil1lliI11[Ill11ll1IiIIII1i1il] == iIililIl1iIiIiIlI11 then l1i11i1Ill1IIii11l1[ii1IIlIIIlli1iliil1 - 1] = { li11Ii1llII1iiI1lII, I1iil1iIllil1lliI11[IlliI11llliiIIlIIII] } elseif I1iil1iIllil1lliI11[Ill11ll1IiIIII1i1il] == IiIIilIilIIIllli1i1 then l1i11i1Ill1IIii11l1[ii1IIlIIIlli1iliil1 - 1] = { i1iIl1il11lIiiliIii, I1iil1iIllil1lliI11[IlliI11llliiIIlIIII] } end Iii1llI1llIII1il1Il = Iii1llI1llIII1il1Il + 1 end if not lli1lII1i1iliilIlII[li11Ii1llII1iiI1lII] then lli1lII1i1iliilIlII[li11Ii1llII1iiI1lII] = {l1i11i1Ill1IIii11l1} else iiIl1liii1IliliI11l(lli1lII1i1iliilIlII[li11Ii1llII1iiI1lII], l1i11i1Ill1IIii11l1) end end end local I1Il1Iil1I11Ilii1Il = II1III11iIiiii1ll1l(i1iiIlIIIIl1IIlii1I, lIlIIIllIl1IllilIilli, lIIIIli11l1IiIlIiIi) li11Ii1llII1iiI1lII[i1IIi1lIIl111lli11l[1]] = I1Il1Iil1I11Ilii1Il else local lIlllii11I1I1lliI11Il = li11Ii1llII1iiI1lII[i1IIi1lIIl111lli11l[6]] local llilII11liilliIiIIi if i1IIi1lIIl111lli11l[7] then llilII11liilliIiIIi = i1IIi1lIIl111lli11l[8] else llilII11liilliIiIIi = li11Ii1llII1iiI1lII[i1IIi1lIIl111lli11l[3]] end li11Ii1llII1iiI1lII[i1IIi1lIIl111lli11l[1] + 1] = lIlllii11I1I1lliI11Il li11Ii1llII1iiI1lII[i1IIi1lIIl111lli11l[1]] = lIlllii11I1I1lliI11Il[llilII11liilliIiIIi] end elseif lIli1iII111ill1iiI11l < 8 then if lIli1iII111ill1iiI11l >= 6 then if lIli1iII111ill1iiI11l ~= 7 then if i1IIi1lIIl111lli11l[3] == 15 then Iii1llI1llIII1il1Il = Iii1llI1llIII1il1Il - 1 lIl1i1i11i11I1llilI1I[Iii1llI1llIII1il1Il] = { [4] = 10, [1] = (i1IIi1lIIl111lli11l[1] - 109) % 256, [6] = (i1IIi1lIIl111lli11l[6] - 109) % 256 } else for ii1IIlIIIlli1iliil1 = i1IIi1lIIl111lli11l[1], i1IIi1lIIl111lli11l[6] do li11Ii1llII1iiI1lII[ii1IIlIIIlli1iliil1] = nil end end else li11Ii1llII1iiI1lII[i1IIi1lIIl111lli11l[1]] = i1IIi1lIIl111lli11l[2] end else Iii1llI1llIII1il1Il = Iii1llI1llIII1il1Il + (i1IIi1lIIl111lli11l[9] - ll1ll1ii1li11lilill) end elseif lIli1iII111ill1iiI11l >= 9 then if lIli1iII111ill1iiI11l == 10 then i1iIl1il11lIiiliIii[i1IIi1lIIl111lli11l[6]] = li11Ii1llII1iiI1lII[i1IIi1lIIl111lli11l[1]] else lli1lII1i1iliilIlII[li11Ii1llII1iiI1lII] = nil local lIlII1I1II11liIlII11I = i1IIi1lIIl111lli11l[1] local iIIlIi11I1IIIlIiI1i = i1IIi1lIIl111lli11l[6] if iIIlIi11I1IIIlIiI1i == 1 then return true end local I11ii1ii1IliiiIIIi1 = lIlII1I1II11liIlII11I + iIIlIi11I1IIIlIiI1i - 2 if iIIlIi11I1IIIlIiI1i == 0 then I11ii1ii1IliiiIIIi1 = Iil1I1il1IlIiIl1lll end return true, lIlII1I1II11liIlII11I, I11ii1ii1IliiiIIIi1 end else local ililllIl1iI11iiIlIl, llilII11liilliIiIIi if i1IIi1lIIl111lli11l[10] then ililllIl1iI11iiIlIl = i1IIi1lIIl111lli11l[5] else ililllIl1iI11iiIlIl = li11Ii1llII1iiI1lII[i1IIi1lIIl111lli11l[6]] end if i1IIi1lIIl111lli11l[7] then llilII11liilliIiIIi = i1IIi1lIIl111lli11l[8] else llilII11liilliIiIIi = li11Ii1llII1iiI1lII[i1IIi1lIIl111lli11l[3]] end if ililllIl1iI11iiIlIl == llilII11liilliIiIIi ~= (i1IIi1lIIl111lli11l[1] ~= 0) then Iii1llI1llIII1il1Il = Iii1llI1llIII1il1Il + 1 end end end end local lI1I1illliI111liI1i, lIl1I1I1lll1iiI1I1il1, I1Ii1iiii1i11ii11li, li1i11ii1iIi1ii111I = lIlI1IliilIi1lllII11i(lilii1llIIIIIll1Iii) if lI1I1illliI111liI1i then if I1Ii1iiii1i11ii11li then return III11l1ilIIi1i1i11l(li11Ii1llII1iiI1lII, I1Ii1iiii1i11ii11li, li1i11ii1iIi1ii111I) end else ll1i1Iiliii11illlii("Luraph Script:" .. (l1Ii1Ii1IiiIiIlli1I[Iii1llI1llIII1il1Il - 1] or "") .. ": " .. iI11Il1IlI1l1li1IIi(lIl1I1I1lll1iiI1I1il1), 0) end end lIllI1IiI1I1IlliII11i(lIl11l1li1lilll1lIlil, lIlIIIllIl1IllilIilli) return lIl11l1li1lilll1lIlil end local lIlIIiii11lll11lIIlii = iiiil1l111iIiIl1lIl() return II1III11iIiiii1ll1l(lIlIIiii11lll11lIIlii, lIlIIIllIl1IllilIilli)() end lIllIillIil11IliIIli1("LPH!", lliIllllll1Il1iIIi1()) 