local iiIi11IlllI1iIi1l1I = assert local iIliiiIlIl1I11iii11 = select local iiI11llI1iiillI11ll = tonumber local IiI1ilI11Il1iiii1i1 = unpack local i1IlIlIli1IilIiiI1l = pcall local lIlii1ii111IiIII1lI = setfenv local ii1ii1111I11i1l1iiI = setmetatable local lIli1i1II1liIIl1Ili1I = type local llI1lIIl1iiI1I1ilii = getfenv local lliIi1Ii11IIilIl1iI = tostring local IiiIII1l1liI1liil11 = error local l11IiIiiili1liiIIIl = string.sub local i1lIIIIlIIll11i111I = string.byte local iI11Ii1lIiIli11illi = string.char local lIliII1I11iiIili1lliI = string.rep local liiIIilIiI1II1IiilI = string.gsub local li1Iiiili11I1i1iIIi = string.match local llI1lilII1li1iI11lI = table.insert local ii1IIl1i11i1Il1iili = i1lIIIIlIIll11i111I("f", 1) local iIlilI1liili1111lII, lIli1111ll1il1IiilI11 = #{1253}, #{ 5858, 535, 4625, 860, 1863, 6184, 27, 92, 3147, 6393, 6425, 1569, 5129, 5585, 355, 4188, 82, 1493, 304, 1331, 4028, 6019, 6258 } + ii1IIl1i11i1Il1iili + 130946 local lIlIiliIlllIiI1li1IiI = {} local III1IllllliII1lIlii = 1 local iIili1lllll1IIlliII, ll1l1l1ll1I11i1lIii local function lIliilI11lli1llI11l1i(lliiiIiIIiIIl1I1iiI, lIlI1lll1l11ii1illIll) local l1Illi11i1lIiIliIil lliiiIiIIiIIl1I1iiI = liiIIilIiI1II1IiilI(l11IiIiiili1liiIIIl(lliiiIiIIiIIl1I1iiI, 5), "..", function(IiIiiiIi1lI1iIliI1i) if i1lIIIIlIIll11i111I(IiIiiiIi1lI1iIliI1i, 2) == 72 then l1Illi11i1lIiIliIil = iiI11llI1iiillI11ll(l11IiIiiili1liiIIIl(IiIiiiIi1lI1iIliI1i, 1, 1)) return "" else local lIll1iIlIIl111lIIll1l = iI11Ii1lIiIli11illi(iiI11llI1iiillI11ll(IiIiiiIi1lI1iIliI1i, 16)) if l1Illi11i1lIiIliIil then local ii1IIiliII1iiiIlill = lIliII1I11iiIili1lliI(lIll1iIlIIl111lIIll1l, l1Illi11i1lIiIliIil) l1Illi11i1lIiIliIil = nil return ii1IIiliII1iiiIlill else return lIll1iIlIIl111lIIll1l end end end) local function Ili1Iilliiil1iI1li1() local lIli1iiI1iI1liiiIlIi1 = i1lIIIIlIIll11i111I(lliiiIiIIiIIl1I1iiI, III1IllllliII1lIlii, III1IllllliII1lIlii) III1IllllliII1lIlii = III1IllllliII1lIlii + 1 return lIli1iiI1iI1liiiIlIi1 end local function lIl1i11IiIiIi11Ii1liI() local lIli1iiI1iI1liiiIlIi1, lIll1iIlIIl111lIIll1l, ii1IIiliII1iiiIlill, lliIl11ii1iI1I1IiiI = i1lIIIIlIIll11i111I(lliiiIiIIiIIl1I1iiI, III1IllllliII1lIlii, III1IllllliII1lIlii + 3) III1IllllliII1lIlii = III1IllllliII1lIlii + 4 return lliIl11ii1iI1I1IiiI * 16777216 + ii1IIiliII1iiiIlill * 65536 + lIll1iIlIIl111lIIll1l * 256 + lIli1iiI1iI1liiiIlIi1 end local function lIlI1IiiiIl11iI11I1ll(il1l1iIi1lillIi1I11, illliii1i1IlIi1IiII, lIli1ii11iiIii1III1i1) if lIli1ii11iiIii1III1i1 then local l1II1IIiliI1Il1llll, i111Iil1111i1lI111I = 0, 0 for IillIlIiIiil1l11il1 = illliii1i1IlIi1IiII, lIli1ii11iiIii1III1i1 do l1II1IIiliI1Il1llll = l1II1IIiliI1Il1llll + 2 ^ i111Iil1111i1lI111I * lIlI1IiiiIl11iI11I1ll(il1l1iIi1lillIi1I11, IillIlIiIiil1l11il1) i111Iil1111i1lI111I = i111Iil1111i1lI111I + 1 end return l1II1IIiliI1Il1llll else local lII1l1iIi1II1IlI1II = 2 ^ (illliii1i1IlIi1IiII - 1) return lII1l1iIi1II1IlI1II <= il1l1iIi1lillIi1I11 % (lII1l1iIi1II1IlI1II + lII1l1iIi1II1IlI1II) and 1 or 0 end end local function lIlilII1i1li111il1iI1() local lIli1iiI1iI1liiiIlIi1, lIll1iIlIIl111lIIll1l = lIl1i11IiIiIi11Ii1liI(), lIl1i11IiIiIi11Ii1liI() if lIli1iiI1iI1liiiIlIi1 == 0 and lIll1iIlIIl111lIIll1l == 0 then return 0 end return (-2 * lIlI1IiiiIl11iI11I1ll(lIll1iIlIIl111lIIll1l, 32) + 1) * 2 ^ (lIlI1IiiiIl11iI11I1ll(lIll1iIlIIl111lIIll1l, 21, 31) - 1023) * ((lIlI1IiiiIl11iI11I1ll(lIll1iIlIIl111lIIll1l, 1, 20) * 4294967296 + lIli1iiI1iI1liiiIlIi1) / 4503599627370496 + 1) end local lIlIi1lIi1II1i1ll11iI = bit or bit32 local iIiiiIIlIll1I1II1i1 = lIlIi1lIi1II1i1ll11iI and lIlIi1lIi1II1i1ll11iI.bxor or function(lIli1iiI1iI1liiiIlIi1, lIll1iIlIIl111lIIll1l) local l1i1IIl11llI11ii1ii = 1 local ii1IIiliII1iiiIlill = 0 while lIli1iiI1iI1liiiIlIi1 > 0 and lIll1iIlIIl111lIIll1l > 0 do local l1llIll1Il1lliii1ll = lIli1iiI1iI1liiiIlIi1 % 2 local lIl111II1iliIiil1l1iI = lIll1iIlIIl111lIIll1l % 2 if l1llIll1Il1lliii1ll ~= lIl111II1iliIiil1l1iI then ii1IIiliII1iiiIlill = ii1IIiliII1iiiIlill + l1i1IIl11llI11ii1ii end lIli1iiI1iI1liiiIlIi1 = (lIli1iiI1iI1liiiIlIi1 - l1llIll1Il1lliii1ll) / 2 lIll1iIlIIl111lIIll1l = (lIll1iIlIIl111lIIll1l - lIl111II1iliIiil1l1iI) / 2 l1i1IIl11llI11ii1ii = l1i1IIl11llI11ii1ii * 2 end if lIli1iiI1iI1liiiIlIi1 < lIll1iIlIIl111lIIll1l then lIli1iiI1iI1liiiIlIi1 = lIll1iIlIIl111lIIll1l end while lIli1iiI1iI1liiiIlIi1 > 0 do local l1llIll1Il1lliii1ll = lIli1iiI1iI1liiiIlIi1 % 2 if l1llIll1Il1lliii1ll > 0 then ii1IIiliII1iiiIlill = ii1IIiliII1iiiIlill + l1i1IIl11llI11ii1ii end lIli1iiI1iI1liiiIlIi1 = (lIli1iiI1iI1liiiIlIi1 - l1llIll1Il1lliii1ll) / 2 l1i1IIl11llI11ii1ii = l1i1IIl11llI11ii1ii * 2 end return ii1IIiliII1iiiIlill end local function iiliIliill11Iii111i(liIiII1IiilI1l1ll1l) local lIlli1Iiil1IlI1iIII1I = { i1lIIIIlIIll11i111I(lliiiIiIIiIIl1I1iiI, III1IllllliII1lIlii, III1IllllliII1lIlii + 3) } III1IllllliII1lIlii = III1IllllliII1lIlii + 4 local lIli1iiI1iI1liiiIlIi1 = iIiiiIIlIll1I1II1i1(lIlli1Iiil1IlI1iIII1I[1], ll1l1l1ll1I11i1lIii) local lIll1iIlIIl111lIIll1l = iIiiiIIlIll1I1II1i1(lIlli1Iiil1IlI1iIII1I[2], ll1l1l1ll1I11i1lIii) local ii1IIiliII1iiiIlill = iIiiiIIlIll1I1II1i1(lIlli1Iiil1IlI1iIII1I[3], ll1l1l1ll1I11i1lIii) local lliIl11ii1iI1I1IiiI = iIiiiIIlIll1I1II1i1(lIlli1Iiil1IlI1iIII1I[4], ll1l1l1ll1I11i1lIii) ll1l1l1ll1I11i1lIii = (189 * ll1l1l1ll1I11i1lIii + liIiII1IiilI1l1ll1l) % 256 return lliIl11ii1iI1I1IiiI * 16777216 + ii1IIiliII1iiiIlill * 65536 + lIll1iIlIIl111lIIll1l * 256 + lIli1iiI1iI1liiiIlIi1 end local function lIllIl1IIlII1i1i111ii(iIi1iiiiI11liIIiill) local lIlIIliII1l1I1iI11lIi = lIl1i11IiIiIi11Ii1liI() local IiII1l1liIiIli1iIl1 = "" for IillIlIiIiil1l11il1 = iIlilI1liili1111lII, lIlIIliII1l1I1iI11lIi do IiII1l1liIiIli1iIl1 = IiII1l1liIiIli1iIl1 .. iI11Ii1lIiIli11illi(iIiiiIIlIll1I1II1i1(i1lIIIIlIIll11i111I(lliiiIiIIiIIl1I1iiI, III1IllllliII1lIlii + IillIlIiIiil1l11il1 - 1), iIili1lllll1IIlliII)) iIili1lllll1IIlliII = (iIi1iiiiI11liIIiill * iIili1lllll1IIlliII + 77) % 256 end III1IllllliII1lIlii = III1IllllliII1lIlii + lIlIIliII1l1I1iI11lIi return IiII1l1liIiIli1iIl1 end iIili1lllll1IIlliII = Ili1Iilliiil1iI1li1() ll1l1l1ll1I11i1lIii = Ili1Iilliiil1iI1li1() local I1IilII1l1I1l1liIi1 = {} for IillIlIiIiil1l11il1 = iIlilI1liili1111lII, Ili1Iilliiil1iI1li1() do local lIl1IIl1I1lill1111iil = Ili1Iilliiil1iI1li1() local lIllliiIIIilI11lIl1lI = (IillIlIiIiil1l11il1 - 1) * 2 I1IilII1l1I1l1liIi1[lIllliiIIIilI11lIl1lI] = lIlI1IiiiIl11iI11I1ll(lIl1IIl1I1lill1111iil, 1, 4) I1IilII1l1I1l1liIi1[lIllliiIIIilI11lIl1lI + 1] = lIlI1IiiiIl11iI11I1ll(lIl1IIl1I1lill1111iil, 5, 8) end local function lIIi1I11llli1il1lIi() local I1lIii1l11IIi11lIli = { nil, nil, {}, {}, nil, {}, {} } local IIlIllI1II1iI1IiiIi = lIl1i11IiIiIi11Ii1liI() for IillIlIiIiil1l11il1 = iIlilI1liili1111lII, IIlIllI1II1iI1IiiIi do I1lIii1l11IIi11lIli[4][IillIlIiIiil1l11il1 - iIlilI1liili1111lII] = lIIi1I11llli1il1lIi() end lIl1i11IiIiIi11Ii1liI() local IIlIllI1II1iI1IiiIi = lIl1i11IiIiIi11Ii1liI() for IillIlIiIiil1l11il1 = iIlilI1liili1111lII, IIlIllI1II1iI1IiiIi do I1lIii1l11IIi11lIli[7][IillIlIiIiil1l11il1] = lIl1i11IiIiIi11Ii1liI() end Ili1Iilliiil1iI1li1() Ili1Iilliiil1iI1li1() Ili1Iilliiil1iI1li1() I1lIii1l11IIi11lIli[5] = Ili1Iilliiil1iI1li1() lIl1i11IiIiIi11Ii1liI() local lIl11II1l11lliIlilliI = lIl1i11IiIiIi11Ii1liI() - (#{ 756, 1485, 4946, 3057, 2019, 408, 4897, 877, 3647, 781, 1107, 2853, 6388, 6818, 4351, 5966, 5676, 194, 6786, 5440, 3993, 796, 6416 } + ii1IIl1i11i1Il1iili + 133601) local IiI1I11i111IllIiIlI = Ili1Iilliiil1iI1li1() for IillIlIiIiil1l11il1 = iIlilI1liili1111lII, lIl11II1l11lliIlilliI do local I111lIiii1I1iIl1111 = { nil, nil, nil, nil, nil, nil, nil, nil, nil, nil } local lIl1IIl1I1lill1111iil = iiliIliill11Iii111i(IiI1I11i111IllIiIlI) I111lIiii1I1iIl1111[8] = lIlI1IiiiIl11iI11I1ll(lIl1IIl1I1lill1111iil, #{685}, #{ 3498, 2456, 4760, 2381, 6614, 2762, 1535, 3446, 3459 }) I111lIiii1I1iIl1111[10] = lIlI1IiiiIl11iI11I1ll(lIl1IIl1I1lill1111iil, #{ 4619, 1351, 610, 6350, 4262, 5779, 633, 4602, 1532, 6875, 1135, 1060, 3130, 3023, 6341, 881, 3263, 618, 2945 }, #{ 5801, 2803, 2233, 1270, 6020, 1887, 5847, 5228, 793, 1835, 2523, 613, 3788, 5333, 5721, 6455, 4350, 5314, 3658, 3448, 4755, 4558 } + ii1IIl1i11i1Il1iili + -98) I111lIiii1I1iIl1111[9] = lIlI1IiiiIl11iI11I1ll(lIl1IIl1I1lill1111iil, #{6231}, #{ 5466, 3030, 3812, 315, 2940, 6934, 1065, 4633, 5007, 3304, 3821, 6545, 430, 394, 3908, 5158, 4111, 1888 }) I111lIiii1I1iIl1111[5] = lIlI1IiiiIl11iI11I1ll(lIl1IIl1I1lill1111iil, #{ 675, 5821, 1533, 1807, 31, 2488, 5096, 5458, 5287, 1487, 210, 1643, 3019, 2927, 3776, 5847, 3857, 1483, 1079, 1594, 1848, 1932, 5410, 3385 } + ii1IIl1i11i1Il1iili + -99, #{ 420, 631, 3549, 171, 4675, 3951, 1107, 2997, 5580, 5654, 3810, 2340, 5757, 4594, 5314, 5963, 3491, 1544, 3764, 4947, 6072, 1512, 2140, 3581 } + ii1IIl1i11i1Il1iili + -94) I111lIiii1I1iIl1111[7] = lIlI1IiiiIl11iI11I1ll(lIl1IIl1I1lill1111iil, #{ 1668, 1625, 6670, 4082, 68, 5197, 6290, 1714, 3180, 5983 }, #{ 6026, 5956, 3708, 5597, 4826, 4426, 6132, 3035, 1686, 4676, 2849, 6755, 2434, 2618, 1964, 4008, 3791, 6712 }) I1lIii1l11IIi11lIli[6][IillIlIiIiil1l11il1] = I111lIiii1I1iIl1111 end local IIlIllI1II1iI1IiiIi = lIl1i11IiIiIi11Ii1liI() - (#{ 5834, 2264, 3441, 311, 5145, 4969, 2660, 4091, 2142, 6654, 5865, 2511, 2664, 1579, 5187, 5116, 3121, 6399, 4624, 6328, 844, 1709 } + ii1IIl1i11i1Il1iili + 133581) local IIiIIlI1Ii111i1l1li = Ili1Iilliiil1iI1li1() for IillIlIiIiil1l11il1 = iIlilI1liili1111lII, IIlIllI1II1iI1IiiIi do local lIlili1illIIIi1I11111 local lIli1i1II1liIIl1Ili1I = Ili1Iilliiil1iI1li1() if lIli1i1II1liIIl1Ili1I == #{ 3816, 2325, 2185, 4943, 4886, 4718, 1679, 3678, 4753, 5815, 699, 3987, 145, 5707, 148, 460, 4402, 4168, 6051, 4074, 5906, 1879, 1236, 6201 } + ii1IIl1i11i1Il1iili + -14 then lIlili1illIIIi1I11111 = Ili1Iilliiil1iI1li1() end if lIli1i1II1liIIl1Ili1I == #{ 1791, 1961, 5595, 3769, 5690, 6459, 202, 4475, 5143, 2338, 5603, 3882, 1614, 1554, 2678, 811, 5142, 452, 977, 5465, 5417, 3673, 755, 3352 } + ii1IIl1i11i1Il1iili + -76 then lIlili1illIIIi1I11111 = #{ 4378, 3594, 3081, 499, 6304, 391, 2009, 2753, 5832, 630, 2322, 2257, 6539, 1233, 4116, 1006, 2566, 6203, 1384, 4288, 3093, 878, 2618 } + ii1IIl1i11i1Il1iili + 41538 == #{ 4378, 3594, 3081, 499, 6304, 391, 2009, 2753, 5832, 630, 2322, 2257, 6539, 1233, 4116, 1006, 2566, 6203, 1384, 4288, 3093, 878, 2618 } + ii1IIl1i11i1Il1iili + 41538 end if lIli1i1II1liIIl1Ili1I == #{ 6870, 2650, 1992, 6696, 895, 4706, 1239, 5043, 3787, 3152, 6958, 2061, 6161, 2484, 3997, 1045, 3991, 4671, 4421, 4248, 6474 } + ii1IIl1i11i1Il1iili + 56 then lIlili1illIIIi1I11111 = lIl1i11IiIiIi11Ii1liI() end if lIli1i1II1liIIl1Ili1I == #{ 1074, 3810, 4539, 2352, 1161, 1356, 3265, 3562, 4330, 2583, 3360, 1431, 4536, 4841, 6252, 2366, 3764, 4825, 6068, 5950, 3566 } + ii1IIl1i11i1Il1iili + -83 then lIlili1illIIIi1I11111 = lIlilII1i1li111il1iI1() end if lIli1i1II1liIIl1Ili1I == #{ 2135, 2844, 2847, 6835, 2711, 4202 } then lIlili1illIIIi1I11111 = #{ 5387, 5421, 3515, 4466, 4670, 5405, 971, 1460, 163, 6600, 3, 391, 2548, 1291, 1014, 4935, 72, 4729, 5834, 5605, 3703, 567, 5219 } + ii1IIl1i11i1Il1iili + 2058 == #{ 5880, 2948, 6657, 5921, 3157, 683, 6028, 2771, 2638, 6524, 4944, 2409, 4191, 6260, 992, 2299, 1280, 2634, 2097, 3128, 1196, 3588 } + ii1IIl1i11i1Il1iili + 122967 end if lIli1i1II1liIIl1Ili1I == #{ 6078, 2415, 6189, 1998, 12, 5100, 3868, 4613, 142, 3080, 5471, 1586, 4480, 6178, 1448, 377, 1576, 3443, 161, 2224, 2066, 6809, 4671, 638 } + ii1IIl1i11i1Il1iili + 13 then lIlili1illIIIi1I11111 = lIlilII1i1li111il1iI1() end if lIli1i1II1liIIl1Ili1I == #{ 6345, 4991, 5153, 903, 3523, 2, 6003, 592, 5612, 2036, 4927, 1990, 3269, 2341, 3515, 2912, 2156, 445, 4673, 2309, 2017, 983 } + ii1IIl1i11i1Il1iili + -54 then lIlili1illIIIi1I11111 = l11IiIiiili1liiIIIl(lIllIl1IIlII1i1i111ii(IIiIIlI1Ii111i1l1li), #{1940}) end if lIli1i1II1liIIl1Ili1I == #{ 6536, 693, 4613, 5442, 4332, 375, 5074, 3318, 6215, 875, 6838, 2212, 612, 1387, 1706, 2645, 58, 6339, 4542, 3056, 2285, 5877 } + ii1IIl1i11i1Il1iili + -11 then lIlili1illIIIi1I11111 = lIl1i11IiIiIi11Ii1liI() end if lIli1i1II1liIIl1Ili1I == #{ 6552, 1661, 2130, 3192, 3840, 3892, 5225, 211, 1637, 547, 4643, 3408, 5046, 5108, 3173, 2015, 88, 1281, 2692, 2715, 1110, 6964, 3762 } + ii1IIl1i11i1Il1iili + 91 then lIlili1illIIIi1I11111 = l11IiIiiili1liiIIIl(lIllIl1IIlII1i1i111ii(IIiIIlI1Ii111i1l1li), #{ 6411, 3338, 6799, 3714, 6876 }) end I1lIii1l11IIi11lIli[3][IillIlIiIiil1l11il1 - iIlilI1liili1111lII] = lIlili1illIIIi1I11111 end for IillIlIiIiil1l11il1 = iIlilI1liili1111lII, lIl11II1l11lliIlilliI do local I111lIiii1I1iIl1111 = I1lIii1l11IIi11lIli[6][IillIlIiIiil1l11il1] local III1I1I11i1ii11IiII = I1IilII1l1I1l1liIi1[I111lIiii1I1iIl1111[5]] if III1I1I11i1ii11IiII == #{321, 5882} and I111lIiii1I1iIl1111[7] > 255 then I111lIiii1I1iIl1111[4] = true I111lIiii1I1iIl1111[2] = I1lIii1l11IIi11lIli[3][I111lIiii1I1iIl1111[7] - 256] end if III1I1I11i1ii11IiII == #{ 5664, 4516, 6193 } then if I111lIiii1I1iIl1111[8] > 255 then I111lIiii1I1iIl1111[6] = true I111lIiii1I1iIl1111[1] = I1lIii1l11IIi11lIli[3][I111lIiii1I1iIl1111[8] - 256] end if I111lIiii1I1iIl1111[7] > 255 then I111lIiii1I1iIl1111[4] = true I111lIiii1I1iIl1111[2] = I1lIii1l11IIi11lIli[3][I111lIiii1I1iIl1111[7] - 256] end end if III1I1I11i1ii11IiII == #{ 1163, 4779, 805, 929 } then I111lIiii1I1iIl1111[3] = I1lIii1l11IIi11lIli[3][I111lIiii1I1iIl1111[9]] end if III1I1I11i1ii11IiII == #{1104} and I111lIiii1I1iIl1111[8] > 255 then I111lIiii1I1iIl1111[6] = true I111lIiii1I1iIl1111[1] = I1lIii1l11IIi11lIli[3][I111lIiii1I1iIl1111[8] - 256] end end Ili1Iilliiil1iI1li1() lIl1i11IiIiIi11Ii1liI() lIl1i11IiIiIi11Ii1liI() I1lIii1l11IIi11lIli[1] = Ili1Iilliiil1iI1li1() I1lIii1l11IIi11lIli[2] = Ili1Iilliiil1iI1li1() return I1lIii1l11IIi11lIli end local function lIl1i1iIill1iIiIllIil(I1lIii1l11IIi11lIli, lIlI1lll1l11ii1illIll, IiiIIliIiI11ili11Il) local iIll1I111lIi1iIi1iI, Ii11iI1III1IIllII1i = 5, 3 local lIl1lil1lillI1IilI11i = I1lIii1l11IIi11lIli[6] local IIi1lIi1l11lI11IIii = 5 local IIIiIiI111IilIlI111 = I1lIii1l11IIi11lIli[4] local lIllI1il1i1i1l1i1lI1l = I1lIii1l11IIi11lIli[1] local lIl11Il1lIiI1iI11iI = I1lIii1l11IIi11lIli[2] local lIlIIilil1iIl11liiIl1 = 5 local lIllllllliI1liliilll1 = I1lIii1l11IIi11lIli[7] local III1iilIiII1iiI1lll = 8 local function lIl1Illll111I1llil1I1(...) local II1I11iil11l11lillI = 0 local lIl1IIiIiIl111lil11il = { IiI1ilI11Il1iiii1i1({}, 1, lIl11Il1lIiI1iI11iI) } local ii1i1111li1I1iliI11 = 1 local Il1lIiIIll1I1Iil1il = {} local lIlIIIlli1lii1lIIIli1 = {} local lIlI1lll1l11ii1illIll = llI1lIIl1iiI1I1ilii() local lI1I1lI1i1iIIlIiIil = { ... } local IIIiIlIII1I1IIIl11I = #lI1I1lI1i1iIIlIiIil - 1 for IillIlIiIiil1l11il1 = 0, IIIiIlIII1I1IIIl11I do if IillIlIiIiil1l11il1 < lIllI1il1i1i1l1i1lI1l then lIl1IIiIiIl111lil11il[IillIlIiIiil1l11il1] = lI1I1lI1i1iIIlIiIil[IillIlIiIiil1l11il1 + 1] end end local function liIllI1lIIIilIlliiI(...) local ii1IIiliII1iiiIlill = iIliiiIlIl1I11iii11("#", ...) local iIilll1liI1III1Iiii = { ... } return ii1IIiliII1iiiIlill, iIilll1liI1III1Iiii end local function lIl1III1lIlIlIlli1Iil() while true do local iIl1IlliIliIi1II1il = lIl1lil1lillI1IilI11i[ii1i1111li1I1iliI11] local iIIlI1ii1IIlIlIIiii = iIl1IlliIliIi1II1il[5] ii1i1111li1I1iliI11 = ii1i1111li1I1iliI11 + 1 if iIIlI1ii1IIlIlIIiii >= 11 then if iIIlI1ii1IIlIlIIiii < 17 then if iIIlI1ii1IIlIlIIiii >= 14 then if iIIlI1ii1IIlIlIIiii < 15 then ii1i1111li1I1iliI11 = ii1i1111li1I1iliI11 + (iIl1IlliIliIi1II1il[9] - lIli1111ll1il1IiilI11) elseif iIIlI1ii1IIlIlIIiii == 16 then lIl1IIiIiIl111lil11il[iIl1IlliIliIi1II1il[10]] = lIlI1lll1l11ii1illIll[iIl1IlliIliIi1II1il[3]] else local ii1IIiliII1iiiIlill if iIl1IlliIliIi1II1il[4] then ii1IIiliII1iiiIlill = iIl1IlliIliIi1II1il[2] else ii1IIiliII1iiiIlill = lIl1IIiIiIl111lil11il[iIl1IlliIliIi1II1il[7]] end lIl1IIiIiIl111lil11il[iIl1IlliIliIi1II1il[10]] = lIl1IIiIiIl111lil11il[iIl1IlliIliIi1II1il[8]][ii1IIiliII1iiiIlill] end elseif iIIlI1ii1IIlIlIIiii >= 12 then if iIIlI1ii1IIlIlIIiii ~= 13 then local lIll1iIlIIl111lIIll1l, ii1IIiliII1iiiIlill if iIl1IlliIliIi1II1il[6] then lIll1iIlIIl111lIIll1l = iIl1IlliIliIi1II1il[1] else lIll1iIlIIl111lIIll1l = lIl1IIiIiIl111lil11il[iIl1IlliIliIi1II1il[8]] end if iIl1IlliIliIi1II1il[4] then ii1IIiliII1iiiIlill = iIl1IlliIliIi1II1il[2] else ii1IIiliII1iiiIlill = lIl1IIiIiIl111lil11il[iIl1IlliIliIi1II1il[7]] end lIl1IIiIiIl111lil11il[iIl1IlliIliIi1II1il[10]][lIll1iIlIIl111lIIll1l] = ii1IIiliII1iiiIlill else local lIll1iIlIIl111lIIll1l, ii1IIiliII1iiiIlill if iIl1IlliIliIi1II1il[6] then lIll1iIlIIl111lIIll1l = iIl1IlliIliIi1II1il[1] else lIll1iIlIIl111lIIll1l = lIl1IIiIiIl111lil11il[iIl1IlliIliIi1II1il[8]] end if iIl1IlliIliIi1II1il[4] then ii1IIiliII1iiiIlill = iIl1IlliIliIi1II1il[2] else ii1IIiliII1iiiIlill = lIl1IIiIiIl111lil11il[iIl1IlliIliIi1II1il[7]] end if lIll1iIlIIl111lIIll1l <= ii1IIiliII1iiiIlill ~= (iIl1IlliIliIi1II1il[10] ~= 0) then ii1i1111li1I1iliI11 = ii1i1111li1I1iliI11 + 1 end end elseif iIl1IlliIliIi1II1il[7] == 99 then ii1i1111li1I1iliI11 = ii1i1111li1I1iliI11 - 1 lIl1lil1lillI1IilI11i[ii1i1111li1I1iliI11] = { [5] = 5, [10] = (iIl1IlliIliIi1II1il[10] - 234) % 256, [8] = (iIl1IlliIliIi1II1il[8] - 234) % 256 } elseif iIl1IlliIliIi1II1il[7] == 8 then ii1i1111li1I1iliI11 = ii1i1111li1I1iliI11 - 1 lIl1lil1lillI1IilI11i[ii1i1111li1I1iliI11] = { [5] = 21, [10] = (iIl1IlliIliIi1II1il[10] - 241) % 256, [7] = (iIl1IlliIliIi1II1il[8] - 241) % 256 } else for IillIlIiIiil1l11il1 = iIl1IlliIliIi1II1il[10], iIl1IlliIliIi1II1il[8] do lIl1IIiIiIl111lil11il[IillIlIiIiil1l11il1] = nil end end elseif iIIlI1ii1IIlIlIIiii < 20 then if iIIlI1ii1IIlIlIIiii >= 18 then if iIIlI1ii1IIlIlIIiii ~= 19 then local lIll1iIlIIl111lIIll1l, ii1IIiliII1iiiIlill if iIl1IlliIliIi1II1il[6] then lIll1iIlIIl111lIIll1l = iIl1IlliIliIi1II1il[1] else lIll1iIlIIl111lIIll1l = lIl1IIiIiIl111lil11il[iIl1IlliIliIi1II1il[8]] end if iIl1IlliIliIi1II1il[4] then ii1IIiliII1iiiIlill = iIl1IlliIliIi1II1il[2] else ii1IIiliII1iiiIlill = lIl1IIiIiIl111lil11il[iIl1IlliIliIi1II1il[7]] end lIl1IIiIiIl111lil11il[iIl1IlliIliIi1II1il[10]] = lIll1iIlIIl111lIIll1l + ii1IIiliII1iiiIlill else local iii111li111I1li1ill = iIl1IlliIliIi1II1il[10] local liII111l1IIII1Il1Ii = {} for ilI1ii111Iillii1i1l, iIl1ilIlllilIlilI1I in pairs(Il1lIiIIll1I1Iil1il[lIl1IIiIiIl111lil11il]) do for ilI1ii111Iillii1i1l, lIll111iliIIIll1iiI11 in pairs(iIl1ilIlllilIlilI1I) do if lIll111iliIIIll1iiI11[1] == lIl1IIiIiIl111lil11il and iii111li111I1li1ill <= lIll111iliIIIll1iiI11[2] then local IiIil1I11iii11IliIl = lIll111iliIIIll1iiI11[2] if not liII111l1IIII1Il1Ii[IiIil1I11iii11IliIl] then lIl1i1iIill1iIiIllIil(lIlIIIlli1lii1lIIIli1, lIl1IIiIiIl111lil11il[IiIil1I11iii11IliIl]) liII111l1IIII1Il1Ii[IiIil1I11iii11IliIl] = #lIlIIIlli1lii1lIIIli1 end lIll111iliIIIll1iiI11[1] = lIlIIIlli1lii1lIIIli1 lIll111iliIIIll1iiI11[2] = liII111l1IIII1Il1Ii[IiIil1I11iii11IliIl] end end end end else lIl1IIiIiIl111lil11il[iIl1IlliIliIi1II1il[10]] = iIl1IlliIliIi1II1il[3] end elseif iIIlI1ii1IIlIlIIiii >= 21 then if iIIlI1ii1IIlIlIIiii == 22 then lIl1IIiIiIl111lil11il[iIl1IlliIliIi1II1il[10]] = { IiI1ilI11Il1iiii1i1(lIlIiliIlllIiI1li1IiI, 1, iIl1IlliIliIi1II1il[8] == 0 and 255 or iIl1IlliIliIi1II1il[8]) } elseif iIl1IlliIliIi1II1il[8] == 229 then ii1i1111li1I1iliI11 = ii1i1111li1I1iliI11 - 1 lIl1lil1lillI1IilI11i[ii1i1111li1I1iliI11] = { [5] = 10, [10] = (iIl1IlliIliIi1II1il[10] - 157) % 256, [8] = (iIl1IlliIliIi1II1il[7] - 157) % 256 } elseif not not lIl1IIiIiIl111lil11il[iIl1IlliIliIi1II1il[10]] == (iIl1IlliIliIi1II1il[7] == 0) then ii1i1111li1I1iliI11 = ii1i1111li1I1iliI11 + 1 end else local illI1I11ii1IiiliIil = iIl1IlliIliIi1II1il[10] local lI1I1lI1i1iIIlIiIil = iIl1IlliIliIi1II1il[8] local IiiI1I1liiIIIilI1iI = iIl1IlliIliIi1II1il[7] local iiI1llliii11l1Iilli, lIli1il11liIl1i1ii1l1, lIl1III1lIlIlIlli1Iil if lI1I1lI1i1iIIlIiIil ~= 1 then if lI1I1lI1i1iIIlIiIil ~= 0 then lIli1il11liIl1i1ii1l1 = illI1I11ii1IiiliIil + lI1I1lI1i1iIIlIiIil - 1 else lIli1il11liIl1i1ii1l1 = II1I11iil11l11lillI end lIli1il11liIl1i1ii1l1, iiI1llliii11l1Iilli = liIllI1lIIIilIlliiI(lIl1IIiIiIl111lil11il[illI1I11ii1IiiliIil](IiI1ilI11Il1iiii1i1(lIl1IIiIiIl111lil11il, illI1I11ii1IiiliIil + 1, lIli1il11liIl1i1ii1l1))) else lIli1il11liIl1i1ii1l1, iiI1llliii11l1Iilli = liIllI1lIIIilIlliiI(lIl1IIiIiIl111lil11il[illI1I11ii1IiiliIil]()) end if IiiI1I1liiIIIilI1iI ~= 1 then if IiiI1I1liiIIIilI1iI ~= 0 then lIli1il11liIl1i1ii1l1 = illI1I11ii1IiiliIil + IiiI1I1liiIIIilI1iI - 2 II1I11iil11l11lillI = lIli1il11liIl1i1ii1l1 + 1 else lIli1il11liIl1i1ii1l1 = lIli1il11liIl1i1ii1l1 + illI1I11ii1IiiliIil - 1 II1I11iil11l11lillI = lIli1il11liIl1i1ii1l1 end lIl1III1lIlIlIlli1Iil = 0 for IillIlIiIiil1l11il1 = illI1I11ii1IiiliIil, lIli1il11liIl1i1ii1l1 do lIl1III1lIlIlIlli1Iil = lIl1III1lIlIlIlli1Iil + 1 lIl1IIiIiIl111lil11il[IillIlIiIiil1l11il1] = iiI1llliii11l1Iilli[lIl1III1lIlIlIlli1Iil] end else II1I11iil11l11lillI = illI1I11ii1IiiliIil - 1 end for IillIlIiIiil1l11il1 = II1I11iil11l11lillI + 1, lIl11Il1lIiI1iI11iI do lIl1IIiIiIl111lil11il[IillIlIiIiil1l11il1] = nil end end elseif iIIlI1ii1IIlIlIIiii < 5 then if iIIlI1ii1IIlIlIIiii >= 2 then if iIIlI1ii1IIlIlIIiii < 3 then local lIll1iIlIIl111lIIll1l, ii1IIiliII1iiiIlill if iIl1IlliIliIi1II1il[6] then lIll1iIlIIl111lIIll1l = iIl1IlliIliIi1II1il[1] else lIll1iIlIIl111lIIll1l = lIl1IIiIiIl111lil11il[iIl1IlliIliIi1II1il[8]] end if iIl1IlliIliIi1II1il[4] then ii1IIiliII1iiiIlill = iIl1IlliIliIi1II1il[2] else ii1IIiliII1iiiIlill = lIl1IIiIiIl111lil11il[iIl1IlliIliIi1II1il[7]] end lIl1IIiIiIl111lil11il[iIl1IlliIliIi1II1il[10]] = lIll1iIlIIl111lIIll1l * ii1IIiliII1iiiIlill elseif iIIlI1ii1IIlIlIIiii == 4 then local illI1I11ii1IiiliIil = iIl1IlliIliIi1II1il[10] local lIllliiIIIilI11lIl1lI = illI1I11ii1IiiliIil + 2 local I11lil1l1ll11IiiiII = { lIl1IIiIiIl111lil11il[illI1I11ii1IiiliIil](lIl1IIiIiIl111lil11il[illI1I11ii1IiiliIil + 1], lIl1IIiIiIl111lil11il[illI1I11ii1IiiliIil + 2]) } for IillIlIiIiil1l11il1 = 1, iIl1IlliIliIi1II1il[7] do lIl1IIiIiIl111lil11il[lIllliiIIIilI11lIl1lI + IillIlIiIiil1l11il1] = I11lil1l1ll11IiiiII[IillIlIiIiil1l11il1] end if lIl1IIiIiIl111lil11il[illI1I11ii1IiiliIil + 3] ~= nil then lIl1IIiIiIl111lil11il[illI1I11ii1IiiliIil + 2] = lIl1IIiIiIl111lil11il[illI1I11ii1IiiliIil + 3] else ii1i1111li1I1iliI11 = ii1i1111li1I1iliI11 + 1 end elseif iIl1IlliIliIi1II1il[7] == 177 then ii1i1111li1I1iliI11 = ii1i1111li1I1iliI11 - 1 lIl1lil1lillI1IilI11i[ii1i1111li1I1iliI11] = { [5] = 19, [10] = (iIl1IlliIliIi1II1il[10] - 146) % 256, [8] = (iIl1IlliIliIi1II1il[8] - 146) % 256 } else lIl1IIiIiIl111lil11il[iIl1IlliIliIi1II1il[10]] = IiiIIliIiI11ili11Il[iIl1IlliIliIi1II1il[8]] end elseif iIIlI1ii1IIlIlIIiii == 1 then local IIIiiil11i1lllI1liI = IIIiIiI111IilIlI111[iIl1IlliIliIi1II1il[9]] local lIillii1iIiil1iiIii = {} if IIIiiil11i1lllI1liI[IIi1lIi1l11lI11IIii] > 0 then do local iIl1ilIlllilIlilI1I = {} lIillii1iIiil1iiIii = ii1ii1111I11i1l1iiI({}, { __index = function(iIilll1liI1III1Iiii, lI11Iiiil1I1iilIlli) local lIll111iliIIIll1iiI11 = iIl1ilIlllilIlilI1I[lI11Iiiil1I1iilIlli] return lIll111iliIIIll1iiI11[1][lIll111iliIIIll1iiI11[2]] end, __newindex = function(iIilll1liI1III1Iiii, lI11Iiiil1I1iilIlli, li11l1iillI11iillIl) local lIll111iliIIIll1iiI11 = iIl1ilIlllilIlilI1I[lI11Iiiil1I1iilIlli] lIll111iliIIIll1iiI11[1][lIll111iliIIIll1iiI11[2]] = li11l1iillI11iillIl end }) for IillIlIiIiil1l11il1 = 1, IIIiiil11i1lllI1liI[IIi1lIi1l11lI11IIii] do local iIIIllii1I1liI1lliI = lIl1lil1lillI1IilI11i[ii1i1111li1I1iliI11] if iIIIllii1I1liI1lliI[lIlIIilil1iIl11liiIl1] == iIll1I111lIi1iIi1iI then iIl1ilIlllilIlilI1I[IillIlIiIiil1l11il1 - 1] = { lIl1IIiIiIl111lil11il, iIIIllii1I1liI1lliI[III1iilIiII1iiI1lll] } elseif iIIIllii1I1liI1lliI[lIlIIilil1iIl11liiIl1] == Ii11iI1III1IIllII1i then iIl1ilIlllilIlilI1I[IillIlIiIiil1l11il1 - 1] = { IiiIIliIiI11ili11Il, iIIIllii1I1liI1lliI[III1iilIiII1iiI1lll] } end ii1i1111li1I1iliI11 = ii1i1111li1I1iliI11 + 1 end if not Il1lIiIIll1I1Iil1il[lIl1IIiIiIl111lil11il] then Il1lIiIIll1I1Iil1il[lIl1IIiIiIl111lil11il] = {iIl1ilIlllilIlilI1I} else llI1lilII1li1iI11lI(Il1lIiIIll1I1Iil1il[lIl1IIiIiIl111lil11il], iIl1ilIlllilIlilI1I) end end end local IIIi1lIiilIi1IIII1i = lIl1i1iIill1iIiIllIil(IIIiiil11i1lllI1liI, lIlI1lll1l11ii1illIll, lIillii1iIiil1iiIii) lIl1IIiIiIl111lil11il[iIl1IlliIliIi1II1il[10]] = IIIi1lIiilIi1IIII1i else lIl1IIiIiIl111lil11il[iIl1IlliIliIi1II1il[10]] = iIl1IlliIliIi1II1il[8] ~= 0 if iIl1IlliIliIi1II1il[7] ~= 0 then ii1i1111li1I1iliI11 = ii1i1111li1I1iliI11 + 1 end end elseif iIIlI1ii1IIlIlIIiii >= 8 then if iIIlI1ii1IIlIlIIiii < 9 then Il1lIiIIll1I1Iil1il[lIl1IIiIiIl111lil11il] = nil local illI1I11ii1IiiliIil = iIl1IlliIliIi1II1il[10] local IIIi1iIiiIl11il11II = iIl1IlliIliIi1II1il[8] if IIIi1iIiiIl11il11II == 1 then return true end local lIli1il11liIl1i1ii1l1 = illI1I11ii1IiiliIil + IIIi1iIiiIl11il11II - 2 if IIIi1iIiiIl11il11II == 0 then lIli1il11liIl1i1ii1l1 = II1I11iil11l11lillI end return true, illI1I11ii1IiiliIil, lIli1il11liIl1i1ii1l1 elseif iIIlI1ii1IIlIlIIiii == 10 then if iIl1IlliIliIi1II1il[7] == 39 then ii1i1111li1I1iliI11 = ii1i1111li1I1iliI11 - 1 lIl1lil1lillI1IilI11i[ii1i1111li1I1iliI11] = { [5] = 4, [10] = (iIl1IlliIliIi1II1il[10] - 169) % 256, [7] = (iIl1IlliIliIi1II1il[8] - 169) % 256 } else IiiIIliIiI11ili11Il[iIl1IlliIliIi1II1il[8]] = lIl1IIiIiIl111lil11il[iIl1IlliIliIi1II1il[10]] end else local lIll1iIlIIl111lIIll1l, ii1IIiliII1iiiIlill if iIl1IlliIliIi1II1il[6] then lIll1iIlIIl111lIIll1l = iIl1IlliIliIi1II1il[1] else lIll1iIlIIl111lIIll1l = lIl1IIiIiIl111lil11il[iIl1IlliIliIi1II1il[8]] end if iIl1IlliIliIi1II1il[4] then ii1IIiliII1iiiIlill = iIl1IlliIliIi1II1il[2] else ii1IIiliII1iiiIlill = lIl1IIiIiIl111lil11il[iIl1IlliIliIi1II1il[7]] end if lIll1iIlIIl111lIIll1l == ii1IIiliII1iiiIlill ~= (iIl1IlliIliIi1II1il[10] ~= 0) then ii1i1111li1I1iliI11 = ii1i1111li1I1iliI11 + 1 end end elseif iIIlI1ii1IIlIlIIiii >= 6 then if iIIlI1ii1IIlIlIIiii == 7 then local ili1lIiilli1iilII11 = lIl1IIiIiIl111lil11il[iIl1IlliIliIi1II1il[8]] local ii1IIiliII1iiiIlill if iIl1IlliIliIi1II1il[4] then ii1IIiliII1iiiIlill = iIl1IlliIliIi1II1il[2] else ii1IIiliII1iiiIlill = lIl1IIiIiIl111lil11il[iIl1IlliIliIi1II1il[7]] end lIl1IIiIiIl111lil11il[iIl1IlliIliIi1II1il[10] + 1] = ili1lIiilli1iilII11 lIl1IIiIiIl111lil11il[iIl1IlliIliIi1II1il[10]] = ili1lIiilli1iilII11[ii1IIiliII1iiiIlill] else lIlI1lll1l11ii1illIll[iIl1IlliIliIi1II1il[3]] = lIl1IIiIiIl111lil11il[iIl1IlliIliIi1II1il[10]] end elseif iIl1IlliIliIi1II1il[7] == 174 then ii1i1111li1I1iliI11 = ii1i1111li1I1iliI11 - 1 lIl1lil1lillI1IilI11i[ii1i1111li1I1iliI11] = { [5] = 3, [10] = (iIl1IlliIliIi1II1il[10] - 93) % 256, [8] = (iIl1IlliIliIi1II1il[8] - 93) % 256 } elseif iIl1IlliIliIi1II1il[7] == 102 then ii1i1111li1I1iliI11 = ii1i1111li1I1iliI11 - 1 lIl1lil1lillI1IilI11i[ii1i1111li1I1iliI11] = { [5] = 8, [10] = (iIl1IlliIliIi1II1il[10] - 21) % 256, [8] = (iIl1IlliIliIi1II1il[8] - 21) % 256 } else lIl1IIiIiIl111lil11il[iIl1IlliIliIi1II1il[10]] = lIl1IIiIiIl111lil11il[iIl1IlliIliIi1II1il[8]] end end end local iilll11iiliIililill, IiII1l1liIiIli1iIl1, iii111li111I1li1ill, Iliil1i1Ili1iiilI1i = i1IlIlIli1IilIiiI1l(lIl1III1lIlIlIlli1Iil) if iilll11iiliIililill then if iii111li111I1li1ill then return IiI1ilI11Il1iiii1i1(lIl1IIiIiIl111lil11il, iii111li111I1li1ill, Iliil1i1Ili1iiilI1i) end else IiiIII1l1liI1liil11("Luraph Script:" .. (lIllllllliI1liliilll1[ii1i1111li1I1iliI11 - 1] or "") .. ": " .. lliIi1Ii11IIilIl1iI(IiII1l1liIiIli1iIl1), 0) end end lIlii1ii111IiIII1lI(lIl1Illll111I1llil1I1, lIlI1lll1l11ii1illIll) return lIl1Illll111I1llil1I1 end local liII111l1IIII1Il1Ii = lIIi1I11llli1il1lIi() return lIl1i1iIill1iIiIllIil(liII111l1IIII1Il1Ii, lIlI1lll1l11ii1illIll)() end lIliilI11lli1llI11l1illI1lIIl1iiI1I1ilii()) 